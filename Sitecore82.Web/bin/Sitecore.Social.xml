<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Sitecore.Social</name>
    </assembly>
    <members>
        <member name="T:Sitecore.Social.AccountBusinessManager">
            <summary>
            Defines business methods to manage social accounts.
            </summary>
        </member>
        <member name="F:Sitecore.Social.AccountBusinessManager.ApplicationField">
            <summary>
            The application field
            </summary>
        </member>
        <member name="F:Sitecore.Social.AccountBusinessManager.AccountsRootPath">
            <summary>
            The accounts root path
            </summary>
        </member>
        <member name="F:Sitecore.Social.AccountBusinessManager.AccountBaseTemplateId">
            <summary>
            The account base template id
            </summary>
        </member>
        <member name="M:Sitecore.Social.AccountBusinessManager.#ctor(Sitecore.Social.INetworkBusinessManager,Sitecore.Social.IApplicationBusinessManager,Sitecore.Social.Configuration.IConfigurationFactory,Sitecore.Social.Builders.IAccountBuilderFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.AccountBusinessManager" /> class.
            </summary>
            <param name="networkBusinessManager">The network business manager.</param>
            <param name="applicationBusinessManager">The application business manager.</param>
            <param name="configurationFactory">The configuration factory.</param>
            <param name="accountBuilderFactory">The account builder factory.</param>
        </member>
        <member name="P:Sitecore.Social.AccountBusinessManager.AccountBuilderFactory">
            <summary>
            Gets the account builder factory.
            </summary>
            <value>
            The account builder factory.
            </value>
        </member>
        <member name="P:Sitecore.Social.AccountBusinessManager.NetworkBusinessManager">
            <summary>
            Gets or sets the network business manager.
            </summary>
            <value>
            The network business manager.
            </value>
        </member>
        <member name="P:Sitecore.Social.AccountBusinessManager.ApplicationBusinessManager">
            <summary>
            Gets or sets the application business manager.
            </summary>
            <value>
            The application business manager.
            </value>
        </member>
        <member name="P:Sitecore.Social.AccountBusinessManager.ConfigurationFactory">
            <summary>
            Gets or sets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="M:Sitecore.Social.AccountBusinessManager.GetAccount(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets an account by id.
            </summary>
            <param name="accountId">The account id.</param>
            <returns>
            The account. If the account is not found, <see cref="F:Sitecore.Social.Domain.Model.NetworkAccount.Empty" /> is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.AccountBusinessManager.GetAccounts(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets all accounts by network id. Returns a collection of accounts.
            </summary>
            <param name="networkId">The network id.</param>
            <returns>
            The account list. If no accounts are found an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.AccountBusinessManager.GetAccountsByApplication(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the accounts by application.
            </summary>
            <param name="applicationId">The application id.</param>
            <returns>
            The account list. If no accounts are found an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.AccountBusinessManager.GetAccountsByContainer(System.String)">
            <summary>
            Gets the accounts by container.
            </summary>
            <param name="accountContainer">The account container.</param>
            <returns>
            The account list. If no accounts are found an empty list is returned.
            </returns>
            <remarks>
            The sub-containers are not included to the search. To search in the sub-containers use <see cref="M:Sitecore.Social.AccountBusinessManager.GetAccountsByContainer(System.String,System.Boolean)" />.
            </remarks>
        </member>
        <member name="M:Sitecore.Social.AccountBusinessManager.GetAccountsByContainer(System.String,System.Boolean)">
            <summary>
            Gets the accounts by container.
            </summary>
            <param name="accountContainer">The account container.</param>
            <param name="searchForDescendants">if set to <c>true</c> sub-containers are included to the search.</param>
            <returns>
            The account list. If no accounts are found an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.AccountBusinessManager.AccountExists(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Checks if account exist.
            </summary>
            <param name="accountId">The account id.</param>
            <returns>If account exists True else False.</returns>
        </member>
        <member name="M:Sitecore.Social.AccountBusinessManager.CreateAccount(Sitecore.Social.Domain.Model.Account)">
            <summary>
            Creates an account.
            </summary>
            <param name="account">The account to create.</param>
            <exception cref="T:Sitecore.Social.Exceptions.AccountContainerIsNotFoundException">Account container is not found.</exception>
            <exception cref="T:Sitecore.Social.Exceptions.CannotReadAccountException">The account item was created, but could not be read.</exception>
            <remarks>
            The <see cref="P:Sitecore.Social.Domain.Model.Account.Id" /> field will contain identifier of the new account after creation.
            </remarks>
        </member>
        <member name="M:Sitecore.Social.AccountBusinessManager.GetNetworkAccountDisplayName(Sitecore.Social.Domain.Model.AccountCredentials,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets an account display name in a social network.
            </summary>
            <param name="accountCredentials">The account credentials.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="networkId">The network id.</param>
            <returns>
            The account display name.
            </returns>
        </member>
        <member name="M:Sitecore.Social.AccountBusinessManager.GetNetworkAccountDisplayName(Sitecore.Social.Domain.Model.AccountCredentials,Sitecore.Social.Domain.Model.ApplicationCredentials,System.String)">
            <summary>
            Gets an account display name in a social network.
            </summary>
            <param name="accountCredentials">The account credentials.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="networkName">Name of the network.</param>
            <returns>
            The account display name.
            </returns>
            <exception cref="T:Sitecore.Social.NetworkProviders.Exceptions.InterfaceIsNotSupportedByProviderException">The interface does not supported by the network provider.</exception>
        </member>
        <member name="M:Sitecore.Social.AccountBusinessManager.GetDaysUntilRenewalRequired(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the number of days before the required renewal of an account.
            </summary>
            <param name="accountId">The account id.</param>
            <returns>The number of days. If negative then account expired, if null then account renewal disabled or not needed.</returns>
        </member>
        <member name="T:Sitecore.Social.Accounts.Account">
            <summary>
            The account class.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Accounts.Account.#ctor(Sitecore.Social.NetworkProviders.Application)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Accounts.Account"/> class.
            </summary>
            <param name="application">The application.</param>
        </member>
        <member name="M:Sitecore.Social.Accounts.Account.#ctor(Sitecore.Social.NetworkProviders.Application,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Accounts.Account"/> class. Use this constructor for tests only
            </summary>
            <param name="application">The application.</param>
            <param name="properties">The properties. </param>
        </member>
        <member name="P:Sitecore.Social.Accounts.Account.Application">
            <summary>
            Gets the application
            </summary>
        </member>
        <member name="P:Sitecore.Social.Accounts.Account.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Sitecore.Social.Accounts.Account.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.String"/> at the specified index.
            </summary>
            <value></value>
        </member>
        <member name="P:Sitecore.Social.Accounts.Account.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="P:Sitecore.Social.Accounts.Account.DaysBeforeExpirationLeft">
            <summary>
            Gets the days before the account expiration left.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Accounts.AccountManager.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Accounts.AccountManager"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Accounts.AccountManager.#ctor(Sitecore.Social.Infrastructure.Wrappers.System.IDateTimeWrapper,Sitecore.Social.Networks.Managers.INetworkManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Accounts.AccountManager"/> class. Use this constructor for tests only
            </summary>
            <param name="dateTimeWrapper">The date time wrapper.</param>
            <param name="networkManager"> </param>
        </member>
        <member name="M:Sitecore.Social.Accounts.AccountManager.IsValidItem(Sitecore.Data.Items.Item)">
            <summary>
            Determines whether account item exists and contains existing application.
            </summary>
            <param name="accountItem">The account item.</param>
            <returns>
              <c>true</c> if account item is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Accounts.AccountManager.IsValidItem(Sitecore.Data.ID)">
            <summary>
            Determines whether account item exists and contains existing application.
            </summary>
            <param name="accountId">The account item id.</param>
            <returns>
              <c>true</c> if account item is valid; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Accounts.AccountManager.EnrichAccountNameWithExpirationDays(Sitecore.Social.Accounts.Account,System.String)">
            <summary>
            Enriches the account name with expiration days.
            </summary>
            <param name="account">The account.</param>
            <param name="accountDisplayName">Display name of the account.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.Accounts.Items.SocialAccountItem">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:Sitecore.Social.Analytics.Pipelines.DetermineInteractionChannel.SocialChannels">
            <summary>
            Determines the social channels for the interaction.
            </summary>
            <remarks>
            The social channels to be determined are listed at the <see cref="T:Sitecore.Social.Configuration.Model.InteractionChannelMappingsConfiguration"/>.
            </remarks>
        </member>
        <member name="M:Sitecore.Social.Analytics.Pipelines.DetermineInteractionChannel.SocialChannels.Process(Sitecore.Analytics.OmniChannel.Pipelines.DetermineInteractionChannel.DetermineChannelProcessorArgs)">
            <summary>
            Runs the processor.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="M:Sitecore.Social.Analytics.Pipelines.DetermineInteractionChannel.SocialChannels.DoProcess(Sitecore.Analytics.OmniChannel.Pipelines.DetermineInteractionChannel.DetermineChannelProcessorArgs)">
            <summary>
            Executes the process event.
            </summary>
            <param name="args">The arguments.</param>
        </member>
        <member name="T:Sitecore.Social.ApplicationBusinessManager">
            <summary>
            Defines business methods to manage social network applications.
            </summary>
        </member>
        <member name="F:Sitecore.Social.ApplicationBusinessManager.ApplicationIdFieldID">
            <summary>
            The application id field identifier
            </summary>
        </member>
        <member name="F:Sitecore.Social.ApplicationBusinessManager.ApplicationSecretFieldID">
            <summary>
            The application secret field identifier
            </summary>
        </member>
        <member name="F:Sitecore.Social.ApplicationBusinessManager.PublicApiKeyFieldID">
            <summary>
            The public API key field identifier
            </summary>
        </member>
        <member name="F:Sitecore.Social.ApplicationBusinessManager.NetworkFieldID">
            <summary>
            The network field identifier
            </summary>
        </member>
        <member name="F:Sitecore.Social.ApplicationBusinessManager.DefaultApplicationFolderField">
            <summary>
            The default application folder field
            </summary>
        </member>
        <member name="F:Sitecore.Social.ApplicationBusinessManager.RootApplicationFolder">
            <summary>
            The root application folder
            </summary>
        </member>
        <member name="F:Sitecore.Social.ApplicationBusinessManager.ApplicationTemplateId">
            <summary>
            The application template id
            </summary>
        </member>
        <member name="M:Sitecore.Social.ApplicationBusinessManager.GetApplication(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets an application by id.
            </summary>
            <param name="applicationId">The application id.</param>
            <returns>
            The application. If the application is not found <see cref="F:Sitecore.Social.Domain.Model.Application.Empty" /> is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ApplicationBusinessManager.GetApplicationContainer(System.String)">
            <summary>
            Gets the application container by account container.
            </summary>
            <param name="accountContainer">The account container.</param>
            <returns>
            The application container. If the application container is not found <c>string.Empty</c> is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ApplicationBusinessManager.GetApplications(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the applications by network id.
            </summary>
            <param name="networkId">Id of the network.</param>
            <returns>
            The application list. If no applications are found an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ApplicationBusinessManager.GetApplicationsByContainer(System.String,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the applications of a specific network by the container.
            </summary>
            <param name="applicationContainer">The application container.</param>
            <param name="networkId">Id of the network.</param>
            <returns>
            The application list. If no applications are found an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ApplicationBusinessManager.GetApplicationsByContainer(System.String,Sitecore.Social.Domain.Model.Identifier,System.Boolean)">
            <summary>
            Gets the applications by container.
            </summary>
            <param name="applicationContainer">The application container.</param>
            <param name="networkId">Id of the network.</param>
            <param name="searchForDescendants">if set to <c>true</c> sub-containers are included to the search.</param>
            <returns>
            The application list. If no applications are found an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ApplicationBusinessManager.CreateApplicationFrom(Sitecore.Data.Items.Item)">
            <summary>
            Creates the application from an application item.
            </summary>
            <param name="applicationItem">The application item.</param>
            <returns>The <see cref="T:Sitecore.Social.Domain.Model.Application"/>.</returns>
        </member>
        <member name="T:Sitecore.Social.Builders.AccountBuilder">
            <summary>
            Represents an abstract class of account builders.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.AccountBuilder.ReviewingRoleSeparator">
            <summary>
            The reviewing role separator
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.AccountBuilder.#ctor(Sitecore.Social.Configuration.Model.Api.AccountBuilderSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Builders.AccountBuilder"/> class.
            </summary>
            <param name="accountBuilderSettings">The account builder settings.</param>
        </member>
        <member name="P:Sitecore.Social.Builders.AccountBuilder.AccountTemplateId">
            <summary>
            Gets the account template id.
            </summary>
            <value>
            The account template id.
            </value>
        </member>
        <member name="M:Sitecore.Social.Builders.AccountBuilder.GetNetworkId(Sitecore.Data.Items.Item)">
            <summary>
            Gets the network identifier of the specified account item.
            </summary>
            <param name="accountItem">The account item.</param>
            <returns>
            The network identifier.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Builders.AccountBuilder.UpdateAccountItemFields(Sitecore.Data.Items.Item,Sitecore.Social.Domain.Model.Account)">
            <summary>
            Updates the account item fields from the account.
            </summary>
            <param name="accountItem">The account item.</param>
            <param name="account">The account.</param>
        </member>
        <member name="M:Sitecore.Social.Builders.AccountBuilder.BuildAccount(Sitecore.Data.Items.Item)">
            <summary>
            Builds the account from the account item.
            </summary>
            <param name="accountItem">The account item.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Domain.Model.Account" /> instance.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Builders.AccountBuilder.CreateAccountInstance">
            <summary>
            Creates the account instance.
            </summary>
            <returns>The <see cref="T:Sitecore.Social.Domain.Model.Account"/> instance.</returns>
        </member>
        <member name="T:Sitecore.Social.Builders.AccountBuilder.AccountFieldIds">
            <summary>
            Represents the account template field IDs.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.AccountBuilder.AccountFieldIds.Workflow">
            <summary>
            The workflow field ID.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.AccountBuilder.AccountFieldIds.Roles">
            <summary>
            The roles field ID.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.AccountBuilder.AccountFieldIds.Description">
            <summary>
            The description field ID.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.AccountBuilder.AccountFieldIds.MessageLanguage">
            <summary>
            The message language field ID.
            </summary>
        </member>
        <member name="T:Sitecore.Social.Builders.AccountBuilderFactory">
            <summary>
            Defines methods to get <see cref="T:Sitecore.Social.Builders.IAccountBuilder" /> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.AccountBuilderFactory.#ctor(Sitecore.Social.Configuration.IConfigurationFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Builders.AccountBuilderFactory"/> class.
            </summary>
            <param name="configurationFactory">The configuration factory.</param>
        </member>
        <member name="P:Sitecore.Social.Builders.AccountBuilderFactory.ConfigurationFactory">
            <summary>
            Gets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="M:Sitecore.Social.Builders.AccountBuilderFactory.GetBuilder(System.Type)">
            <summary>
            Gets the builder by account type.
            </summary>
            <param name="accountType">Type of the account.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Builders.IAccountBuilder" /> instance.
            </returns>
            <exception cref="T:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException">Account builder is not found.</exception>
        </member>
        <member name="M:Sitecore.Social.Builders.AccountBuilderFactory.GetBuilder(Sitecore.Data.ID)">
            <summary>
            Gets the builder by account item template ID.
            </summary>
            <param name="accountTemplateID">The account item template ID.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Builders.IAccountBuilder" /> instance.
            </returns>
            <exception cref="T:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException">The account builder for template ID is not found.</exception>
        </member>
        <member name="M:Sitecore.Social.Builders.AccountBuilderFactory.GetBuilder(System.Func{Sitecore.Social.Configuration.Model.Api.AccountBuilderSettings,System.Boolean})">
            <summary>
            Gets the builder.
            </summary>
            <param name="builderSettingsFilter">The builder settings filter.</param>
            <returns>The builder instance.</returns>
        </member>
        <member name="T:Sitecore.Social.Builders.ContainerPostingConfigurationBuilder">
            <summary>
            Represents an abstract class of container posting configuration builders.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.ContainerPostingConfigurationBuilder.ItemUriFieldId">
            <summary>
            The item URI field id
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.ContainerPostingConfigurationBuilder.ItemPublishedFieldId">
            <summary>
            The Item Published field unique identifier
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.ContainerPostingConfigurationBuilder.BuildFrom(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Builds from social message base.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Domain.Model.PostingConfiguration" />.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Builders.ContainerPostingConfigurationBuilder.GetPostingConfigurationBase(Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Gets the posting configuration base.
            </summary>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>The <see cref="T:Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase"/>.</returns>
        </member>
        <member name="M:Sitecore.Social.Builders.ContainerPostingConfigurationBuilder.UpdatePostingConfigurationItem(Sitecore.Data.Items.Item,Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Updates the posting configuration item.
            </summary>
            <param name="postingConfigurationItem">The posting configuration item.</param>
            <param name="postingConfiguration">The posting configuration.</param>
            <exception cref="T:System.FormatException">Container is not valid ItemUri string.</exception>
        </member>
        <member name="M:Sitecore.Social.Builders.ContainerPostingConfigurationBuilder.GetReviewingWorkflowId(Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Gets the reviewing workflow id.
            </summary>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>
            The reviewing workflow id.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Builders.ContainerPostingConfigurationBuilder.GetReviewingRoles(Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Gets the reviewing roles.
            </summary>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>
            The reviewing roles.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Builders.ContainerPostingConfigurationBuilder.ReadContainerValue(Sitecore.Data.Items.Item)">
            <summary>
            Reads the container value.
            </summary>
            <param name="postingConfigurationItem">The posting configuration item.</param>
            <returns>The container value.</returns>
        </member>
        <member name="M:Sitecore.Social.Builders.ContainerPostingConfigurationBuilder.ReadContainerPublishedValue(Sitecore.Data.Items.Item)">
            <summary>
            Reads the container published value.
            </summary>
            <param name="postingConfigurationItem">The posting configuration item.</param>
            <returns>The container published value.</returns>
        </member>
        <member name="M:Sitecore.Social.Builders.ContainerPostingConfigurationBuilder.Cast``1(Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Casts the specified posting configuration.
            </summary>
            <typeparam name="TPostingConfiguration">The type of the posting configuration.</typeparam>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>The specific posting configuration.</returns>
            <exception cref="T:System.InvalidCastException">The 'postingConfiguration' argument is not a specific type's object.</exception>
        </member>
        <member name="T:Sitecore.Social.Builders.ContentPostingConfigurationBuilder">
            <summary>
            Defines methods to get and manage <see cref="T:Sitecore.Social.Domain.Model.ContentPostingConfiguration"/> instances.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.ContentPostingConfigurationBuilder.PostWithItemPublishingFieldId">
            <summary>
            The post with item publishing field id
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.ContentPostingConfigurationBuilder.AccountFieldId">
            <summary>
            The account field id
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.ContentPostingConfigurationBuilder.BuildFrom(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Builds from social message base.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Domain.Model.ContentPostingConfiguration" />.
            </returns>
            <exception cref="T:Sitecore.Exceptions.ItemNotFoundException">PostingConfiguration  item is not found.</exception>
        </member>
        <member name="M:Sitecore.Social.Builders.ContentPostingConfigurationBuilder.GetPostingConfigurationBase(Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Gets the posting configuration base.
            </summary>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>The <see cref="T:Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase"/>.</returns>
            <exception cref="T:System.FormatException">The container is not valid ItemUri string.</exception>
        </member>
        <member name="M:Sitecore.Social.Builders.ContentPostingConfigurationBuilder.UpdatePostingConfigurationItem(Sitecore.Data.Items.Item,Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Updates the posting configuration item.
            </summary>
            <param name="postingConfigurationItem">The posting configuration item.</param>
            <param name="postingConfiguration">The posting configuration.</param>
        </member>
        <member name="M:Sitecore.Social.Builders.ContentPostingConfigurationBuilder.GetReviewingWorkflowId(Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Gets the reviewing workflow id.
            </summary>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>
            The reviewing workflow id.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Builders.ContentPostingConfigurationBuilder.GetReviewingRoles(Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Gets the reviewing roles.
            </summary>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>
            The reviewing roles.
            </returns>
        </member>
        <member name="T:Sitecore.Social.Builders.ContentPostingMessageStatusBuilder">
            <summary>
            Defines methods to get <see cref="T:Sitecore.Social.Domain.Model.MessageStatus"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.ContentPostingMessageStatusBuilder.BuildFrom(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Builds from social message base.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Domain.Model.MessageStatus" />.
            </returns>
        </member>
        <member name="T:Sitecore.Social.Builders.GoalPostingConfigurationBuilder">
            <summary>
            Defines methods to get and manage <see cref="T:Sitecore.Social.Domain.Model.GoalPostingConfiguration"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.GoalPostingConfigurationBuilder.BuildFrom(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Builds from social message base.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Domain.Model.PostingConfiguration" />.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Builders.GoalPostingConfigurationBuilder.GetPostingConfigurationBase(Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Gets the posting configuration base.
            </summary>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>The <see cref="T:Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase"/>.</returns>
            <exception cref="T:System.FormatException">Container is not valid ItemUri string.</exception>
        </member>
        <member name="M:Sitecore.Social.Builders.GoalPostingConfigurationBuilder.GetReviewingWorkflowId(Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Gets the reviewing workflow id.
            </summary>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>
            The reviewing workflow id.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Builders.GoalPostingConfigurationBuilder.GetReviewingRoles(Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Gets the reviewing roles.
            </summary>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>
            The reviewing roles.
            </returns>
        </member>
        <member name="T:Sitecore.Social.Builders.GoalPostingMessageStatusBuilder">
            <summary>
            Defines methods to get <see cref="T:Sitecore.Social.Domain.Model.MessageStatus"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.GoalPostingMessageStatusBuilder.BuildFrom(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Builds from social message base.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Domain.Model.MessageStatus" />.
            </returns>
        </member>
        <member name="T:Sitecore.Social.Builders.IAccountBuilder">
            <summary>
            Defines methods to build and manage <see cref="T:Sitecore.Social.Domain.Model.Account"/> instances.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Builders.IAccountBuilder.AccountTemplateId">
            <summary>
            Gets the account template id.
            </summary>
            <value>
            The account template id.
            </value>
        </member>
        <member name="M:Sitecore.Social.Builders.IAccountBuilder.GetNetworkId(Sitecore.Data.Items.Item)">
            <summary>
            Gets the network identifier of the specified account item.
            </summary>
            <param name="accountItem">The account item.</param>
            <returns>The network identifier.</returns>
        </member>
        <member name="M:Sitecore.Social.Builders.IAccountBuilder.UpdateAccountItemFields(Sitecore.Data.Items.Item,Sitecore.Social.Domain.Model.Account)">
            <summary>
            Updates the account item fields from the account.
            </summary>
            <param name="accountItem">The account item.</param>
            <param name="account">The account.</param>
        </member>
        <member name="M:Sitecore.Social.Builders.IAccountBuilder.BuildAccount(Sitecore.Data.Items.Item)">
            <summary>
            Builds the account from the account item.
            </summary>
            <param name="accountItem">The account item.</param>
            <returns>The <see cref="T:Sitecore.Social.Domain.Model.Account"/> instance.</returns>
        </member>
        <member name="T:Sitecore.Social.Builders.IAccountBuilderFactory">
            <summary>
            Defines methods to get <see cref="T:Sitecore.Social.Builders.IAccountBuilder"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.IAccountBuilderFactory.GetBuilder(System.Type)">
            <summary>
            Gets the builder by account type.
            </summary>
            <param name="accountType">Type of the account.</param>
            <returns>The <see cref="T:Sitecore.Social.Builders.IAccountBuilder"/> instance.</returns>
        </member>
        <member name="M:Sitecore.Social.Builders.IAccountBuilderFactory.GetBuilder(Sitecore.Data.ID)">
            <summary>
            Gets the builder by account item template ID.
            </summary>
            <param name="accountTemplateID">The account item template ID.</param>
            <returns>The <see cref="T:Sitecore.Social.Builders.IAccountBuilder"/> instance.</returns>
        </member>
        <member name="T:Sitecore.Social.Builders.IMessageDataBuilder">
            <summary>
            Defines methods to build <see cref="T:Sitecore.Social.Domain.Model.MessageData"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.IMessageDataBuilder.BuildFrom(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Builds from social message base.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>The <seealso cref="T:Sitecore.Social.Domain.Model.MessageData"/></returns>
        </member>
        <member name="M:Sitecore.Social.Builders.IMessageDataBuilder.BuildFrom(Sitecore.Social.Domain.Model.MessageData)">
            <summary>
            Builds from social message base.
            </summary>
            <param name="messageData">The social message base.</param>
            <returns>The <seealso cref="T:Sitecore.Social.NetworkProviders.Messages.Message"/></returns>
        </member>
        <member name="M:Sitecore.Social.Builders.IMessageDataBuilder.UpdateMessageItem(Sitecore.Data.Items.Item,Sitecore.Social.Domain.Model.MessageData)">
            <summary>
            Updates the message item.
            </summary>
            <param name="messageItem">The message item.</param>
            <param name="messageData">The message data.</param>
        </member>
        <member name="T:Sitecore.Social.Builders.IMessageDataBuilderFactory">
            <summary>
            Defines methods to get <see cref="T:Sitecore.Social.Builders.IMessageDataBuilder"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.IMessageDataBuilderFactory.GetBuilderByMessageItemBase(System.Type)">
            <summary>
            Gets the builder by message item base.
            </summary>
            <param name="messageItemBaseType">Type of the message item base.</param>
            <returns>The <see cref="T:Sitecore.Social.Builders.IMessageDataBuilder"/>.</returns>
        </member>
        <member name="M:Sitecore.Social.Builders.IMessageDataBuilderFactory.GetBuilderByMessageData(System.Type)">
            <summary>
            Gets the builder by message data type.
            </summary>
            <param name="messageDataType">Type of the message data.</param>
            <returns>The <see cref="T:Sitecore.Social.Builders.IMessageDataBuilder"/>.</returns>
        </member>
        <member name="T:Sitecore.Social.Builders.IMessageStatusBuilder">
            <summary>
            Defines methods to build <see cref="T:Sitecore.Social.Domain.Model.MessageStatus"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.IMessageStatusBuilder.BuildFrom(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Builds from social message base.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>The <see cref="T:Sitecore.Social.Domain.Model.MessageStatus"/>.</returns>
        </member>
        <member name="T:Sitecore.Social.Builders.IMessageStatusBuilderFactory">
            <summary>
            Defines methods to get <see cref="T:Sitecore.Social.Builders.IMessageStatusBuilder"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.IMessageStatusBuilderFactory.GetBuilder(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Gets the builder by social message base.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>The <see cref="T:Sitecore.Social.Builders.IMessageStatusBuilder"/>.</returns>
        </member>
        <member name="T:Sitecore.Social.Builders.IPostingConfigurationBuilder">
            <summary>
            Defines methods to build and manage <see cref="T:Sitecore.Social.Domain.Model.PostingConfiguration"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.IPostingConfigurationBuilder.BuildFrom(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Builds from social message base.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>The <see cref="T:Sitecore.Social.Domain.Model.PostingConfiguration"/>.</returns>
        </member>
        <member name="M:Sitecore.Social.Builders.IPostingConfigurationBuilder.GetPostingConfigurationBase(Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Gets the posting configuration base.
            </summary>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>The <see cref="T:Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase"/>.</returns>
        </member>
        <member name="M:Sitecore.Social.Builders.IPostingConfigurationBuilder.UpdatePostingConfigurationItem(Sitecore.Data.Items.Item,Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Updates the posting configuration item.
            </summary>
            <param name="postingConfigurationItem">The posting configuration item.</param>
            <param name="postingConfiguration">The posting configuration.</param>
        </member>
        <member name="M:Sitecore.Social.Builders.IPostingConfigurationBuilder.GetReviewingWorkflowId(Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Gets the reviewing workflow id.
            </summary>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>The reviewing workflow id.</returns>
        </member>
        <member name="M:Sitecore.Social.Builders.IPostingConfigurationBuilder.GetReviewingRoles(Sitecore.Social.Domain.Model.PostingConfiguration)">
            <summary>
            Gets the reviewing roles.
            </summary>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>The reviewing roles.</returns>
        </member>
        <member name="T:Sitecore.Social.Builders.IPostingConfigurationBuilderFactory">
            <summary>
            Defines methods to get <see cref="T:Sitecore.Social.Builders.IPostingConfigurationBuilder"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.IPostingConfigurationBuilderFactory.GetBuilder(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Gets the builder by social message base.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>The <see cref="T:Sitecore.Social.Builders.IPostingConfigurationBuilder"/>.</returns>
        </member>
        <member name="M:Sitecore.Social.Builders.IPostingConfigurationBuilderFactory.GetBuilder(System.Type)">
            <summary>
            Gets the builder by posting configuration type.
            </summary>
            <param name="postingConfigurationType">Type of the posting configuration.</param>
            <returns>The <see cref="T:Sitecore.Social.Builders.IPostingConfigurationBuilder"/>.</returns>
        </member>
        <member name="T:Sitecore.Social.Builders.SocialMarketerAccountBuilder">
            <summary>
            Defines methods to get and manage <see cref="T:Sitecore.Social.Domain.Model.SocialMarketerAccount"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.SocialMarketerAccountBuilder.#ctor(Sitecore.Social.Configuration.Model.Api.AccountBuilderSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Builders.SocialMarketerAccountBuilder"/> class.
            </summary>
            <param name="accountBuilderSettings">The account builder settings.</param>
        </member>
        <member name="M:Sitecore.Social.Builders.SocialMarketerAccountBuilder.GetNetworkId(Sitecore.Data.Items.Item)">
            <summary>
            Gets the network identifier of the specified account item.
            </summary>
            <param name="accountItem">The account item.</param>
            <returns>
            The network identifier.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Builders.SocialMarketerAccountBuilder.CreateAccountInstance">
            <summary>
            Creates the account instance.
            </summary>
            <returns>
            The <see cref="T:Sitecore.Social.Domain.Model.SocialMarketerAccount" /> instance.
            </returns>
        </member>
        <member name="T:Sitecore.Social.Builders.MessageDataBuilder">
            <summary>
            Defines an abstract class of <see cref="T:Sitecore.Social.Domain.Model.MessageData"/> builders.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.MessageDataBuilder.DisplayNameFieldId">
            <summary>
            The display name field id
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.MessageDataBuilder.LinkFieldId">
            <summary>
            The link field id
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.MessageDataBuilder.CampaignFieldId">
            <summary>
            The campaign field id
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.MessageDataBuilder.MessageFieldId">
            <summary>
            The text field id
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.MessageDataBuilder.CreatedDateFieldId">
            <summary>
            The created date field id
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.MessageDataBuilder.PostedDateFieldId">
            <summary>
            The posted date field id
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.MessageDataBuilder.BuildFrom(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Builds from social message base.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>
            The <seealso cref="T:Sitecore.Social.Domain.Model.MessageData" />
            </returns>
        </member>
        <member name="M:Sitecore.Social.Builders.MessageDataBuilder.BuildFrom(Sitecore.Social.Domain.Model.MessageData)">
            <summary>
            Builds from social message base.
            </summary>
            <param name="messageData">The social message base.</param>
            <returns>The <seealso cref="T:Sitecore.Social.NetworkProviders.Messages.Message"/></returns>
        </member>
        <member name="M:Sitecore.Social.Builders.MessageDataBuilder.UpdateMessageItem(Sitecore.Data.Items.Item,Sitecore.Social.Domain.Model.MessageData)">
            <summary>
            Updates the message item.
            </summary>
            <param name="messageItem">The message item.</param>
            <param name="messageData">The message data.</param>
        </member>
        <member name="T:Sitecore.Social.Builders.MessageDataBuilderFactory">
            <summary>
            Defines methods to get <see cref="T:Sitecore.Social.Builders.IMessageDataBuilder"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.MessageDataBuilderFactory.#ctor(Sitecore.Social.Configuration.IConfigurationFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Builders.MessageDataBuilderFactory"/> class with the specific <see cref="T:Sitecore.Social.Configuration.IConfigurationFactory"/>.
            </summary>
            <param name="configurationFactory">The configuration factory.</param>
        </member>
        <member name="P:Sitecore.Social.Builders.MessageDataBuilderFactory.ConfigurationFactory">
            <summary>
            Gets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="M:Sitecore.Social.Builders.MessageDataBuilderFactory.GetBuilderByMessageItemBase(System.Type)">
            <summary>
            Gets the builder by social message base.
            </summary>
            <param name="messageItemBaseType">Type of the social message base.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Builders.IMessageDataBuilder" />.
            </returns>
            <exception cref="T:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException">Message data builder is not found.</exception>
        </member>
        <member name="M:Sitecore.Social.Builders.MessageDataBuilderFactory.GetBuilderByMessageData(System.Type)">
            <summary>
            Gets the builder by message data type.
            </summary>
            <param name="messageDataType">Type of the message data.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Builders.IMessageDataBuilder" /> instance.
            </returns>
            <exception cref="T:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException">Message data builder is not found.</exception>
        </member>
        <member name="M:Sitecore.Social.Builders.MessageDataBuilderFactory.GetBuilder(System.Func{Sitecore.Social.Configuration.Model.Api.MessageDataBuilderSettings,System.Boolean})">
            <summary>
            Gets the builder.
            </summary>
            <param name="builderSettingsFilter">The builder settings filter.</param>
            <returns>The <see cref="T:Sitecore.Social.Builders.IMessageDataBuilder"/> instance.</returns>
        </member>
        <member name="T:Sitecore.Social.Builders.MessageStatusBuilderFactory">
            <summary>
            Defines methods to get <see cref="T:Sitecore.Social.Builders.IMessageStatusBuilder"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.MessageStatusBuilderFactory.#ctor(Sitecore.Social.Configuration.IConfigurationFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Builders.MessageStatusBuilderFactory"/> class with the specific <see cref="T:Sitecore.Social.Configuration.IConfigurationFactory"/>.
            </summary>
            <param name="configurationFactory">The configuration factory.</param>
        </member>
        <member name="P:Sitecore.Social.Builders.MessageStatusBuilderFactory.ConfigurationFactory">
            <summary>
            Gets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="M:Sitecore.Social.Builders.MessageStatusBuilderFactory.GetBuilder(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Gets the builder by social message base.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Builders.IMessageStatusBuilder" />.
            </returns>
            <exception cref="T:Sitecore.Social.Exceptions.MessageStatusBuilderIsNotFoundException">Message status builder is not found.</exception>
        </member>
        <member name="M:Sitecore.Social.Builders.MessageStatusBuilderFactory.GetBuilder(System.Func{Sitecore.Social.Configuration.Model.Api.MessageStatusBuilderSettings,System.Boolean})">
            <summary>
            Gets the builder.
            </summary>
            <param name="builderSettingsFilter">The builder settings filter.</param>
            <returns>The builder instance.</returns>
        </member>
        <member name="T:Sitecore.Social.Builders.NetworkAccountBuilder">
            <summary>
            Defines methods to get and manage <see cref="T:Sitecore.Social.Domain.Model.NetworkAccount"/> instances.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.NetworkAccountBuilder.ApplicationField">
            <summary>
            The application field
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.NetworkAccountBuilder.#ctor(Sitecore.Social.Configuration.Model.Api.AccountBuilderSettings)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Builders.NetworkAccountBuilder"/> class.
            </summary>
            <param name="accountBuilderSettings">The account builder settings.</param>
        </member>
        <member name="M:Sitecore.Social.Builders.NetworkAccountBuilder.GetNetworkId(Sitecore.Data.Items.Item)">
            <summary>
            Gets the network identifier of the specified account item.
            </summary>
            <param name="accountItem">The account item.</param>
            <returns>
            The network identifier.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Builders.NetworkAccountBuilder.UpdateAccountItemFields(Sitecore.Data.Items.Item,Sitecore.Social.Domain.Model.Account)">
            <summary>
            Updates the account item fields from the account.
            </summary>
            <param name="accountItem">The account item.</param>
            <param name="account">The account.</param>
            <exception cref="T:System.InvalidCastException">The 'account' argument is not a <see cref="T:Sitecore.Social.Domain.Model.NetworkAccount"/> object.</exception>
        </member>
        <member name="M:Sitecore.Social.Builders.NetworkAccountBuilder.BuildAccount(Sitecore.Data.Items.Item)">
            <summary>
            Builds the account from the account item.
            </summary>
            <param name="accountItem">The account item.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Domain.Model.NetworkAccount" /> instance.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Builders.NetworkAccountBuilder.CreateAccountInstance">
            <summary>
            Creates the account instance.
            </summary>
            <returns>
            The <see cref="T:Sitecore.Social.Domain.Model.Account" /> instance.
            </returns>
        </member>
        <member name="T:Sitecore.Social.Builders.NetworkAccountBuilder.NetworkAccountFieldIds">
            <summary>
            Represents the network account template field IDs.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.NetworkAccountBuilder.NetworkAccountFieldIds.AccessToken">
            <summary>
            The access token field ID.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.NetworkAccountBuilder.NetworkAccountFieldIds.AccessTokenSecret">
            <summary>
            The access token secret field ID.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.NetworkAccountBuilder.NetworkAccountFieldIds.Application">
            <summary>
            The application field ID.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Builders.NetworkAccountBuilder.NetworkAccountFieldIds.LastRenewalDate">
            <summary>
            The last renewal date ID.
            </summary>
        </member>
        <member name="T:Sitecore.Social.Builders.PostingConfigurationBuilderFactory">
            <summary>
            Defines methods to get <see cref="T:Sitecore.Social.Builders.IPostingConfigurationBuilder"/> instances.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Builders.PostingConfigurationBuilderFactory.#ctor(Sitecore.Social.Configuration.IConfigurationFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Builders.PostingConfigurationBuilderFactory"/> class with the specific <see cref="T:Sitecore.Social.Configuration.IConfigurationFactory"/>.
            </summary>
            <param name="configurationFactory">The configuration factory.</param>
        </member>
        <member name="P:Sitecore.Social.Builders.PostingConfigurationBuilderFactory.ConfigurationFactory">
            <summary>
            Gets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="M:Sitecore.Social.Builders.PostingConfigurationBuilderFactory.GetBuilder(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Gets the builder by social message base.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Builders.IPostingConfigurationBuilder" />.
            </returns>
            <exception cref="T:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException">Posting configuration builder is not found.</exception>
        </member>
        <member name="M:Sitecore.Social.Builders.PostingConfigurationBuilderFactory.GetBuilder(System.Type)">
            <summary>
            Gets the builder by posting configuration type.
            </summary>
            <param name="postingConfigurationType">Type of the posting configuration.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Builders.IPostingConfigurationBuilder" />.
            </returns>
            <exception cref="T:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException">Posting configuration builder is not found.</exception>
        </member>
        <member name="M:Sitecore.Social.Builders.PostingConfigurationBuilderFactory.GetBuilder(System.Func{Sitecore.Social.Configuration.Model.Api.PostingConfigurationBuilderSettings,System.Boolean})">
            <summary>
            Gets the builder.
            </summary>
            <param name="builderSettingsFilter">The builder settings filter.</param>
            <returns>The builder instance.</returns>
        </member>
        <member name="T:Sitecore.Social.Connector.Facets.Contact.SocialProfile.FieldElement">
            <summary>
            Represents the field element.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Facets.Contact.SocialProfile.FieldElement.ValueKey">
            <summary>
            The value key
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Facets.Contact.SocialProfile.FieldElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Connector.Facets.Contact.SocialProfile.FieldElement"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Connector.Facets.Contact.SocialProfile.FieldElement.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:Sitecore.Social.Connector.Facets.Contact.SocialProfile.IFieldElement">
            <summary>
            Defines the field element.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Connector.Facets.Contact.SocialProfile.IFieldElement.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:Sitecore.Social.Connector.Facets.Contact.SocialProfile.INetworkElement">
            <summary>
            Defines the network element.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Connector.Facets.Contact.SocialProfile.INetworkElement.Fields">
            <summary>
            Gets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="T:Sitecore.Social.Connector.Facets.Contact.SocialProfile.ISocialProfileFacet">
            <summary>
            Defines the SocialProfile facet on a contact.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Connector.Facets.Contact.SocialProfile.ISocialProfileFacet.Networks">
            <summary>
            Gets the networks.
            </summary>
            <value>
            The networks.
            </value>
        </member>
        <member name="T:Sitecore.Social.Connector.Facets.Contact.SocialProfile.NetworkElement">
            <summary>
            Represents the network element.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Facets.Contact.SocialProfile.NetworkElement.FieldsKey">
            <summary>
            The fields key
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Facets.Contact.SocialProfile.NetworkElement.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Connector.Facets.Contact.SocialProfile.NetworkElement"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Connector.Facets.Contact.SocialProfile.NetworkElement.Fields">
            <summary>
            Gets the fields.
            </summary>
            <value>
            The fields.
            </value>
        </member>
        <member name="T:Sitecore.Social.Connector.Facets.Contact.SocialProfile.SocialProfileFacet">
            <summary>
            Represents the SocialProfile facet on a contact.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Facets.Contact.SocialProfile.SocialProfileFacet.NetworksKey">
            <summary>
            The networks key
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Facets.Contact.SocialProfile.SocialProfileFacet.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Connector.Facets.Contact.SocialProfile.SocialProfileFacet"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Connector.Facets.Contact.SocialProfile.SocialProfileFacet.Networks">
            <summary>
            Gets the networks.
            </summary>
            <value>
            The networks.
            </value>
        </member>
        <member name="T:Sitecore.Social.Connector.Lookup.FastUserLookup">
            <summary>
            Fast User lookup
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.FastUserLookup.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Connector.Lookup.FastUserLookup" /> class.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.FastUserLookup.#ctor(Sitecore.Social.SitecoreAccess.Wrappers.ISqlDataApiWrapper,Sitecore.Social.Infrastructure.Wrappers.System.IProfileBaseWrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Connector.Lookup.FastUserLookup" /> class with the specific <see cref="T:Sitecore.Social.SitecoreAccess.Wrappers.ISqlDataApiWrapper" />.
            </summary>
            <param name="sqlDataApiWrapper">The SQL data API wrapper.</param>
            <param name="profileBaseWrapper">The profile base wrapper.</param>
        </member>
        <member name="P:Sitecore.Social.Connector.Lookup.FastUserLookup.ProfileBaseWrapper">
            <summary>
            Gets the profile base wrapper.
            </summary>
            <value>
            The profile base wrapper.
            </value>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.FastUserLookup.LookupUsersByAccountId(System.String)">
            <summary>
            Lookups the users by account id.
            </summary>
            <param name="accountId">The account id.</param>
            <returns>
            List of user names.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.FastUserLookup.IsFastLookupAvailable">
            <summary>
            Determines whether is fast lookup available.
            </summary>
            <returns>
              <c>true</c> if fast lookup is available; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.FastUserLookup.IsCoreProperty(System.String)">
            <summary>
            Determines whether specified property is a core one.
            </summary>
            <param name="propertyName">Name of the property.</param>
            <returns>
              <c>true</c> if the property is a core one; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.Social.Connector.Lookup.IFastUserLookup">
            <summary>
               Fast User lookup interface
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.IFastUserLookup.LookupUsersByAccountId(System.String)">
            <summary>
            Lookups the users by account id.
            </summary>
            <param name="accountId">The account id.</param>
            <returns>List of user names.</returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.IFastUserLookup.IsFastLookupAvailable">
            <summary>
            Determines whether is fast lookup available.
            </summary>
            <returns>
              <c>true</c> if fast lookup is available; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.INetworkIdParser.Parse(System.String)">
            <summary>
            Parses the specified string to parse.
            </summary>
            <param name="stringToParse">The string to parse.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.INetworkIdParser.Exists(System.String,System.String)">
            <summary>
            Existses the specified expected network.
            </summary>
            <param name="expectedNetworkName">Expected name of the network.</param>
            <param name="stringToParse">The string to parse.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.INetworkIdParser.Add(Sitecore.Social.Connector.Lookup.NetworkId,System.String)">
            <summary>
            Adds the specified network id to add.
            </summary>
            <param name="networkIdToAdd">The network id to add.</param>
            <param name="stringToParse">The string to parse.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.INetworkIdParser.Remove(System.String,System.String)">
            <summary>
            Removes the specified network to remove.
            </summary>
            <param name="networkNameToRemove">The network name to remove.</param>
            <param name="stringToParse">The string to parse.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.INetworkIdParser.GetNetworkIdAsString(Sitecore.Social.Connector.Lookup.NetworkId)">
            <summary>
            Gets the network id as string.
            </summary>
            <param name="networkId">The network id.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.Connector.Lookup.NetworkIdParser">
            <summary>
            The class transforms the string of network ids and vice versa.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.NetworkIdParser.#ctor(Sitecore.Social.Configuration.IConfigurationFactory,Sitecore.Social.INetworkBusinessManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Connector.Lookup.NetworkIdParser" /> class.
            </summary>
            <param name="configurationFactory">The configuration manager.</param>
            <param name="networkBusinessManager">The network business manager.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.NetworkIdParser.Parse(System.String)">
            <summary>
            Parses the specified string to parse.
            </summary>
            <param name="stringToParse">The string to parse.</param>
            <returns>The network ids.</returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.NetworkIdParser.Exists(Sitecore.Social.Connector.Lookup.NetworkId,System.String)">
            <summary>
            Existses the specified expected network id.
            </summary>
            <param name="expectedNetworkId">The expected network id.</param>
            <param name="stringToParse">The string to parse.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.NetworkIdParser.Exists(System.String,System.String)">
            <summary>
            Existses the specified expected network name.
            </summary>
            <param name="expectedNetworkName">Expected name of the network.</param>
            <param name="stringToParse">The string to parse.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.NetworkIdParser.Add(Sitecore.Social.Connector.Lookup.NetworkId,System.String)">
            <summary>
            Adds the specified network id to add.
            </summary>
            <param name="networkIdToAdd">The network id to add.</param>
            <param name="stringToParse">The string to parse.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.NetworkIdParser.GetNetworkIdAsString(Sitecore.Social.Connector.Lookup.NetworkId)">
            <summary>
            Gets the network id as string.
            </summary>
            <param name="networkId">The network id.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.NetworkIdParser.Remove(System.String,System.String)">
            <summary>
            Removes the specified network to remove.
            </summary>
            <param name="networkNameToRemove">The network name to remove.</param>
            <param name="stringToParse">The string to parse.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Lookup.NetworkIdParser.GetNetworkIdFromString(System.String,System.String)">
            <summary>
            Gets the network id from string.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="stringToParce">The string to parce.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.Connector.Pipelines.MatchUser.CreateUser">
            <summary>
            A SelectConnectorUser pipeline processor. The class is responsible create a new user for connector if it wasn't found in previous processors
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Pipelines.MatchUser.CreateUser.Process(Sitecore.Social.Connector.Pipelines.MatchUser.SelectUserPipelineArgs)">
            <summary>
            Processes the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Pipelines.MatchUser.CreateUser.CreateSitecoreUser(System.String,System.String,System.String)">
            <summary>
            Create a new Sitecore extranet user.
            </summary>
            <param name="domainUser">
            Domain user name.
            </param>
            <param name="email">
            User email.
            </param>
            <param name="fullName">
            Full user name.
            </param>
            <returns>
            The <see cref="T:Sitecore.Security.Accounts.User"/>.
            </returns>
        </member>
        <member name="T:Sitecore.Social.Connector.Pipelines.MatchUser.FindByDomain">
            <summary>
            A MatchUser pipeline processor. The class is responsible to try to find the existing user for connector by domain
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Pipelines.MatchUser.FindByDomain.Process(Sitecore.Social.Connector.Pipelines.MatchUser.SelectUserPipelineArgs)">
            <summary>
            Processes the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Pipelines.MatchUser.FindByDomain.GetUserByDomainName(System.String)">
            <summary>
            Gets user by domain name.
            </summary>
            <param name="domainName">The domain name.</param>
            <returns>The corresponds user returned.</returns>
        </member>
        <member name="T:Sitecore.Social.Connector.Pipelines.MatchUser.FindByEmail">
            <summary>
            A MatchUser pipeline processor. The class is responsible to try to find the existing user for connector by email
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Pipelines.MatchUser.FindByEmail.Process(Sitecore.Social.Connector.Pipelines.MatchUser.SelectUserPipelineArgs)">
            <summary>
            Processes the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Pipelines.MatchUser.FindByEmail.GetUserByEmail(System.String,System.String)">
            <summary>
            Gets user by email un a current domain.
            </summary>
            <param name="email">The email.</param>
            <param name="contextDomainName">Name of the context domain.</param>
            <returns>
            The corresponds user returned.
            </returns>
        </member>
        <member name="T:Sitecore.Social.Connector.Pipelines.MatchUser.FindByNetworkCredentials">
            <summary>
            A MatchUser pipeline processor. The class is responsible to try to find the existing user for connector by network credentials
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Pipelines.MatchUser.FindByNetworkCredentials.Process(Sitecore.Social.Connector.Pipelines.MatchUser.SelectUserPipelineArgs)">
            <summary>
            Processes the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Pipelines.MatchUser.FindByNetworkCredentials.GetUserByAccountId(System.String,System.String)">
            <summary>
            Gets user by network account id.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="networkAccountId">The network account identifier.</param>
            <returns>
            The corresponds user returned.
            </returns>
        </member>
        <member name="T:Sitecore.Social.Connector.Pipelines.MatchUser.PrepareUserData">
            <summary>
            A MatchUser pipeline processor. The class is responsible to set values to set the value for Username and Email pipeline args
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Pipelines.MatchUser.PrepareUserData.Process(Sitecore.Social.Connector.Pipelines.MatchUser.SelectUserPipelineArgs)">
            <summary>
            Processes the specified args.
            </summary>
            <param name="args">The args.</param>
        </member>
        <member name="T:Sitecore.Social.Connector.Pipelines.MatchUser.SelectUserPipelineArgs">
            <summary>
            A class represents the arguments for SelectConnectorUser pipeline.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Pipelines.MatchUser.SelectUserPipelineArgs.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Connector.Pipelines.MatchUser.SelectUserPipelineArgs"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Connector.Pipelines.MatchUser.SelectUserPipelineArgs.AccountBasicData">
            <summary>
            The network account basic data
            </summary>
        </member>
        <member name="P:Sitecore.Social.Connector.Pipelines.MatchUser.SelectUserPipelineArgs.Result">
            <summary>
            The user which should be selected during the pipeline process
            </summary>
        </member>
        <member name="P:Sitecore.Social.Connector.Pipelines.MatchUser.SelectUserPipelineArgs.Username">
            <summary>
            The username for selecting user
            </summary>
        </member>
        <member name="P:Sitecore.Social.Connector.Pipelines.MatchUser.SelectUserPipelineArgs.Email">
            <summary>
            The selecting user email
            </summary>
        </member>
        <member name="P:Sitecore.Social.Connector.Pipelines.MatchUser.SelectUserPipelineArgs.ContextDomain">
            <summary>
            Gets or sets the context domain.
            </summary>
            <value>
            The context domain.
            </value>
        </member>
        <member name="P:Sitecore.Social.Connector.Pipelines.MatchUser.SelectUserPipelineArgs.CreateNewUserIfNoExistingFound">
            <summary>
            Gets or sets a value indicating whether a new user will be created if no existing is found.
            </summary>
            <value>
            <c>true</c> new user will be created if no existing is found; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider">
            <summary>
            Defines methods to manage social profile fields persistence on a contact via facet.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider.SocialProfileFacetKey">
            <summary>
            The social profile facet key
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider.#ctor(Sitecore.Social.SitecoreAccess.Analytics.IContactDataProvider,Sitecore.Social.INetworkBusinessManager,Sitecore.Social.NetworkProviders.NetworkFields.IAcceptedFieldsSelector)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider" /> class.
            </summary>
            <param name="contactDataProvider">The contact data provider.</param>
            <param name="networkBusinessManager">The network business manager.</param>
            <param name="acceptedFieldsSelector">The accepted fields selector.</param>
        </member>
        <member name="P:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider.ContactDataProvider">
            <summary>
            Gets the contact data provider.
            </summary>
            <value>
            The contact data provider.
            </value>
        </member>
        <member name="P:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider.NetworkBusinessManager">
            <summary>
            Gets the network business manager.
            </summary>
            <value>
            The network business manager.
            </value>
        </member>
        <member name="P:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider.AcceptedFieldsSelector">
            <summary>
            Gets or sets the accepted fields selector.
            </summary>
            <value>
            The accepted fields selector.
            </value>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider.GetSocialProfileFields(Sitecore.Social.Domain.Model.Identifier,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the social profile fields.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">Name of the network.</param>
            <param name="acceptedFieldsKeys">The accepted fields keys.</param>
            <returns>
            The social profile fields.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider.GetSocialProfileFields(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the social profile fields.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <param name="acceptedFieldsKeys">The accepted fields keys.</param>
            <returns>
            The social profile fields.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider.UpdateSocialProfileFields(Sitecore.Social.Domain.Model.Identifier,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the social profile fields.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">Name of the network.</param>
            <param name="fields">The fields.</param>
            <param name="acceptedFieldsKeys">The accepted fields keys.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider.UpdateSocialProfileFields(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the social profile fields.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <param name="fields">The fields.</param>
            <param name="acceptedFieldsKeys">The accepted fields keys.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider.RemoveSocialProfileFields(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Removes the social profile fields.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">Name of the network.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider.RemoveSocialProfileFields(System.String,System.String)">
            <summary>
            Removes the social profile fields.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider.SocialProfileFieldsExists(System.String,System.String)">
            <summary>
            Defines if there is social profile fields.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <returns>
              <c>true</c> if the social profile fields exists; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.XdbSocialProfileFieldsProvider.RemoveNetworkPrefix(System.String,System.String)">
            <summary>
            Removes the network prefix.
            </summary>
            <param name="fieldKey">The field key.</param>
            <param name="networkPrefix">The network prefix.</param>
            <returns>The field key without network prefix. If the field key doesn't start with the network prefix then original field key is returned.</returns>
        </member>
        <member name="T:Sitecore.Social.Connector.Providers.ISocialProfileFieldsProvider">
            <summary>
            Defines methods to manage social profile fields persistence.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileFieldsProvider.GetSocialProfileFields(Sitecore.Social.Domain.Model.Identifier,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the social profile fields.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">Name of the network.</param>
            <param name="acceptedFieldsKeys">The accepted fields keys.</param>
            <returns>
            The social profile fields.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileFieldsProvider.GetSocialProfileFields(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the social profile fields.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <param name="acceptedFieldsKeys">The accepted fields keys.</param>
            <returns>
            The social profile fields.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileFieldsProvider.UpdateSocialProfileFields(Sitecore.Social.Domain.Model.Identifier,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the social profile fields.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">Name of the network.</param>
            <param name="fields">The fields.</param>
            <param name="acceptedFieldsKeys">The accepted fields keys.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileFieldsProvider.UpdateSocialProfileFields(System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the social profile fields.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <param name="fields">The fields.</param>
            <param name="acceptedFieldsKeys">The accepted fields keys.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileFieldsProvider.RemoveSocialProfileFields(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Removes the social profile fields.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">Name of the network.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileFieldsProvider.RemoveSocialProfileFields(System.String,System.String)">
            <summary>
            Removes the social profile fields.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileFieldsProvider.SocialProfileFieldsExists(System.String,System.String)">
            <summary>
            Defines if there is social profile fields.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <returns>
              <c>true</c> if the social profile fields exists; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="T:Sitecore.Social.Connector.Providers.ISocialProfileIdentityDataProvider">
            <summary>
            Defines methods to manage social profile identity data persistence.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileIdentityDataProvider.GetSocialProfileIdentityData(System.String,System.String)">
            <summary>
            Gets the social profile identity data.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <returns>The social profile identity data.</returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileIdentityDataProvider.SocialProfileIdentityDataExists(System.String,System.String)">
            <summary>
            Defines if there is social profile identity data.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <returns><c>true</c> if the social profile identity data exists; otherwise, <c>false</c></returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileIdentityDataProvider.UpdateSocialProfileIdentityData(System.String,System.String,Sitecore.Social.Domain.Model.SocialProfileIdentityData)">
            <summary>
            Updates the social profile identity data.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <param name="socialProfileIdentityData">The social profile identity data.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileIdentityDataProvider.RemoveSocialProfileIdentityData(System.String,System.String)">
            <summary>
            Removes the social profile identity data.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileIdentityDataProvider.GetUserNamesByNetworkAccountId(System.String,System.String)">
            <summary>
            Gets the user names by network account identifier.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="networkAccountId">The network account identifier.</param>
            <returns>The user names.</returns>
        </member>
        <member name="T:Sitecore.Social.Connector.Providers.ISocialProfileProvider">
            <summary>
            Defines methods to manage social profile persistence.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileProvider.GetSocialProfile(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the social profile.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <param name="acceptedFieldsKeys">The accepted fields keys.</param>
            <returns>
            The social profile.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileProvider.GetPrimarySocialProfile(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the primary social profile.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="acceptedFieldsKeys">The accepted fields keys.</param>
            <returns>
            The primary social profile.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileProvider.GetPrimaryNetworkName(System.String)">
            <summary>
            Gets the name of the primary network.
            </summary>
            <param name="userName">Name of the user.</param>
            <returns>The name of the primary network.</returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileProvider.SocialProfileExists(System.String,System.String)">
            <summary>
            Defines if there is a social profile in the specified network.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <returns><c>true</c> if the social profile exists; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileProvider.UpdateSocialProfile(Sitecore.Social.Domain.Model.SocialProfile,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the social profile.
            </summary>
            <param name="socialProfile">The social profile.</param>
            <param name="acceptedFieldsKeys">The accepted fields keys.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileProvider.RemoveSocialProfile(System.String,System.String)">
            <summary>
            Removes the social profile.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.ISocialProfileProvider.GetUserNamesByNetworkAccountId(System.String,System.String)">
            <summary>
            Gets the user names by network account identifier.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="networkAccountId">The network account identifier.</param>
            <returns>The user names.</returns>
        </member>
        <member name="T:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider">
            <summary>
            Defines methods to manage social profile on contact and user profile.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.PrimaryNetworkKey">
            <summary>
            The primary network key
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.LastRenewedDateKeyFormat">
            <summary>
            The last renewed date key format
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.FieldsLastRenewedDateKeyFormat">
            <summary>
            The fields last renewed date key format
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.#ctor(Sitecore.Social.Connector.Providers.ISocialProfileIdentityDataProvider,Sitecore.Social.Connector.Providers.ISocialProfileFieldsProvider,Sitecore.Social.Infrastructure.Wrappers.System.IMembershipWrapper,Sitecore.Social.INetworkBusinessManager,Sitecore.Social.SitecoreAccess.Analytics.IContactDataProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider" /> class.
            </summary>
            <param name="socialProfileIdentityDataProvider">The social profile identity data provider.</param>
            <param name="socialProfileFieldsProvider">The social profile fields provider.</param>
            <param name="membershipWrapper">The membership wrapper.</param>
            <param name="networkBusinessManager">The network business manager.</param>
            <param name="contactDataProvider">The contact data provider.</param>
        </member>
        <member name="P:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.ContactDataProvider">
            <summary>
            Gets the contact data provider.
            </summary>
            <value>
            The contact data provider.
            </value>
        </member>
        <member name="P:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.SocialProfileFieldsProvider">
            <summary>
            Gets the social profile fields provider.
            </summary>
            <value>
            The social profile fields provider.
            </value>
        </member>
        <member name="P:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.SocialProfileIdentityDataProvider">
            <summary>
            Gets the social profile identity data provider.
            </summary>
            <value>
            The social profile identity data provider.
            </value>
        </member>
        <member name="P:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.NetworkBusinessManager">
            <summary>
            Gets the network business manager.
            </summary>
            <value>
            The network business manager.
            </value>
        </member>
        <member name="P:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.MembershipWrapper">
            <summary>
            Gets the membership wrapper.
            </summary>
            <value>
            The membership wrapper.
            </value>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.GetSocialProfile(System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the social profile.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <param name="acceptedFieldsKeys">The accepted fields keys.</param>
            <returns>
            The social profile.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.GetPrimarySocialProfile(System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Gets the primary social profile.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="acceptedFieldsKeys">The accepted fields keys.</param>
            <returns>
            The primary social profile.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.GetPrimaryNetworkName(System.String)">
            <summary>
            Gets the name of the primary network.
            </summary>
            <param name="userName">Name of the user.</param>
            <returns>
            The name of the primary network.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.SocialProfileExists(System.String,System.String)">
            <summary>
            Defines if there is a social profile in the specified network.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <returns>
              <c>true</c> if the social profile exists; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.UpdateSocialProfile(Sitecore.Social.Domain.Model.SocialProfile,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Updates the social profile.
            </summary>
            <param name="socialProfile">The social profile.</param>
            <param name="acceptedFieldsKeys">The accepted fields keys.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.RemoveSocialProfile(System.String,System.String)">
            <summary>
            Removes the social profile.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.GetUserNamesByNetworkAccountId(System.String,System.String)">
            <summary>
            Gets the user names by network account identifier.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="networkAccountId">The network account identifier.</param>
            <returns>
            The user names.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.GetPrimaryNetwork(Sitecore.Security.Accounts.User)">
            <summary>
            Gets the primary network.
            </summary>
            <param name="user">The user.</param>
            <returns>
            The primary network name.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.UpdatePrimaryNetwork(Sitecore.Security.Accounts.User,System.String)">
            <summary>
            Updates the primary network.
            </summary>
            <param name="user">The user.</param>
            <param name="networkName">Name of the network.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.RemovePrimaryNetwork(Sitecore.Security.Accounts.User)">
            <summary>
            Removes the primary network.
            </summary>
            <param name="user">The user.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.GetUtcDate(Sitecore.Security.Accounts.User,System.String,System.String)">
            <summary>
            Gets the UTC date.
            </summary>
            <param name="user">The user.</param>
            <param name="networkPrefix">The network prefix.</param>
            <param name="dateKeyFormat">The date key format.</param>
            <returns>
            The UTC date.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.UpdateDate(Sitecore.Security.Accounts.User,System.String,System.Nullable{System.DateTime},System.String)">
            <summary>
            Updates the date.
            </summary>
            <param name="user">The user.</param>
            <param name="networkPrefix">The network prefix.</param>
            <param name="date">The date.</param>
            <param name="dateKeyFormat">The date key format.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipAndXdbSocialProfileProvider.RemoveDate(Sitecore.Security.Accounts.User,System.String,System.String)">
            <summary>
            Removes the date.
            </summary>
            <param name="user">The user.</param>
            <param name="networkPrefix">The network prefix.</param>
            <param name="dateKeyFormat">The date key format.</param>
        </member>
        <member name="T:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider">
            <summary>
            Defines methods to manage social profile identity data persistence on a user profile.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.SocialNetworkIdKey">
            <summary>
            The social network identifier key
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.BasicDataKeyPrefixFormat">
            <summary>
            The basic data key prefix format
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.BasicDataNetworkAccountIdKeyFormat">
            <summary>
            The basic data network account identifier key format
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.BasicDataEmailKeyFormat">
            <summary>
            The basic data email key format
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.BasicDataAppKeyKeyFormat">
            <summary>
            The basic data application key key format
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.BasicDataAppSecretKeyFormat">
            <summary>
            The basic data application secret key format
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.BasicDataPublicApiKeyKeyFormat">
            <summary>
            The basic data application secret key format
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.BasicDataAccessTokenKeyFormat">
            <summary>
            The basic data access token key format
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.BasicDataAccessTokenSecretKeyFormat">
            <summary>
            The basic data access token secret key format
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.BasicDataRefreshTokenKeyFormat">
            <summary>
            The basic data refresh token key format
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.BasicDataAccessTokenSecretIssueDateKeyFormat">
            <summary>
            The basic data access token secret issue date key format
            </summary>
        </member>
        <member name="F:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.BasicDataAccessTokenSecretExpirationDateKeyFormat">
            <summary>
            The basic data access token secret expiration date key format
            </summary>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.#ctor(Sitecore.Social.Infrastructure.Wrappers.System.IMembershipWrapper,Sitecore.Social.INetworkBusinessManager,Sitecore.Social.Connector.Lookup.INetworkIdParser,Sitecore.Social.Connector.Lookup.IFastUserLookup)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider"/> class.
            </summary>
            <param name="membershipWrapper">The membership wrapper.</param>
            <param name="networkBusinessManager">The network business manager.</param>
            <param name="networkIdParser">The network identifier parser.</param>
            <param name="fastUserLookup">The fast user lookup.</param>
        </member>
        <member name="P:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.FastUserLookup">
            <summary>
            Gets the fast user lookup.
            </summary>
            <value>
            The fast user lookup.
            </value>
        </member>
        <member name="P:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.NetworkIdParser">
            <summary>
            Gets the network identifier parser.
            </summary>
            <value>
            The network identifier parser.
            </value>
        </member>
        <member name="P:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.NetworkBusinessManager">
            <summary>
            Gets the network business manager.
            </summary>
            <value>
            The network business manager.
            </value>
        </member>
        <member name="P:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.MembershipWrapper">
            <summary>
            Gets the membership wrapper.
            </summary>
            <value>
            The membership wrapper.
            </value>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.GetSocialProfileIdentityData(System.String,System.String)">
            <summary>
            Gets the social profile identity data.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <returns>
            The social profile identity data.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.SocialProfileIdentityDataExists(System.String,System.String)">
            <summary>
            Defines if there is social profile identity data.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <returns>
              <c>true</c> if the social profile identity data exists; otherwise, <c>false</c>
            </returns>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.UpdateSocialProfileIdentityData(System.String,System.String,Sitecore.Social.Domain.Model.SocialProfileIdentityData)">
            <summary>
            Updates the social profile identity data.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
            <param name="socialProfileIdentityData">The social profile identity data.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.RemoveSocialProfileIdentityData(System.String,System.String)">
            <summary>
            Removes the social profile identity data.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
        </member>
        <member name="M:Sitecore.Social.Connector.Providers.MembershipSocialProfileIdentityDataProvider.GetUserNamesByNetworkAccountId(System.String,System.String)">
            <summary>
            Gets the user names by network account identifier.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="networkAccountId">The network account identifier.</param>
            <returns>
            The user names.
            </returns>
        </member>
        <member name="T:Sitecore.Social.Connector.RefreshSocialProfileDataContainer">
            <summary>
            Defines properties to update a social profile asynchrously.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Connector.RefreshSocialProfileDataContainer.UserName">
            <summary>
            Gets or sets the name of the user.
            </summary>
            <value>
            The name of the user.
            </value>
        </member>
        <member name="P:Sitecore.Social.Connector.RefreshSocialProfileDataContainer.NetworkName">
            <summary>
            Gets or sets the basic account.
            </summary>
            <value>
            The basic account.
            </value>
        </member>
        <member name="T:Sitecore.Social.DMS.InlineCampaignIndicators.CampaignEfficiencyReportReader">
            <summary>
            Read inline campaign indicators from the Campaign Efficieny report.
            </summary>
        </member>
        <member name="M:Sitecore.Social.DMS.InlineCampaignIndicators.CampaignEfficiencyReportReader.Read(Sitecore.Data.ID)">
            <summary>
            Reads the inline campaign indicators.
            </summary>
            <param name="campaignId">The campaign id.</param>
            <returns>
            The following indicators:
            - Value;
            - Visits;
            - Value per Visits.
            </returns>
        </member>
        <member name="T:Sitecore.Social.DMS.InlineCampaignIndicators.IInlineCampaignIndicatorsReader">
            <summary>
            Inline campaign indicators reader interface.
            </summary>
        </member>
        <member name="M:Sitecore.Social.DMS.InlineCampaignIndicators.IInlineCampaignIndicatorsReader.Read(Sitecore.Data.ID)">
            <summary>
            Reads the inline campaign indicators.
            </summary>
            <param name="campaignId">The campaign id.</param>
            <returns>
            The following indicators:
            - Value;
            - Visits;
            - Value per Visits.
            </returns>
        </member>
        <member name="T:Sitecore.Social.DMS.InlineCampaignIndicators.XAnalyticsReportReader">
            <summary>
            Read inline campaign indicators from the Experience Analytics report.
            </summary>
        </member>
        <member name="F:Sitecore.Social.DMS.InlineCampaignIndicators.XAnalyticsReportReader.AllVisitsByCampaignSegmentKey">
            <summary>
            All visits by campaign segment key
            </summary>
            <remarks>
            /sitecore/system/Marketing Control Panel/Experience Analytics/Dimensions/Visits/By Campaign/All visits by Campaign
            </remarks>
        </member>
        <member name="F:Sitecore.Social.DMS.InlineCampaignIndicators.XAnalyticsReportReader.KeyUrlParameterName">
            <summary>
            The URL parameter name of the key
            </summary>
        </member>
        <member name="M:Sitecore.Social.DMS.InlineCampaignIndicators.XAnalyticsReportReader.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.DMS.InlineCampaignIndicators.XAnalyticsReportReader"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Social.DMS.InlineCampaignIndicators.XAnalyticsReportReader.#ctor(Sitecore.ExperienceAnalytics.Api.IReportingService,Sitecore.Marketing.Definitions.IDefinitionManager{Sitecore.Marketing.Definitions.Campaigns.ICampaignActivityDefinition},Sitecore.ExperienceAnalytics.Api.Encoding.ITextCodec)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.DMS.InlineCampaignIndicators.XAnalyticsReportReader" /> class.
            </summary>
            <param name="reportingService">The reporting service.</param>
            <param name="definitionManager">The definition manager.</param>
            <param name="textCodec">The text codec.</param>
        </member>
        <member name="P:Sitecore.Social.DMS.InlineCampaignIndicators.XAnalyticsReportReader.TextCodec">
            <summary>
            Gets the text codec.
            </summary>
            <value>
            The text codec.
            </value>
        </member>
        <member name="P:Sitecore.Social.DMS.InlineCampaignIndicators.XAnalyticsReportReader.DefinitionManager">
            <summary>
            Gets the definition manager.
            </summary>
            <value>
            The definition manager.
            </value>
        </member>
        <member name="P:Sitecore.Social.DMS.InlineCampaignIndicators.XAnalyticsReportReader.ReportingService">
            <summary>
            Gets the reporting service.
            </summary>
            <value>
            The reporting service.
            </value>
        </member>
        <member name="M:Sitecore.Social.DMS.InlineCampaignIndicators.XAnalyticsReportReader.Read(Sitecore.Data.ID)">
            <summary>
            Reads the inline campaign indicators.
            </summary>
            <param name="campaignId">The campaign id.</param>
            <returns>
            The following indicators:
            - Value;
            - Visits;
            - Value per Visits.
            </returns>
        </member>
        <member name="M:Sitecore.Social.DMS.InlineCampaignIndicators.XAnalyticsReportReader.CreateEmptyInlineCampaignIndicators">
            <summary>
            Creates the empty inline campaign indicators.
            </summary>
            <returns>The empty inline campaign indicators.</returns>
        </member>
        <member name="T:Sitecore.Social.Encryption.StringCipher">
            <summary>
            Represents a string encryption.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Encryption.StringCipher.EncryptionKey">
            <summary>
            The encryption key
            </summary>
        </member>
        <member name="F:Sitecore.Social.Encryption.StringCipher.Bytes">
            <summary>
            The bytes
            </summary>
        </member>
        <member name="M:Sitecore.Social.Encryption.StringCipher.Encrypt(System.String)">
            <summary>
            Do encryption
            </summary>
            <param name="clearText"></param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Encryption.StringCipher.Decrypt(System.String)">
            <summary>
            Do decryption
            </summary>
            <param name="cipherText"></param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException">
            <summary>
            The exception that is thrown when the account builder is not found.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException.ErrorText">
            <summary>
            The error text
            </summary>
        </member>
        <member name="F:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException.ErrorAccountTypeTextFormat">
            <summary>
            The error account type text format
            </summary>
        </member>
        <member name="F:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException.ErrorAccountTemplateIDTextFormat">
            <summary>
            The error account template ID text format
            </summary>
        </member>
        <member name="M:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException" /> class.
            </summary>
            <remarks>This constructor initializes the Message property of the new instance to a system-supplied message that describes the error, such as "The account builder is not found."</remarks>
        </member>
        <member name="M:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException" /> class with the account type.
            </summary>
            <param name="accountType">Type of the account.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException.#ctor(Sitecore.Data.ID)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException"/> class with the account template ID.
            </summary>
            <param name="accountTemplateID">The account template ID.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException" /> class with the specified error message and the exception that caused this exception.
            </summary>
            <param name="message">The error message that explains the cause of this exception.</param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.AccountBuilderIsNotFoundException" /> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The object that describes the source or destination of the serialized data.</param>
        </member>
        <member name="T:Sitecore.Social.Exceptions.AccountContainerIsNotFoundException">
            <summary>
            The exception that is thrown when the account container is not found.
            </summary>
            <seealso cref="P:Sitecore.Social.Domain.Model.Account.AccountContainer"/>
        </member>
        <member name="F:Sitecore.Social.Exceptions.AccountContainerIsNotFoundException.ErrorText">
            <summary>
            The error text
            </summary>
        </member>
        <member name="F:Sitecore.Social.Exceptions.AccountContainerIsNotFoundException.ErrorTextFormat">
            <summary>
            The error text format
            </summary>
        </member>
        <member name="M:Sitecore.Social.Exceptions.AccountContainerIsNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.AccountContainerIsNotFoundException" /> class.
            </summary>
            <remarks>This constructor initializes the Message property of the new instance to a system-supplied message that describes the error, such as "The account container is not found."</remarks>
        </member>
        <member name="M:Sitecore.Social.Exceptions.AccountContainerIsNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.AccountContainerIsNotFoundException" /> class with the account container value.
            </summary>
            <param name="accountContainer">The account container value.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.AccountContainerIsNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.AccountContainerIsNotFoundException" /> class with a specified error message and the exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the cause of this exception.</param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.AccountContainerIsNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.AccountContainerIsNotFoundException" /> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The object that describes the source or destination of the serialized data.</param>
        </member>
        <member name="T:Sitecore.Social.Exceptions.AccountInDomainDuplicatedException">
            <summary>
            The exception that is thrown when there is another user with the same account in domain.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Exceptions.AccountInDomainDuplicatedException.SimpleMessage">
            <summary>
            The simple message.
            </summary>
        </member>
        <member name="T:Sitecore.Social.Exceptions.AccountInUserDuplicatedException">
            <summary>
            The exception that is thrown when following user already has another attached account of the same network.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Exceptions.AccountInUserDuplicatedException.SimpleMessage">
            <summary>
            The simple message.
            </summary>
        </member>
        <member name="T:Sitecore.Social.Exceptions.AccountIsNotExistException">
            <summary>
            The exception that is thrown when following user has not account of the network.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Exceptions.AccountIsNotExistException.SimpleMessage">
            <summary>
            The simple message.
            </summary>
        </member>
        <member name="T:Sitecore.Social.Exceptions.CannotReadAccountException">
            <summary>
            The exception that is thrown when the account item was found, but could not be read.
            </summary>
            <seealso cref="M:Sitecore.Social.AccountBusinessManager.CreateAccount(Sitecore.Social.Domain.Model.Account)"/>
        </member>
        <member name="F:Sitecore.Social.Exceptions.CannotReadAccountException.ErrorText">
            <summary>
            The error text
            </summary>
        </member>
        <member name="M:Sitecore.Social.Exceptions.CannotReadAccountException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.CannotReadAccountException" /> class.
            </summary>
            <remarks>This constructor initializes the Message property of the new instance to a system-supplied message that describes the error, such as "Could not read account."</remarks>
        </member>
        <member name="M:Sitecore.Social.Exceptions.CannotReadAccountException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.CannotReadAccountException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.CannotReadAccountException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.CannotReadAccountException" /> class with a specified error message and the exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the cause of this exception.</param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.CannotReadAccountException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.CannotReadAccountException" /> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The object that describes the source or destination of the serialized data.</param>
        </member>
        <member name="T:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException">
            <summary>
            The exception that is thrown when the message data builder is not found.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException.ErrorText">
            <summary>
            The error text
            </summary>
        </member>
        <member name="F:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException.ErrorTextFormat">
            <summary>
            The error text format
            </summary>
        </member>
        <member name="M:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException" /> class the message type.
            </summary>
            <param name="messageType">Type of the message.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException" /> class.
            </summary>
            <remarks>This constructor initializes the Message property of the new instance to a system-supplied message that describes the error, such as "The message data builder is not found."</remarks>
        </member>
        <member name="M:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException" /> class with a specified error message and the exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the cause of this exception.</param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.MessageDataBuilderIsNotFoundException" /> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The object that describes the source or destination of the serialized data.</param>
        </member>
        <member name="T:Sitecore.Social.Exceptions.MessageStatusBuilderIsNotFoundException">
            <summary>
            The exception that is thrown when the message status builder is not found.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Exceptions.MessageStatusBuilderIsNotFoundException.ErrorText">
            <summary>
            The error text
            </summary>
        </member>
        <member name="M:Sitecore.Social.Exceptions.MessageStatusBuilderIsNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.MessageStatusBuilderIsNotFoundException" /> class.
            </summary>
            <remarks>This constructor initializes the Message property of the new instance to a system-supplied message that describes the error, such as "The message status builder is not found."</remarks>
        </member>
        <member name="M:Sitecore.Social.Exceptions.MessageStatusBuilderIsNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.MessageStatusBuilderIsNotFoundException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.MessageStatusBuilderIsNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.MessageStatusBuilderIsNotFoundException" /> class with a specified error message and the exception that is the cause of this error.
            </summary>
            <param name="message">The error message that explains the cause of this exception.</param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.MessageStatusBuilderIsNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.MessageStatusBuilderIsNotFoundException" /> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The object that describes the source or destination of the serialized data.</param>
        </member>
        <member name="T:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException">
            <summary>
            The exception that is thrown when the posting configuration builder is not found.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException.ErrorText">
            <summary>
            The error text
            </summary>
        </member>
        <member name="F:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException.ErrorTextFormat">
            <summary>
            The error text format
            </summary>
        </member>
        <member name="M:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException" /> class.
            </summary>
            <remarks>This constructor initializes the Message property of the new instance to a system-supplied message that describes the error, such as "The posting configuration builder is not found."</remarks>
        </member>
        <member name="M:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException.#ctor(System.Type)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException" /> class with the posting configuration type.
            </summary>
            <param name="postingConfigurationType">Type of the posting configuration.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException" /> class with a specified error message and the exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the cause of this exception.</param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.PostingConfigurationBuilderIsNotFoundException" /> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The object that describes the source or destination of the serialized data.</param>
        </member>
        <member name="T:Sitecore.Social.Exceptions.PostingIsNotMaintainedByProviderException">
            <summary>
            The exception that is thrown when posting is not maintained by the network provider.
            </summary>
            <seealso cref="M:Sitecore.Social.AccountBusinessManager.CreateAccount(Sitecore.Social.Domain.Model.Account)"/>
        </member>
        <member name="F:Sitecore.Social.Exceptions.PostingIsNotMaintainedByProviderException.ErrorText">
            <summary>
            The error text
            </summary>
        </member>
        <member name="M:Sitecore.Social.Exceptions.PostingIsNotMaintainedByProviderException.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.PostingIsNotMaintainedByProviderException" /> class.
            </summary>
            <remarks>This constructor initializes the Message property of the new instance to a system-supplied message that describes the error, such as "Could not post on the wall."</remarks>
        </member>
        <member name="M:Sitecore.Social.Exceptions.PostingIsNotMaintainedByProviderException.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.PostingIsNotMaintainedByProviderException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.PostingIsNotMaintainedByProviderException.#ctor(System.String,System.Exception)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.PostingIsNotMaintainedByProviderException" /> class with a specified error message and the exception that is the cause of this exception.
            </summary>
            <param name="message">The error message that explains the cause of this exception.</param>
            <param name="inner">The exception that is the cause of the current exception, or a null reference.</param>
        </member>
        <member name="M:Sitecore.Social.Exceptions.PostingIsNotMaintainedByProviderException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Exceptions.PostingIsNotMaintainedByProviderException" /> class with serialized data.
            </summary>
            <param name="info">The object that holds the serialized object data.</param>
            <param name="context">The object that describes the source or destination of the serialized data.</param>
        </member>
        <member name="T:Sitecore.Social.IAccountBusinessManager">
            <summary>
            Defines business methods to manage social accounts.
            </summary>
        </member>
        <member name="M:Sitecore.Social.IAccountBusinessManager.GetAccount(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets an account by id.
            </summary>
            <param name="accountId">The account id.</param>
            <returns>The account. If the account is not found, <see cref="F:Sitecore.Social.Domain.Model.NetworkAccount.Empty"/> is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IAccountBusinessManager.GetAccounts(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets all accounts by network id. Returns a collection of accounts.
            </summary>
            <param name="networkId">The network id.</param>
            <returns>The account list. If no accounts are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IAccountBusinessManager.GetAccountsByApplication(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the accounts by application.
            </summary>
            <param name="applicationId">The application id.</param>
            <returns>The account list. If no accounts are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IAccountBusinessManager.GetAccountsByContainer(System.String)">
            <summary>
            Gets the accounts by container.
            </summary>
            <param name="accountContainer">The account container.</param>
            <returns>
            The account list. If no accounts are found an empty list is returned.
            </returns>
            <remarks>The sub-containers are not included to the search. To search in the sub-containers use <see cref="M:Sitecore.Social.IAccountBusinessManager.GetAccountsByContainer(System.String,System.Boolean)"/>.</remarks>
        </member>
        <member name="M:Sitecore.Social.IAccountBusinessManager.GetAccountsByContainer(System.String,System.Boolean)">
            <summary>
            Gets the accounts by container.
            </summary>
            <param name="accountContainer">The account container.</param>
            <param name="searchForDescendants">if set to <c>true</c> sub-containers are included to the search.</param>
            <returns>The account list. If no accounts are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IAccountBusinessManager.AccountExists(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Checks if account exist.
            </summary>
            <param name="accountId">The account id.</param>
            <returns>If account exists True else False.</returns>
        </member>
        <member name="M:Sitecore.Social.IAccountBusinessManager.CreateAccount(Sitecore.Social.Domain.Model.Account)">
            <summary>
            Creates an account.
            </summary>
            <param name="account">The account to create.</param>
            <remarks>The <see cref="P:Sitecore.Social.Domain.Model.Account.Id"/> field will contain identifier of the new account after creation.</remarks>
        </member>
        <member name="M:Sitecore.Social.IAccountBusinessManager.GetNetworkAccountDisplayName(Sitecore.Social.Domain.Model.AccountCredentials,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets an account display name in a social network.
            </summary>
            <param name="accountCredentials">The account credentials.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="networkId">The network id.</param>
            <returns>
            The account display name.
            </returns>
        </member>
        <member name="M:Sitecore.Social.IAccountBusinessManager.GetNetworkAccountDisplayName(Sitecore.Social.Domain.Model.AccountCredentials,Sitecore.Social.Domain.Model.ApplicationCredentials,System.String)">
            <summary>
            Gets an account display name in a social network.
            </summary>
            <param name="accountCredentials">The account credentials.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="networkName">Name of the network.</param>
            <returns>
            The account display name.
            </returns>
        </member>
        <member name="M:Sitecore.Social.IAccountBusinessManager.GetDaysUntilRenewalRequired(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the number of days before the required renewal of an account.
            </summary>
            <param name="accountId">The account id.</param>
            <returns>The number of days. If negative then account expired, if null then account renewal disabled or not needed.</returns>
        </member>
        <member name="T:Sitecore.Social.IApplicationBusinessManager">
            <summary>
            Defines business methods to manage social network applications.
            </summary>
        </member>
        <member name="M:Sitecore.Social.IApplicationBusinessManager.GetApplication(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets an application by id.
            </summary>
            <param name="applicationId">The application id.</param>
            <returns>The application. If the application is not found <see cref="F:Sitecore.Social.Domain.Model.Application.Empty"/> is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IApplicationBusinessManager.GetApplicationContainer(System.String)">
            <summary>
            Gets the application container by account container.
            </summary>
            <param name="accountContainer">The account container.</param>
            <returns>The application container. If the application container is not found <c>string.Empty</c> is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IApplicationBusinessManager.GetApplications(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the applications by network id.
            </summary>
            <param name="networkId">Id of the network.</param>
            <returns>The application list. If no applications are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IApplicationBusinessManager.GetApplicationsByContainer(System.String,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the applications of a specific network by the container.
            </summary>
            <param name="applicationContainer">The application container.</param>
            <param name="networkId">Id of the network.</param>
            <returns>The application list. If no applications are found an empty list is returned.</returns>
            <remarks>The sub-containers are not included to the search. To search in the sub-containers use <see cref="M:Sitecore.Social.IApplicationBusinessManager.GetApplicationsByContainer(System.String,Sitecore.Social.Domain.Model.Identifier,System.Boolean)"/>.</remarks>
        </member>
        <member name="M:Sitecore.Social.IApplicationBusinessManager.GetApplicationsByContainer(System.String,Sitecore.Social.Domain.Model.Identifier,System.Boolean)">
            <summary>
            Gets the applications by container.
            </summary>
            <param name="applicationContainer">The application container.</param>
            <param name="networkId">Id of the network.</param>
            <param name="searchForDescendants">if set to <c>true</c> sub-containers are included to the search.</param>
            <returns>The application list. If no applications are found an empty list is returned.</returns>
        </member>
        <member name="T:Sitecore.Social.IMessageBusinessManager">
            <summary>
            Defines business methods to manage social network messages.
            </summary>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.GetMessage(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the message by id.
            </summary>
            <param name="messageId">The message id.</param>
            <returns>The message. If message is not found <see cref="F:Sitecore.Social.Domain.Model.Message.Empty"/> is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.GetMessagesByContainer(System.String)">
            <summary>
            Gets messages by container.
            </summary>
            <param name="container">The container.</param>
            <returns>The messages list. If no messages are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.GetMessagesByAccount(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets messages by account.
            </summary>
            <param name="accountId">The account id.</param>
            <returns>The messages list. If no messages are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.GetMessagesByWorkflowState(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets messages by workflow state.
            </summary>
            <param name="workflowStateId">The workflow state id.</param>
            <returns>The messages list. If no messages are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.GetMessagesByCreatedDate(System.DateTime)">
            <summary>
            Gets messages created on a specific date.
            </summary>
            <param name="createdDate">The created date.</param>
            <returns>The messages list. If no messages are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.GetPostedMessages(System.Nullable{System.DateTime})">
            <summary>
            Gets messages posted to a social network on a specific date.
            </summary>
            <param name="postedDate">The posted date.</param>
            <returns>The messages list. If no messages are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.GetNotPostedMessages">
            <summary>
            Gets all messages that are not posted to a social network.
            </summary>
            <returns>The messages list. If no messages are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.GetMessagesReadyToPostAutomatically(System.Collections.Generic.IEnumerable{Sitecore.Social.Domain.Model.Identifier})">
            <summary>
            Gets messages that are ready to be posted automatically.
            </summary>
            <param name="accountIds">The account ids.</param>
            <returns>The messages list. If no messages are found an empty list is returned.</returns>
            <remarks>
            This method will search messages by the following parameters:
            <list type="bullet">
            <item><description>Content posting configuration.</description></item>
            <item><description>Content item is published.</description></item>
            <item><description>"Post automatically" is checked.</description></item>
            <item><description>Message is not in a workflow. Or message is in a final workflow state.</description></item>
            <item><description>Message is not posted.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.GetMessagesCount(System.String)">
            <summary>
            Gets number of messages attached to specific container.
            </summary>
            <param name="container">The container.</param>
            <returns>The number of messages attached to the specific container.</returns>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.CreateMessage(Sitecore.Social.Domain.Model.Message)">
            <summary>
            Creates a message.
            </summary>
            <param name="message">The message to create.</param>
            <remarks>The <see cref="P:Sitecore.Social.Domain.Model.Message.Id"/> field will contain identifier of the created message.</remarks>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.UpdateMessage(Sitecore.Social.Domain.Model.Message)">
            <summary>
            Updates the message.
            </summary>
            <param name="message">The message to update.</param>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.DeleteMessage(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Deletes the message.
            </summary>
            <param name="messageId">The message id.</param>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.PostMessage(Sitecore.Social.Domain.Model.Identifier,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Posts the message to a social network.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="tokensToReplace">The tokens to be replaced with the values during posting.</param>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.PostMessage(Sitecore.Social.Domain.Model.Identifier,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.AccountCredentials,Sitecore.Social.Domain.Model.MessageData)">
            <summary>
            Posts the message to a social network.
            </summary>
            <param name="networkId">Id of the network.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="accountCredentials">The account credentials.</param>
            <param name="messageData">The message data.</param>
            <returns>The social message id.</returns>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.PostMessage(System.String,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.AccountCredentials,Sitecore.Social.Domain.Model.MessageData)">
            <summary>
            Posts the message to a social network.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="accountCredentials">The account credentials.</param>
            <param name="messageData">The message data.</param>
            <returns>The social message id.</returns>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.GetMessageStatus(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the message status.
            </summary>
            <param name="messageId">The message id.</param>
            <returns>The <see cref="T:Sitecore.Social.Domain.Model.MessageStatus"/>. If the status is not defined <see cref="F:Sitecore.Social.Domain.Model.MessageStatus.Empty"/> is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.IMessageBusinessManager.GetMessageComments(System.String,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.AccountCredentials,System.String)">
            <summary>
            Gets the message comments.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="accountCredentials">The account credentials.</param>
            <param name="networkMessageId">The network message id.</param>
            <returns>The message comments list. If no comments are found an empty list is returned.</returns>
        </member>
        <member name="T:Sitecore.Social.IMessageStatisticsBusinessManager">
            <summary>
            Defines business methods to manage social network messages statistics.
            </summary>
        </member>
        <member name="M:Sitecore.Social.IMessageStatisticsBusinessManager.GetMessageStatistics(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets message statistics.
            </summary>
            <param name="messageId">The message id.</param>
            <returns>The message statistics.</returns>
        </member>
        <member name="M:Sitecore.Social.IMessageStatisticsBusinessManager.RefreshMessageStatistics(Sitecore.Social.Domain.Model.Identifier,System.Boolean)">
            <summary>
            Updates the message statistics from the social network.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="resetStatisticsRefreshing"><c>true</c> if it needs to reset the statistics refreshing; otherwise, <c>false</c>.</param>
        </member>
        <member name="M:Sitecore.Social.IMessageStatisticsBusinessManager.GetStatisticsCounterNames(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the statistics counters for the specific social network.
            </summary>
            <param name="networkId">The network id.</param>
            <returns>The collection of statistics counters.</returns>
        </member>
        <member name="M:Sitecore.Social.IMessageStatisticsBusinessManager.GetStatisticsCounterNames(System.String)">
            <summary>
            Gets the statistics counters for the specific social network.
            </summary>
            <param name="networkName">The network name.</param>
            <returns>The collection of statistics counters.</returns>
        </member>
        <member name="T:Sitecore.Social.INetworkBusinessManager">
            <summary>
            Defines business methods to manage social networks.
            </summary>
        </member>
        <member name="M:Sitecore.Social.INetworkBusinessManager.GetNetworks">
            <summary>
            The get networks.
            </summary>
            <returns>
            List of the installed networks.
            </returns>
        </member>
        <member name="M:Sitecore.Social.INetworkBusinessManager.GetNetwork(System.String)">
            <summary>
            Gets the network by network name.
            </summary>
            <param name="networkName">
            The network name.
            </param>
            <returns>
            The <see cref="T:Sitecore.Social.Domain.Model.Network"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.INetworkBusinessManager.GetNetwork(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the network by network id.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:Sitecore.Social.Domain.Model.Network"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.INetworkBusinessManager.GetNetworkSettings(System.String)">
            <summary>
            Gets the network settings.
            </summary>
            <param name="networkName">Name of the network.</param>
            <returns>The network settings.</returns>
        </member>
        <member name="M:Sitecore.Social.INetworkBusinessManager.GetNetworkSettings(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the network settings.
            </summary>
            <param name="networkId">The network identifier.</param>
            <returns>The network settings.</returns>
        </member>
        <member name="M:Sitecore.Social.INetworkBusinessManager.CanPostTo(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Defines is it possible to post to specified network.
            </summary>
            <param name="networkId">
            The network id.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.INetworkBusinessManager.CanPostTo(System.String)">
            <summary>
            Defines is it possible to post to specified network.
            </summary>
            <param name="networkName">
            The network name.
            </param>
            <returns>
            The <see cref="T:System.Boolean"/>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.INetworkBusinessManager.CanRenewAccount(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Determines whether it is possible to renew a network account.
            </summary>
            <param name="networkId">The network id.</param>
            <returns>
              <c>true</c> if it is possible to renew the network account; otherwise, <c>false</c>.
              <remarks><c>false</c> is returned, if the network is not found.</remarks>
            </returns>
        </member>
        <member name="M:Sitecore.Social.INetworkBusinessManager.CanRenewAccount(System.String)">
            <summary>
            Determines whether it is possible to renew a network account.
            </summary>
            <param name="networkName">The network name (case-sensitive).</param>
            <returns>
              <c>true</c> if it is possible to renew the network account; otherwise, <c>false</c>.
              <remarks><c>false</c> is returned, if the network is not found.</remarks>
            </returns>
        </member>
        <member name="M:Sitecore.Social.INetworkBusinessManager.CanGetAccountInfo(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Determines whether it is possible to get a network account info.
            </summary>
            <param name="networkId">The network id.</param>
            <returns>
              <c>true</c> if it is possible to get the network account info; otherwise, <c>false</c>.
            <remarks><c>false</c> is returned, if the network is not found.</remarks>
            </returns>
        </member>
        <member name="M:Sitecore.Social.INetworkBusinessManager.CanGetAccountInfo(System.String)">
            <summary>
            Determines whether it is possible to get a network account info.
            </summary>
            <param name="networkName">The network name.</param>
            <returns>
              <c>true</c> if it is possible to get the network account info; otherwise, <c>false</c>.
              <remarks><c>false</c> is returned, if the network is not found.</remarks>
            </returns>
        </member>
        <member name="M:Sitecore.Social.INetworkBusinessManager.CanRefreshAccountAccessTokenSecret(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Determines whether it is possible to refresh a network account access token secret.
            </summary>
            <param name="networkId">The network id.</param>
            <returns>
              <c>true</c> if it is possible to refresh the network account access token secret; otherwise, <c>false</c>.
              <remarks><c>false</c> is returned, if the network is not found.</remarks>
            </returns>
        </member>
        <member name="M:Sitecore.Social.INetworkBusinessManager.CanRefreshAccountAccessTokenSecret(System.String)">
            <summary>
            Determines whether it is possible to refresh a network account access token secret.
            </summary>
            <param name="networkName">The network name.</param>
            <returns>
              <c>true</c> if it is possible to refresh the network account access token secret; otherwise, <c>false</c>.
              <remarks><c>false</c> is returned, if the network is not found.</remarks>
            </returns>
        </member>
        <member name="T:Sitecore.Social.Installation.Helpers.AnalyticsWorkflowDeployHelper">
            <summary>
            Provides methods to deploy items that are in the Analytics Workflow.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Installation.Helpers.AnalyticsWorkflowDeployHelper.Deploy(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Deploys the items.
            </summary>
        </member>
        <member name="T:Sitecore.Social.Installation.Helpers.SetupSecurityHelper">
            <summary>
            Provides methods to install security roles and apply necessary permissions.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Installation.Helpers.SetupSecurityHelper.AuthorRoleName">
            <summary>
            Author role name.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Installation.Helpers.SetupSecurityHelper.SitecoreClientSocialAuthoringRoleName">
            <summary>
            Sitecore Client Social Authoring role name.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Installation.Helpers.SetupSecurityHelper.SocialMessageAuthorRoleName">
            <summary>
            Social Message Author role name.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Installation.Helpers.SetupSecurityHelper.SocialMessageEditorRoleName">
            <summary>
            Social Message Editor role name.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Installation.Helpers.SetupSecurityHelper.SocialMessageReviewerRoleName">
            <summary>
            Social Message Reviewer role name.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Installation.Helpers.SetupSecurityHelper.InstallClientSocialAuthoringRole">
            <summary>
            Installs and includes "Sitecore Client Social Authoring" role into "sitecore\Author" one.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Installation.Helpers.SetupSecurityHelper.InstallSocialMessageAuthorRole">
            <summary>
            Installs "Social Message Author" role.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Installation.Helpers.SetupSecurityHelper.InstallSocialMessageAuthorPermissionsOnSocialMessagesFolder">
            <summary>
            Installs the social message author permissions on social messages folder.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Installation.Helpers.SetupSecurityHelper.InstallSocialMessageAuthorPermissionsOnSocialTemplates(System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Installs the social message author permissions.
            </summary>
            <param name="standardValuesItemIds">The standard values item ids.</param>
        </member>
        <member name="M:Sitecore.Social.Installation.Helpers.SetupSecurityHelper.InstallSocialMessageEditorRole">
            <summary>
            Installs "Social Message Editor" role.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Installation.Helpers.SetupSecurityHelper.InstallSocialMessageEditorPermissionsOnSocialWorkflow(System.String)">
            <summary>
            Installs the social message editor role permissions.
            </summary>
            <param name="workflowId">The workflow identifier.</param>
        </member>
        <member name="M:Sitecore.Social.Installation.Helpers.SetupSecurityHelper.InstallSocialMessageReviewerRole">
            <summary>
            Installs "Social Message Reviewer" role.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Installation.Helpers.SetupSecurityHelper.InstallSocialMessageReviewerPermissionsOnSocialWorkflow(System.String)">
            <summary>
            Installs the social message reviewer role permissions.
            </summary>
            <param name="workflowId">The workflow identifier.</param>
        </member>
        <member name="T:Sitecore.Social.Installation.PostStepActions">
            <summary>
            Post step actions for module installation.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Installation.PostStepActions.Run(Sitecore.Install.Framework.ITaskOutput,System.Collections.Specialized.NameValueCollection)">
            <summary>
            Runs this post step
            </summary>
            <param name="output">The output.</param>
            <param name="metaData">The meta data.</param>
        </member>
        <member name="T:Sitecore.Social.IoC.Modules.BuildersModule">
            <summary>
            Defines bindings of builders implementations.
            </summary>
        </member>
        <member name="M:Sitecore.Social.IoC.Modules.BuildersModule.Load">
            <summary>
            Loads the module into the kernel.
            </summary>
        </member>
        <member name="T:Sitecore.Social.IoC.Modules.BusinessManagersModule">
            <summary>
            Defines bindings of business managers implementations.
            </summary>
        </member>
        <member name="M:Sitecore.Social.IoC.Modules.BusinessManagersModule.Load">
            <summary>
            Loads the module into the kernel.
            </summary>
        </member>
        <member name="T:Sitecore.Social.IoC.Modules.ConditionsModule">
            <summary>
            IoC module to bind rule conditions
            </summary>
        </member>
        <member name="T:Sitecore.Social.IoC.Modules.DmsModule">
            <summary>
            IoC module to bind DMS services
            </summary>
        </member>
        <member name="M:Sitecore.Social.IoC.Modules.DmsModule.Load">
            <summary>
            Loads the module into the kernel.
            </summary>
        </member>
        <member name="T:Sitecore.Social.IoC.Modules.LookupModule">
            <summary>
            IoC module to bind lookup services
            </summary>
        </member>
        <member name="M:Sitecore.Social.IoC.Modules.LookupModule.Load">
            <summary>
            Loads the module into the kernel.
            </summary>
        </member>
        <member name="T:Sitecore.Social.IoC.Modules.MessageStatisticsModule">
            <summary>
            Message statistic IoC module.
            </summary>
        </member>
        <member name="M:Sitecore.Social.IoC.Modules.MessageStatisticsModule.Load">
            <summary>
            Loads the module into the kernel.
            </summary>
        </member>
        <member name="T:Sitecore.Social.IoC.Modules.ProvidersModule">
            <summary>
            Defines bindings of providers implementations.
            </summary>
        </member>
        <member name="M:Sitecore.Social.IoC.Modules.ProvidersModule.Load">
            <summary>
            Loads the module into the kernel.
            </summary>
        </member>
        <member name="T:Sitecore.Social.IPostingPreferenceBusinessManager">
            <summary>
            Defines business methods to manage posting preferences of an user.
            </summary>
        </member>
        <member name="M:Sitecore.Social.IPostingPreferenceBusinessManager.GetPostingPreference(System.String,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets user's posting preferences for the specific message.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="messageId">The message id.</param>
            <returns>
            The posting preference. If the posting preference is not found the <see cref="F:Sitecore.Social.Domain.Model.AutomaticPostingPreference.Default" /> value is used.
            </returns>
            <seealso cref="P:Sitecore.Social.Domain.Model.PostingPreference.AutomaticPostingPreference" />
        </member>
        <member name="M:Sitecore.Social.IPostingPreferenceBusinessManager.SetPostingPreference(System.String,Sitecore.Social.Domain.Model.Identifier,Sitecore.Social.Domain.Model.AutomaticPostingPreference)">
            <summary>
            Sets user's posting preferences to the specific message.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="messageId">The message id.</param>
            <param name="automaticPostingPreference">The automatic posting preference.</param>
        </member>
        <member name="M:Sitecore.Social.IPostingPreferenceBusinessManager.AllowAutomaticPostingByDefault">
            <summary>
            Determines if automatic posting is allowed by default.
            </summary>
            <returns><c>true</c> if automatic posting is allowed by default, otherwise <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Social.IPostingPreferenceBusinessManager.AllowAutomaticPosting(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Allows automatic message posting.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="userName">Name of the user.</param>
            <returns>
              <c>true</c> if automatic posting is allowed, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.Social.ISocialProfileBusinessManager">
            <summary>
            Defines business methods to manage social profiles.
            </summary>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.GetSocialProfiles(System.String)">
            <summary>
            Gets all social profiles of the user.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <returns>
            The social profiles list. If there are no profiles, an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.GetSocialProfiles(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets all social profiles of the contact.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <returns>
            The social profiles list. If there are no profiles, an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.GetSocialProfile(System.String,System.String)">
            <summary>
            Gets a social profile of the user in the specified network.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <param name="networkName">
            The network name.
            </param>
            <returns>
            The social profile. If there are no profiles, an empty profile is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.GetSocialProfile(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Gets a social profile of the contact in the specified network.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">The network name.</param>
            <returns>
            The social profile. If there are no profiles, an empty profile is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.GetPrimarySocialProfile(System.String)">
            <summary>
            Gets a primary social profile of the user.
            </summary>
            <param name="userName">Name of the user.</param>
            <returns>
            The social profile. If there are no profiles, an empty profile is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.GetPrimarySocialProfile(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets a primary social profile of the contact.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <returns>
            The social profile. If there are no profiles, an empty profile is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.SocialProfileExists(System.String,System.String)">
            <summary>
            Defines if there is a social profile in the specified network.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <param name="networkName">
            The network name.
            </param>
            <returns>
            <c>true</c> if the social profile exists; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.SocialProfileExists(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Defines if there is a social profile in the specified network.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">The network name.</param>
            <returns>
              <c>true</c> if the social profile exists; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.SocialProfileFieldsExpired(System.String,System.String)">
            <summary>
            Defines if social profile fields are expired in the specified network.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <param name="networkName">
            The network name.
            </param>
            <returns>
            <c>true</c> if the social profile fields are expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.SocialProfileFieldsExpired(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Defines if social profile fields are expired in the specified network.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">The network name.</param>
            <returns>
              <c>true</c> if the social profile fields are expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.SocialProfileFieldsExpired(Sitecore.Social.Domain.Model.SocialProfile)">
            <summary>
            Defines if social profile fields are expired.
            </summary>
            <param name="socialProfile">The social profile.</param>
            <returns>
              <c>true</c> if the social profile fields are expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.SocialProfileAccountCredentialsExpired(System.String,System.String)">
            <summary>
            Defines if social profile account credentials are expired in the specified network.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <param name="networkName">
            The network name.
            </param>
            <returns>
            <c>true</c> if the social profile account credentials are expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.SocialProfileAccountCredentialsExpired(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Defines if social profile account credentials are expired in the specified network.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">The network name.</param>
            <returns>
              <c>true</c> if the social profile account credentials are expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.SocialProfileAccountCredentialsExpired(Sitecore.Social.Domain.Model.SocialProfile)">
            <summary>
            Defines if social profile account credentials are expired.
            </summary>
            <param name="socialProfile">The social profile.</param>
            <returns>
              <c>true</c> if the social profile account credentials are expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.AttachSocialProfile(System.String,Sitecore.Social.Domain.Model.SocialProfile)">
            <summary>
            Attaches a social profile to the specified user.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <param name="socialProfile">
            The social profile.
            </param>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.AttachSocialProfile(Sitecore.Social.Domain.Model.Identifier,Sitecore.Social.Domain.Model.SocialProfile)">
            <summary>
            Attaches a social profile to the specified contact.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="socialProfile">The social profile.</param>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.AttachSocialProfile(System.String,Sitecore.Social.Domain.Model.SocialProfile,System.Boolean)">
            <summary>
            Attaches a social profile to the specified user.
            </summary>
            <param name="userName">The user name.</param>
            <param name="socialProfile">The social profile.</param>
            <param name="checkNetworkAccountAlreadyAttached">if set to <c>true</c> then check that network account is already attached.</param>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.AttachSocialProfile(Sitecore.Social.Domain.Model.Identifier,Sitecore.Social.Domain.Model.SocialProfile,System.Boolean)">
            <summary>
            Attaches a social profile to the specified contact.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="socialProfile">The social profile.</param>
            <param name="checkNetworkAccountAlreadyAttached">if set to <c>true</c> then check that network account is already attached.</param>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.DetachSocialProfile(System.String,System.String)">
            <summary>
            Removes a social profile from the specified user.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <param name="networkName">
            The network name.
            </param>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.DetachSocialProfile(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Removes a social profile from the specified contact.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">The network name.</param>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.UpdateSocialProfile(System.String,Sitecore.Social.Domain.Model.SocialProfile)">
            <summary>
            Updates a social profile of the specified user.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <param name="socialProfile">
            The social profile.
            </param>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.UpdateSocialProfile(Sitecore.Social.Domain.Model.Identifier,Sitecore.Social.Domain.Model.SocialProfile)">
            <summary>
            Updates a social profile of the specified user.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="socialProfile">The social profile.</param>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.RetrieveSocialProfile(System.String,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.AccountCredentials)">
            <summary>
            Retrieves a social profile from the social network.
            </summary>
            <param name="networkName">The name of the network (case-sensitive).</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="accountCredentials">The account credentials.</param>
            <returns>The social profile. If the request couldn't be executed, an <see cref="F:Sitecore.Social.Domain.Model.SocialProfile.Empty" /> is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.RetrieveSocialProfileIdentityData(System.String,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.AccountCredentials)">
            <summary>
            Retrieves the social profile identity data from the social network.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="accountCredentials">The account credentials.</param>
            <returns>
            The social profile identity data.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.RetrieveSocialProfileFields(System.String,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.AccountCredentials)">
            <summary>
            Retrieves the social profile fields from the social network.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="accountCredentials">The account credentials.</param>
            <returns>
            The social profile fields.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.RefreshSocialProfiles(System.String,System.Boolean,System.Boolean)">
            <summary>
            Refreshes all social profiles attached to a user from social networks.
            </summary>
            <param name="userName">The user name.</param>
            <param name="refreshAsync">if set to <c>true</c> the social profiles will be refreshed asynchronously.</param>
            <param name="forceRefresh">if set to <c>true</c> the expiration configuration of the social profile will be ignored and the social profiles will be refreshed in any case.</param>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.RefreshSocialProfiles(Sitecore.Social.Domain.Model.Identifier,System.Boolean,System.Boolean)">
            <summary>
            Refreshes all social profiles attached to a contact from social networks.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="refreshAsync">if set to <c>true</c> the social profiles will be refreshed asynchronously.</param>
            <param name="forceRefresh">if set to <c>true</c> the expiration configuration of the social profile will be ignored and the social profiles will be refreshed in any case.</param>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.RefreshSocialProfile(System.String,System.String,System.Boolean)">
            <summary>
            Refreshes the social profile attached to a user from the specified network.
            </summary>
            <param name="userName">The user name.</param>
            <param name="networkName">The network name.</param>
            <param name="refreshAsync">if set to <c>true</c> the social profile will be refreshed asynchronously.</param>
            <remarks>
            The expiration configuration of the social profile will be ignored and the social profile will be refreshed in any case.
            </remarks>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.RefreshSocialProfile(Sitecore.Social.Domain.Model.Identifier,System.String,System.Boolean)">
            <summary>
            Refreshes the social profile attached to a contact from the specified network.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">The network name.</param>
            <param name="refreshAsync">if set to <c>true</c> the social profile will be refreshed asynchronously.</param>
            <remarks>
            The expiration configuration of the social profile will be ignored and the social profile will be refreshed in any case.
            </remarks>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.RefreshSocialProfileFields(System.String,System.String,System.Boolean)">
            <summary>
            Refreshes the social profile fields attached to a user from the specified network.
            </summary>
            <param name="userName">The user name.</param>
            <param name="networkName">The network name.</param>
            <param name="refreshAsync">if set to <c>true</c> the social profile fields will be refreshed asynchronously.</param>
            <remarks>
            The expiration configuration of the social profile will be ignored and the social profile fields will be refreshed in any case.
            </remarks>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.RefreshSocialProfileFields(Sitecore.Social.Domain.Model.Identifier,System.String,System.Boolean)">
            <summary>
            Refreshes the social profile fields attached to a contact from the specified network.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">The network name.</param>
            <param name="refreshAsync">if set to <c>true</c> the social profile fields will be refreshed asynchronously.</param>
            <remarks>
            The expiration configuration of the social profile will be ignored and the social profile fields will be refreshed in any case.
            </remarks>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.RefreshAccessTokenSecret(System.String,System.String,Sitecore.Social.Domain.Model.SocialProfileIdentityData,System.Nullable{System.TimeSpan})">
            <summary>
            Refreshes the access token secret.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="userName">Name of the user.</param>
            <param name="socialProfileIdentityData">The social profile identity data.</param>
            <param name="skipIfUsefulLifeExceeds">The remaining period of time to the expiration date the access token secret is treated as expired.</param>
            <returns><c>true</c> if the access token has been refreshed successfully or is not expired yet; otherwise,<c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.MatchUserForNetworkAccount(System.String,Sitecore.Social.Domain.Model.SocialProfileIdentityData)">
            <summary>
            Matches the user for network account based on social profile identity data.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="socialProfileIdentityData">The social profile identity data.</param>
            <returns>
            The user name.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.MatchUserForNetworkAccount(System.String,Sitecore.Social.Domain.Model.SocialProfileIdentityData,System.Boolean)">
            <summary>
            Matches the user for network account based on social profile identity data.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="socialProfileIdentityData">The social profile identity data.</param>
            <param name="createNewUserIfNoExistingFound"><c>true</c> new user will be created if no existing is found; otherwise, <c>false</c>.</param>
            <returns>
            The user name.
            </returns>
        </member>
        <member name="M:Sitecore.Social.ISocialProfileBusinessManager.GetUserNamesByNetworkAccountId(System.String,System.String)">
            <summary>
            Gets the user names by network account identifier.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="networkAccountId">The network account identifier.</param>
            <returns>The user names.</returns>
        </member>
        <member name="T:Sitecore.Social.IStatisticsStatusFactory">
            <summary>
            Represents the factory of receiving statistics status by the core status.
            </summary>
        </member>
        <member name="M:Sitecore.Social.IStatisticsStatusFactory.GetStatisticsStatus(Sitecore.Social.MessagePosting.MessageStatistics.StatisticsUpdateStatus)">
            <summary>
            Gets the statistics status by core status.
            </summary>
            <param name="updateStatus">The update status.</param>
            <returns>The statistics status.</returns>
        </member>
        <member name="T:Sitecore.Social.MessageBusinessManager">
            <summary>
            Defines business methods to manage social network messages.
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessageBusinessManager.networkProviderFactory">
            <summary>
            The network provider factory
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.#ctor(Sitecore.Social.INetworkBusinessManager,Sitecore.Social.Builders.IMessageDataBuilderFactory,Sitecore.Social.Builders.IPostingConfigurationBuilderFactory,Sitecore.Social.Builders.IMessageStatusBuilderFactory,Sitecore.Social.MessagePosting.Managers.IMessageItemManager,Sitecore.Social.Configuration.IConfigurationFactory,Sitecore.Social.Search.ISearchProvider,Sitecore.Social.MessagePosting.Managers.IMessagesByContainerCacheManager,Sitecore.Social.Strategies.IMessageDisplayNameStrategy,Sitecore.Social.NetworkProviders.Interfaces.INetworkProviderFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessageBusinessManager" /> class.
            </summary>
            <param name="networkBusinessManager">The network business manager.</param>
            <param name="messageDataBuilderFactory">The message data builder factory.</param>
            <param name="postingConfigurationBuilderFactory">The posting configuration builder factory.</param>
            <param name="postingConfigurationSearchArgsAdapterFactory">The posting configuration search args adapter factory.</param>
            <param name="messageStatusBuilderFactory">The message status builder factory.</param>
            <param name="messageItemManager">The message item manager.</param>
            <param name="configurationFactory">The configuration factory.</param>
            <param name="searchProvider">The search provider.</param>
            <param name="messagesByContainerCacheManager">The messages by container cache manager.</param>
            <param name="messageDisplayNameStrategy">The message display name strategy</param>
            <param name="networkProviderFactory">The network provider factory.</param>
        </member>
        <member name="P:Sitecore.Social.MessageBusinessManager.MessagesByContainerCacheManager">
            <summary>
            Gets the messages by container cache manager.
            </summary>
            <value>
            The messages by container cache manager.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessageBusinessManager.SearchProvider">
            <summary>
            Gets the search provider.
            </summary>
            <value>
            The search provider.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessageBusinessManager.MessageItemManager">
            <summary>
            Gets the message item manager.
            </summary>
            <value>
            The message item manager.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessageBusinessManager.NetworkBusinessManager">
            <summary>
            Gets the network business manager.
            </summary>
            <value>
            The network business manager.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessageBusinessManager.MessageDataBuilderFactory">
            <summary>
            Gets the message data builder factory.
            </summary>
            <value>
            The message data builder factory.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessageBusinessManager.PostingConfigurationBuilderFactory">
            <summary>
            Gets the posting configuration builder factory.
            </summary>
            <value>
            The posting configuration builder factory.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessageBusinessManager.MessageStatusBuilderFactory">
            <summary>
            Gets the message status builder factory.
            </summary>
            <value>
            The message status builder factory.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessageBusinessManager.ConfigurationFactory">
            <summary>
            Gets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessageBusinessManager.MessageDisplayNameStrategy">
            <summary>
            Gets the message display name strategy.
            </summary>
            <value>
            The message display name strategy.
            </value>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.GetMessage(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the message by id.
            </summary>
            <param name="messageId">The message id.</param>
            <returns>
            The message. If message is not found <see cref="F:Sitecore.Social.Domain.Model.Message.Empty" /> is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.GetMessagesByContainer(System.String)">
            <summary>
            Gets messages by container.
            </summary>
            <param name="container">The container.</param>
            <returns>
            The messages list. If no messages are found an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.GetMessagesByAccount(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets messages by account.
            </summary>
            <param name="accountId">The account id.</param>
            <returns>
            The messages list. If no messages are found an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.GetMessagesByWorkflowState(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets messages by workflow state.
            </summary>
            <param name="workflowStateId">The workflow state id.</param>
            <returns>
            The messages list. If no messages are found an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.GetMessagesByCreatedDate(System.DateTime)">
            <summary>
            Gets messages created on a specific date.
            </summary>
            <param name="createdDate">The created date.</param>
            <returns>
            The messages list. If no messages are found an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.GetPostedMessages(System.Nullable{System.DateTime})">
            <summary>
            Gets messages posted to a social network on a specific date.
            </summary>
            <param name="postedDate">The posted date.</param>
            <returns>
            The messages list. If no messages are found an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.GetNotPostedMessages">
            <summary>
            Gets all messages that are not posted to a social network.
            </summary>
            <returns>
            The messages list. If no messages are found an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.GetMessagesReadyToPostAutomatically(System.Collections.Generic.IEnumerable{Sitecore.Social.Domain.Model.Identifier})">
            <summary>
            Gets messages that are ready to be posted automatically.
            </summary>
            <param name="accountIds">The account ids.</param>
            <returns>
            The messages list. If no messages are found an empty list is returned.
            </returns>
            <remarks>
            This method will search messages by the following parameters:
            <list type="bullet">
            <item><description>Content posting configuration.</description></item>
            <item><description>Content item is published.</description></item>
            <item><description>"Post automatically" is checked.</description></item>
            <item><description>Message is not in a workflow. Or message is in a final workflow state.</description></item>
            <item><description>Message is not posted.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.GetMessagesCount(System.String)">
            <summary>
            Gets number of messages attached to specific container.
            </summary>
            <param name="container">The container.</param>
            <returns>
            The number of messages attached to the specific container.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.CreateMessage(Sitecore.Social.Domain.Model.Message)">
            <summary>
            Creates a message.
            </summary>
            <param name="message">The message to create.</param>
            <remarks>
            The <see cref="P:Sitecore.Social.Domain.Model.Message.Id" /> field will contain identifier of the created message.
            </remarks>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.UpdateMessage(Sitecore.Social.Domain.Model.Message)">
            <summary>
            Updates the message.
            </summary>
            <param name="message">The message to update.</param>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.DeleteMessage(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Deletes the message.
            </summary>
            <param name="messageId">The message id.</param>
            <exception cref="T:Sitecore.Exceptions.ItemNotFoundException">Message item is not found.</exception>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.PostMessage(Sitecore.Social.Domain.Model.Identifier,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Posts the message to a social network.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="tokensToReplace">The tokens to be replaced with the values during posting.</param>
            <exception cref="T:Sitecore.Exceptions.ItemNotFoundException">Message item is not found.</exception>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.PostMessage(Sitecore.Social.Domain.Model.Identifier,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.AccountCredentials,Sitecore.Social.Domain.Model.MessageData)">
            <summary>
            Posts a message directly to a social network.
            </summary>
            <param name="networkId">The network Id.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="accountCredentials">The account credentials.</param>
            <param name="messageData">The message Data.</param>
            <returns>The message id at the social network.</returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.PostMessage(System.String,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.AccountCredentials,Sitecore.Social.Domain.Model.MessageData)">
            <summary>
            Posts a message directly to a social network.
            </summary>
            <param name="networkName">The network name.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="accountCredentials">The account credentials.</param>
            <param name="messageData">The message data.</param>
            <returns>The message id at the social network.</returns>
            <exception cref="T:Sitecore.Social.NetworkProviders.Exceptions.InterfaceIsNotSupportedByProviderException">Network provider does not support message posting.</exception>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.GetMessageStatus(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the message status.
            </summary>
            <param name="messageId">The message id.</param>
            <returns>
            The <see cref="T:Sitecore.Social.Domain.Model.MessageStatus" />. If the status is not defined <see cref="F:Sitecore.Social.Domain.Model.MessageStatus.Empty" /> is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.GetMessageComments(System.String,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.AccountCredentials,System.String)">
            <summary>
            Gets the message comments.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="accountCredentials">The account credentials.</param>
            <param name="networkMessageId">The network message id.</param>
            <exception cref="T:Sitecore.Social.NetworkProviders.Exceptions.InterfaceIsNotSupportedByProviderException">Network provider does not support comments receiving.</exception>
            <returns>The message comments list. If no comments are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.GetMessages(System.Collections.Generic.IEnumerable{Sitecore.Social.Domain.Model.Identifier})">
            <summary>
            Gets the messages.
            </summary>
            <param name="messageIds">The message ids.</param>
            <returns>
            The messages.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.CreateConcreteMessageItemFrom(Sitecore.Data.Items.Item)">
            <summary>
            Creates the social message base from the message item.
            </summary>
            <param name="messageItem">The message item.</param>
            <returns>The social message base</returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.SearchMessagesByContainer(System.String)">
            <summary>
            Searches the messages by container.
            </summary>
            <param name="container">The container.</param>
            <returns>The messages.</returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.CreateMessageFrom(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Creates a message.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>The <see cref="T:Sitecore.Social.Domain.Model.Message"/>.</returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.CreateMessageDataFrom(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Creates a message.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>The message data.</returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.CreateCoreMessageFrom(Sitecore.Social.Domain.Model.MessageData)">
            <summary>
            Creates a core message.
            </summary>
            <param name="messageData">The social message base.</param>
            <returns>The message data.</returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.CreatePostingConfigurationFrom(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Creates the posting configuration from social message base.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <returns>The posting configuration.</returns>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.UpdateMessageItemFrom(Sitecore.Social.Domain.Model.Message,System.String,Sitecore.Social.Builders.IPostingConfigurationBuilder)">
            <summary>
            Updates the message item from message.
            </summary>
            <param name="message">The message.</param>
            <param name="postingConfigurationName">Name of the posting configuration.</param>
            <param name="postingConfigurationBuilder">The posting configuration builder.</param>
            <exception cref="T:Sitecore.Exceptions.ItemNotFoundException">Message item is not found.</exception>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.SetSecurityAccessForReviewing(Sitecore.Social.Domain.Model.Identifier,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Sets the security access for reviewing.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="reviewingRoles">The reviewing roles.</param>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.PutMessageInReviewingWorkflow(Sitecore.Social.Domain.Model.Identifier,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Puts the message in reviewing workflow.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="reviewingWorkflowId">The reviewing workflow id.</param>
            <exception cref="T:Sitecore.Exceptions.ItemNotFoundException">Workflow is not found.</exception>
        </member>
        <member name="M:Sitecore.Social.MessageBusinessManager.UpdateMessageDisplayName(Sitecore.Social.Domain.Model.Message)">
            <summary>
            Updates the message display name.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey">
            <summary>
            Defines the key of the messages by container cache.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey"/> class.
            </summary>
            <param name="container">The container.</param>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey.ItemId">
            <summary>
            Gets the container.
            </summary>
            <value>
            The container.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey.LanguageName">
            <summary>
            Gets the name of the language.
            </summary>
            <value>
            The name of the language.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey.DatabaseName">
            <summary>
            Gets the name of the database.
            </summary>
            <value>
            The name of the database.
            </value>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Cache.MessagesByContainerCache">
            <summary>
            Defines messages by container cache.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Cache.MessagesByContainerCache.#ctor(System.String,System.Int64)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Cache.MessagesByContainerCache"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="maxSize"> Max cache size.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Cache.MessagesByContainerCache.GetValue(Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey)">
            <summary>
            Gets the value by key.
            </summary>
            <param name="key">The key.</param>
            <returns>The value.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Cache.MessagesByContainerCache.SetValue(Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey,System.Collections.Generic.IList{Sitecore.Social.Domain.Model.Identifier})">
            <summary>
            Sets the value.
            </summary>
            <param name="key">The key.</param>
            <param name="value">The value.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Cache.MessagesByContainerCache.ContainsKey(Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey)">
            <summary>
            Determines whether the cache contains a key.
            </summary>
            <param name="key">The key.</param>
            <returns><c>true</c> if the cache contains the key; otherwise, <c>false</c>.</returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Conditions.PostingWithItemCondition">
            <summary>
            The class evaluates condition for posting message with item publishing.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Conditions.PostingWithItemCondition.#ctor(Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Conditions.PostingWithItemCondition"/> class.
            </summary>
            <param name="context">The context.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Conditions.PostingWithItemCondition.Evaluate(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Evaluates the specified message data.
            </summary>
            <param name="messageData">The message data.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Fields.MessageStatistics">
            <summary>
            The class represents message statistics.
            </summary>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Fields.MessageStatistics.UpdateStatus">
            <summary>
            Gets or sets the update status.
            </summary>
            <value>
            The update status.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Fields.MessageStatistics.LastRefreshDate">
            <summary>
            Gets or sets the last refresh date.
            </summary>
            <value>
            The last refresh date.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Fields.MessageStatistics.StartRefreshDate">
            <summary>
            Gets or sets the start refresh date.
            </summary>
            <value>
            The start refresh date.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Fields.MessageStatistics.MessageId">
            <summary>
            Gets or sets the message id.
            </summary>
            <value>
            The message id.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Fields.MessageStatistics.StatisticsElements">
            <summary>
            Gets or sets the statistics elements.
            </summary>
            <value>
            The statistics elements.
            </value>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Fields.MessageStatistics.Equals(Sitecore.Social.MessagePosting.Fields.MessageStatistics)">
            <summary>
            Checks if the current MessageStatistics is equal to another one.
            </summary>
            <param name="other">The other MessageStatistics.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Fields.MessageStatistics.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Fields.MessageStatistics.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Fields.MessageStatus">
            <summary>
            The class helps you to update a message status.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Fields.MessageStatus.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Fields.MessageStatus"/> class.
            </summary>
            <param name="rawstatus">The rawstatus.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Fields.MessageStatus.UpdateStatus(System.String,Sitecore.Social.MessagePosting.Fields.Status)">
            <summary>
            Updates the status.
            </summary>
            <param name="accountId">The account id.</param>
            <param name="status">The status.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Fields.MessageStatus.UpdateStatus(System.String,System.String,Sitecore.Social.MessagePosting.Fields.Status,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Updates the status.
            </summary>
            <param name="accountId">The account id.</param>
            <param name="messageId">The message id.</param>
            <param name="status">The status.</param>
            <param name="response">The response.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Fields.MessageStatus.CreateStatus(Sitecore.Social.MessagePosting.Fields.Status,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Creates the status.
            </summary>
            <param name="status">The status.</param>
            <param name="response">The response.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Fields.MessageStatus.SetResponse(System.Xml.Linq.XElement,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Sets the response.
            </summary>
            <param name="status">The status.</param>
            <param name="response">The response.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Fields.MessageStatus.GetStatistics(System.String)">
            <summary>
            Gets the statistics.
            </summary>
            <param name="accountItemId">The account item id.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Fields.MessageStatus.GetAccountStatus(System.String)">
            <summary>
            Gets the account status.
            </summary>
            <param name="accountId">The account id.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Fields.MessageStatus.ToString">
            <summary>
            Returns a <see cref="T:System.String"/> that represents this instance.
            </summary>
            <returns>
            A <see cref="T:System.String"/> that represents this instance.
            </returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Fields.StatisticsElement">
            <summary>
            The class represents the element of statistics.
            </summary>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Fields.StatisticsElement.Name">
            <summary>
            Gets or sets the name.
            </summary>
            <value>
            The name.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Fields.StatisticsElement.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Fields.StatisticsElement.Equals(Sitecore.Social.MessagePosting.Fields.StatisticsElement)">
            <summary>
            Checks if the current StatisticsElement is equal to another one.
            </summary>
            <param name="other">The other StatisticsElement.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Fields.StatisticsElement.Equals(System.Object)">
            <summary>
            Determines whether the specified <see cref="T:System.Object"/> is equal to this instance.
            </summary>
            <param name="obj">The <see cref="T:System.Object"/> to compare with this instance.</param>
            <returns>
              <c>true</c> if the specified <see cref="T:System.Object"/> is equal to this instance; otherwise, <c>false</c>.
            </returns>
            <exception cref="T:System.NullReferenceException">
            The <paramref name="obj"/> parameter is null.
            </exception>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Fields.StatisticsElement.GetHashCode">
            <summary>
            Returns a hash code for this instance.
            </summary>
            <returns>
            A hash code for this instance, suitable for use in hashing algorithms and data structures like a hash table. 
            </returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Fields.Status">
            <summary>
            The class represents the message status.
            </summary>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Fields.Status.eStatusType">
            <summary>
            The status type.
            </summary>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Fields.Status.ErrorText">
            <summary>
            Gets or sets the error text.
            </summary>
            <value>
            The error text.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Fields.Status.StatusType">
            <summary>
            Gets or sets the type of the status.
            </summary>
            <value>
            The type of the status.
            </value>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Items.MessageItemBase">
            <summary>
            The class represents the base wrapper for message item.
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.Items.MessageItemBase.StatusFieldName">
            <summary>
            The status field name
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.Items.MessageItemBase.CampaignFieldName">
            <summary>
            The campaign field name
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.Items.MessageItemBase.networkName">
            <summary>
            The network name
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.Items.MessageItemBase.campaignId">
            <summary>
            The campaign id
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.Items.MessageItemBase.messageItem">
            <summary>
            The message item
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Items.MessageItemBase.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Items.MessageItemBase"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Items.MessageItemBase.#ctor(Sitecore.Data.Items.Item)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Items.MessageItemBase"/> class.
            </summary>
            <param name="item">The item.</param>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Items.MessageItemBase.NetworkName">
            <summary>
            Gets the network name.
            </summary>
            <value>The network name.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Items.MessageItemBase.HasItem">
            <summary>
            Gets a value indicating whether this instance has item.
            </summary>
            <value><c>true</c> if this instance has item; otherwise, <c>false</c>.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Items.MessageItemBase.CampaignId">
            <summary>
            Gets or sets the campaign id.
            </summary>
            <value>The campaign id.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Items.MessageItemBase.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Items.MessageItemBase.Link">
            <summary>
            Gets the link.
            </summary>
            <value>The link.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Items.MessageItemBase.CreatedDate">
            <summary>
            Gets the created date.
            </summary>
            <value>The created date.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Items.MessageItemBase.PostedDate">
            <summary>
            Gets the posted date.
            </summary>
            <value>The posted date.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Items.MessageItemBase.Status">
            <summary>
            Gets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Items.MessageItemBase.MessageItem">
            <summary>
            Gets the message item.
            </summary>
            <value>The message item.</value>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Items.MessageItemBase.GetPostingConfigurationItem(System.String)">
            <summary>
            Gets the posting configuration item.
            </summary>
            <param name="postingConfigurationName">Name of the posting configuration.</param>
            <returns>The posting configuration item.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Items.MessageItemBase.SaveStatus(Sitecore.Social.MessagePosting.Fields.MessageStatus)">
            <summary>
            Saves the status.
            </summary>
            <param name="messageStatus">
            The message Status.
            </param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Items.MessageItemBase.DeleteMessage">
            <summary>
            Deletes the message.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Items.MessageItemBase.GetMessageNetworkName(Sitecore.Data.Items.Item)">
            <summary>
            Gets the name of the message network.
            </summary>
            <param name="item">The item.</param>
            <returns>The network name.</returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Managers.ILinkManager">
            <summary>
            Defines methods to manage link in a message.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.ILinkManager.GenerateLink(System.String,System.String)">
            <summary>
            Generates the link.
            </summary>
            <param name="linkField">The link field.</param>
            <param name="campaignId">The campaign id.</param>
            <returns>The link.</returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Managers.IMessageCampaignManager">
            <summary>
            Defines business methods to manage social message campaign.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessageCampaignManager.Create(System.String,Sitecore.Social.NetworkProviders.Network)">
            <summary>
            Creates the message campaign and deploys it.
            </summary>
            <param name="campaignName">Name of the campaign.</param>
            <param name="network">The <see cref="T:Sitecore.Social.NetworkProviders.Network" />.</param>
            <returns>The campaign identifier.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessageCampaignManager.Deploy(Sitecore.Data.Items.Item)">
            <summary>
            Deploys the specified campaign.
            </summary>
            <param name="campaign">The campaign.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessageCampaignManager.GetDefaultCampaignValue(System.String,System.String)">
            <summary>
            Returns default ID of Campaign
            </summary>
            <param name="networkName">Network name.</param>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>The default campaign value</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessageCampaignManager.IsCampaignField(System.String)">
            <summary>
            Checks if incoming ID is Campaign template ID.
            </summary>
            <param name="fieldId">Template ID.</param>
            <returns>If input field is campaign field</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessageCampaignManager.GetMessageCampaignRoot(Sitecore.Social.NetworkProviders.Network)">
            <summary>
            Gets the message campaign root.
            </summary>
            <param name="network">The network.</param>
            <returns>Campaign rood Id.</returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Managers.IMessageItemManager">
            <summary>
            Defines methods to manage message items.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessageItemManager.ReadMessageItems(System.Collections.Generic.IEnumerable{Sitecore.Social.Domain.Model.Identifier})">
            <summary>
            Reads the message items.
            </summary>
            <param name="messageIds">The message ids.</param>
            <returns>
            The message items list.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessageItemManager.BuildMessage(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Builds the message.
            </summary>
            <param name="messageId">The message id.</param>
            <returns>The message.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessageItemManager.BuildMessage(Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase,Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Builds the message.
            </summary>
            <param name="context">The context.</param>
            <param name="message">The message base.</param>
            <returns>
            The message.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessageItemManager.CreateMessage(Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase,Sitecore.Social.MessagePosting.Messages.Message)">
            <summary>
            Creates the message.
            </summary>
            <param name="context">The context.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessageItemManager.PostMessages(System.Collections.Generic.IEnumerable{Sitecore.Social.MessagePosting.Messages.Message})">
            <summary>
            Posts the messages.
            </summary>
            <param name="messages">The messages.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessageItemManager.PostMessage(Sitecore.Social.MessagePosting.Messages.Message)">
            <summary>
            Post the message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Managers.IMessagesByContainerCacheManager">
            <summary>
            Defines methods to manage the messages count cache.
            </summary>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Managers.IMessagesByContainerCacheManager.CacheEnabled">
            <summary>
            Determines if the cache is enabled.
            </summary>
            <returns><c>true</c> if the cache is enabled; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessagesByContainerCacheManager.GetMessages(Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey)">
            <summary>
            Gets cached messages by a key.
            </summary>
            <param name="key">The key.</param>
            <returns>The messages.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessagesByContainerCacheManager.AddMessageToCache(Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Adds a message to the cache.
            </summary>
            <param name="key">The key.</param>
            <param name="messageId">The message unique identifier.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessagesByContainerCacheManager.RemoveMessageFromCache(Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Removes a message to the cache.
            </summary>
            <param name="key">The key.</param>
            <param name="messageId">The message unique identifier.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessagesByContainerCacheManager.ContainsKey(Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey)">
            <summary>
            Determines whether the cache contains a key.
            </summary>
            <param name="key">The key.</param>
            <returns><c>true</c> if the cache contains the key; otherwise, <c>false</c>.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessagesByContainerCacheManager.ClearCache">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessagesByContainerCacheManager.ClearDatabaseCache(System.String)">
            <summary>
            Clears the database cache.
            </summary>
            <param name="databaseName">Name of the database.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.IMessagesByContainerCacheManager.ClearCache(Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey)">
            <summary>
            Clears the cache.
            </summary>
            <param name="cacheKey">The cache key.</param>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Managers.LinkManager">
            <summary>
            The class responds to links generating.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.LinkManager.#ctor(Sitecore.Social.Configuration.IConfigurationFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Managers.LinkManager"/> class.
            </summary>
            <param name="configurationFactory">The configuration factory.</param>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Managers.LinkManager.DefaultServerUrl">
            <summary>
            Gets or sets the default server URL.
            </summary>
            <value>The default server URL.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Managers.LinkManager.ConfigurationFactory">
            <summary>
            Gets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.LinkManager.GenerateLink(System.String,System.String)">
            <summary>
            Generates the link.
            </summary>
            <param name="linkField">The link field.</param>
            <param name="campaignId">The campaign id.</param>
            <returns>
            The link.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.LinkManager.GenerateDomainLink(Sitecore.Data.Items.Item)">
            <summary>
            Generates the domain link.
            </summary>
            <param name="item">The item.</param>
            <returns>The domain link.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.LinkManager.GenerateDefaultLink(Sitecore.Data.Items.Item)">
            <summary>
            Generates the default link.
            </summary>
            <param name="item">The item.</param>
            <returns>The default link.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.LinkManager.ResolveItemSite(Sitecore.Data.Items.Item)">
            <summary>
            Resolves the item site.
            </summary>
            <param name="item">The item.</param>
            <returns>The site name.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.LinkManager.AddQueryStringParameters(System.String,System.Collections.Specialized.NameValueCollection,System.String)">
            <summary>
            Adds the query string parameters.
            </summary>
            <param name="itemUrl">The item URL.</param>
            <param name="parametersToAdd">The parameters to add.</param>
            <param name="campaignId">The campaign id.</param>
            <returns>The url with added parameters.</returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Managers.MessagesByContainerCacheManager">
            <summary>
            Defines methods to manage the messages count cache.
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.Managers.MessagesByContainerCacheManager.cache">
            <summary>
            The cache instance.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessagesByContainerCacheManager.#ctor(Sitecore.Social.Configuration.IConfigurationFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Managers.MessagesByContainerCacheManager"/> class.
            </summary>
            <param name="configurationFactory">The configuration factory.</param>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Managers.MessagesByContainerCacheManager.CacheEnabled">
            <summary>
            Determines if the message cache is enabled.
            </summary>
            <returns><c>true</c> if the message cache is enabled; otherwise, <c>false</c>.</returns>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Managers.MessagesByContainerCacheManager.ConfigurationFactory">
            <summary>
            Gets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Managers.MessagesByContainerCacheManager.Cache">
            <summary>
            Gets the cache.
            </summary>
            <returns>The cache.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessagesByContainerCacheManager.GetMessages(Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey)">
            <summary>
            Gets cached messages by a key.
            </summary>
            <param name="key">The key.</param>
            <returns>The messages.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessagesByContainerCacheManager.AddMessageToCache(Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Adds a message to the cache.
            </summary>
            <param name="key">The key.</param>
            <param name="messageId">The message unique identifier.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessagesByContainerCacheManager.RemoveMessageFromCache(Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Removes a message to the cache.
            </summary>
            <param name="key">The key.</param>
            <param name="messageId">The message unique identifier.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessagesByContainerCacheManager.ContainsKey(Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey)">
            <summary>
            Determines whether the cache contains a key.
            </summary>
            <param name="key">The key.</param>
            <returns>
              <c>true</c> if the cache contains the key; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessagesByContainerCacheManager.ClearCache">
            <summary>
            Clears the cache.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessagesByContainerCacheManager.ClearDatabaseCache(System.String)">
            <summary>
            Clears the database cache.
            </summary>
            <param name="databaseName">Name of the database.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessagesByContainerCacheManager.ClearCache(Sitecore.Social.MessagePosting.Cache.MessagesByContainerCacheKey)">
            <summary>
            Clears the cache.
            </summary>
            <param name="cacheKey">The cache key.</param>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Managers.MessageCampaignManager">
            <summary>
            The class helps to work with message campaigns.
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.Managers.MessageCampaignManager.configurationFactory">
            <summary>
            The configuration factory
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.Managers.MessageCampaignManager.logManager">
            <summary>
            The log manager
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessageCampaignManager.#ctor(Sitecore.Social.Configuration.IConfigurationFactory,Sitecore.Social.Infrastructure.Logging.ILogManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Managers.MessageCampaignManager" /> class.
            </summary>
            <param name="configurationFactory">The configuration manager.</param>
            <param name="logManager">The log manager.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessageCampaignManager.Create(System.String,Sitecore.Social.NetworkProviders.Network)">
            <summary>
            Creates the message campaign and deploys it.
            </summary>
            <param name="campaignName">Name of the campaign.</param>
            <param name="network">The <see cref="T:Sitecore.Social.NetworkProviders.Network" />.</param>
            <returns>
            The campaign identifier.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessageCampaignManager.Deploy(Sitecore.Data.Items.Item)">
            <summary>
            Deploys the specified campaign.
            </summary>
            <param name="campaign">The campaign.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessageCampaignManager.GetDefaultCampaignValue(System.String,System.String)">
            <summary>
            Returns default ID of Campaign
            </summary>
            <param name="networkName">Network name.</param>
            <param name="postingConfiguration">The posting configuration.</param>
            <returns>The default campaign value</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessageCampaignManager.IsCampaignField(System.String)">
            <summary>
            Checks if incoming ID is Campaign template ID.
            </summary>
            <param name="fieldId">Template ID.</param>
            <returns>If input field is campaign field</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessageCampaignManager.GetMessageCampaignRoot(Sitecore.Social.NetworkProviders.Network)">
            <summary>
            Gets the message campaign root.
            </summary>
            <param name="network">The network.</param>
            <returns>Campaign rood Id.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessageCampaignManager.GetChannelId(System.String)">
            <summary>
            Gets the channel identifier.
            </summary>
            <param name="networkName">Name of the network.</param>
            <returns>The channel identifier.</returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Managers.MessageItemManager">
            <summary>
            Defines methods to manage message items.
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.Managers.MessageItemManager.ItemUriFieldId">
            <summary>
            The item URI field id
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessageItemManager.#ctor(Sitecore.Social.Configuration.IConfigurationFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Managers.MessageItemManager"/> class.
            </summary>
            <param name="configurationFactory">The configuration factory.</param>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Managers.MessageItemManager.ConfigurationFactory">
            <summary>
            Gets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessageItemManager.ReadMessageItems(System.Collections.Generic.IEnumerable{Sitecore.Social.Domain.Model.Identifier})">
            <summary>
            Reads message items.
            </summary>
            <param name="messageIds">The message ids.</param>
            <returns>
            The message items.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessageItemManager.BuildMessage(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Builds the message.
            </summary>
            <param name="messageId">The message id.</param>
            <returns>The message.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessageItemManager.BuildMessage(Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase,Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Builds the message.
            </summary>
            <param name="context">The context.</param>
            <param name="message">The message base.</param>
            <returns>
            The message.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessageItemManager.CreateMessage(Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase,Sitecore.Social.MessagePosting.Messages.Message)">
            <summary>
            Creates the message.
            </summary>
            <param name="context">The context.</param>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessageItemManager.PostMessages(System.Collections.Generic.IEnumerable{Sitecore.Social.MessagePosting.Messages.Message})">
            <summary>
            Posts the messages.
            </summary>
            <param name="messages">The messages.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Managers.MessageItemManager.PostMessage(Sitecore.Social.MessagePosting.Messages.Message)">
            <summary>
            Post the message.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.MessageStatistics.InlineCampaignIndicator">
            <summary>
            Inline campaign indicator.
            </summary>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.MessageStatistics.InlineCampaignIndicator.DisplayName">
            <summary>
            Gets or sets the display name.
            </summary>
            <value>
            The display name.
            </value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.MessageStatistics.InlineCampaignIndicator.Value">
            <summary>
            Gets or sets the value.
            </summary>
            <value>
            The value.
            </value>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.MessageStatistics.StatisticsUpdateStatus">
            <summary>
            Contains  variations of statistics update status.
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.MessageStatistics.StatisticsUpdateStatus.Done">
            <summary>
            Successful completing.
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.MessageStatistics.StatisticsUpdateStatus.Failed">
            <summary>
            Failed completing.
            </summary>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.MessageStatistics.Strategies.FibonacciRefreshStrategy">
            <summary>
            Implements the following strategy:
            1. It will update statistics of message that is old (starting from posted date) according to Fibonacci numbers (1 hour old, 2 hours old, 3 hours old, 5 hours old, 8 hours old, etc.)
            2. Message statistics update will be stopped after 2584 hours (107 days) – the 18th Fibonacci number.
            3. In case of an user initiates message statistics update manually we will reset current Fibonacci counter to start point.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.MessageStatistics.Strategies.FibonacciRefreshStrategy.#ctor(Sitecore.Social.Configuration.IConfigurationFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.MessageStatistics.Strategies.FibonacciRefreshStrategy"/> class.
            </summary>
            <param name="configurationFactory">The configuration manager.</param>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.MessageStatistics.Strategies.FibonacciRefreshStrategy.FibonacciAges">
            <summary>
            Gets Fibonacci ages (in minutes).
            </summary>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.MessageStatistics.Strategies.FibonacciRefreshStrategy.ConfigurationFactory">
            <summary>
            Gets the configuration manager.
            </summary>
            <value>
            The configuration manager.
            </value>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.MessageStatistics.Strategies.FibonacciRefreshStrategy.IsStatisticsExpired(System.DateTime,System.DateTime)">
            <summary>
            Determines whether the message statistics is expired.
            </summary>
            <param name="startRefreshDate">The start refresh date.</param>
            <param name="lastRefreshDate">The last refresh date.</param>
            <returns>
              <c>true</c> if the statistics is expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.MessageStatistics.Strategies.FibonacciRefreshStrategy.FillFibonacciAges">
            <summary>
            Fills the fibonacci ages (in minutes).
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.MessageStatistics.Strategies.FibonacciRefreshStrategy.GetNearestPreviousFibbonacciAgeMinutes(System.Int32)">
            <summary>
            Gets the nearest previous fibbonacci age (in minutes).
            </summary>
            <param name="ageMinutes">The age (in minutes).</param>
            <returns>Fibbonacci age.</returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.MessageStatistics.Strategies.IFibonacciRefreshStrategy">
            <summary>
            Fibonacci refresh strategy interface.
            </summary>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.MessageStatistics.Strategies.IFibonacciRefreshStrategy.FibonacciAges">
            <summary>
            Gets Fibonacci ages (in minutes).
            </summary>         
        </member>
        <member name="T:Sitecore.Social.MessagePosting.MessageStatistics.Strategies.IRefreshStrategy">
            <summary>
            Social message statistics refresh strategy
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.MessageStatistics.Strategies.IRefreshStrategy.IsStatisticsExpired(System.DateTime,System.DateTime)">
            <summary>
            Determines whether is message statistics expired.
            </summary>
            <param name="startRefreshDate">The start refresh date.</param>
            <param name="lastRefreshDate">The last refresh date.</param>
            <returns>
              <c>true</c> if statistics is expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Messages.Message">
            <summary>
            The message class.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Messages.Message.#ctor(Sitecore.Social.NetworkProviders.Network)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Messages.Message"/> class.
            </summary>
            <param name="network">Type of the network.</param>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Messages.Message.Id">
            <summary>
            Gets or sets the id.
            </summary>
            <value>The id.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Messages.Message.Accounts">
            <summary>
            Gets or sets the accounts.
            </summary>
            <value>The accounts.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Messages.Message.Item(System.String)">
            <summary>
            Gets the <see cref="T:System.String"/> with the specified indexer.
            </summary>
            <value></value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Messages.Message.Status">
            <summary>
            Gets the status.
            </summary>
            <value>The status.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Messages.Message.Network">
            <summary>
            Gets the type of the account.
            </summary>
            <value>The type of the account.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Messages.Message.Properties">
            <summary>
            Gets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessage">
            <summary>
            The class for building of message on the basis of build provider.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessage.Process(Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessagePipelineArgs)">
            <summary>
            Processor for building message.
            </summary>
            <param name="args">The build message pipeline args.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessage.GenerateLink(System.String,System.String)">
            <summary>
            Generates the link.
            </summary>
            <param name="rawLink">The raw link.</param>
            <param name="campaignId">The campaign id.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessage.GenerateImageUrl(System.String,System.String)">
            <summary>
            Generates the image URL.
            </summary>
            <param name="rawLink">The raw link.</param>
            <param name="linkUrl">The link URL.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessagePipelineArgs">
            <summary>
            The class encapsulate pipeline args for message building.
            </summary>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessagePipelineArgs.BuildProperties">
            <summary>
            Gets or sets the build properties.
            </summary>
            <value>The build properties.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessagePipelineArgs.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessagePipelineArgs.BuildProvider">
            <summary>
            Gets or sets the build provider.
            </summary>
            <value>The build provider.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessagePipelineArgs.Context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessagePipelineArgs.MessageData">
            <summary>
            Gets or sets the message data.
            </summary>
            <value>The message data.</value>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessageProperties">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessageProperties.properties">
            <summary>
            The properties
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessageProperties.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessageProperties"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessageProperties.Properties">
            <summary>
            Gets or sets the properties.
            </summary>
            <value>The properties.</value>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.ReplaceTokens">
            <summary>
            The class for replacing tokens with their values.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.ReplaceTokens.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.ReplaceTokens"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.ReplaceTokens.Process(Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessagePipelineArgs)">
            <summary>
            Processor replaces tokens with their values.
            </summary>
            <param name="args">The build message pipeline args.</param>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.ResolveRenderer">
            <summary>
            The class for resolving of build message provider.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.BuildMessage.ResolveRenderer.Process(Sitecore.Social.MessagePosting.Pipelines.BuildMessage.BuildMessagePipelineArgs)">
            <summary>
            Processor for message provider resolving.
            </summary>
            <param name="args">The build message pipeline args.</param>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateItem">
            <summary>
            The class creates message item.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateItem.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateItem"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateItem.ConfigurationFactory">
            <summary>
            Gets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateItem.Process(Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateMessagePipelineArgs)">
            <summary>
            Processor for message creation.
            </summary>
            <param name="args">The create message pipeline args.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateItem.CreateMessage(Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase,Sitecore.Data.Items.Item,Sitecore.Social.MessagePosting.Messages.Message)">
            <summary>
            Creates the message.
            </summary>
            <param name="context">The context.</param>
            <param name="root">The root.</param>
            <param name="message">The message.</param>
            <returns>The message item.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateItem.CreateContextItem(Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase,Sitecore.Data.Items.Item)">
            <summary>
            Creates the context item.
            </summary>
            <param name="context">The context.</param>
            <param name="messageItem">The message item.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateItem.CreateMessageItemByAccount(Sitecore.Data.Items.Item,Sitecore.Social.MessagePosting.Messages.Message)">
            <summary>
            Creates the message item by account.
            </summary>
            <param name="root">The root.</param>
            <param name="message">The message.</param>
            <returns>The message item.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateItem.GetMessageTemplateId(System.String)">
            <summary>
            Gets the message template id.
            </summary>
            <param name="networkName">Name of the network.</param>
            <returns>The message template ID.</returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateMessagePipelineArgs">
            <summary>
            The CreateMessagePipelineArgs class.
            </summary>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateMessagePipelineArgs.Context">
            <summary>
            Gets or sets the context.
            </summary>
            <value>The context.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateMessagePipelineArgs.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateMessagePipelineArgs.ContentItem">
            <summary>
            Gets or sets the content item.
            </summary>
            <value>The content item.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateMessagePipelineArgs.Root">
            <summary>
            Gets or sets the root.
            </summary>
            <value>The root.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateMessagePipelineArgs.MessageItem">
            <summary>
            Gets or sets the message item.
            </summary>
            <value>The message item.</value>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.GetRoot">
            <summary>
            The class selects messages container.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.GetRoot.Process(Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateMessagePipelineArgs)">
            <summary>
            Processor for getting messages container.
            </summary>
            <param name="args">The create message pipeline args.</param>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.SaveData">
            <summary>
            The class fills and saves message item.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.SaveData.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.SaveData"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.CreateMessage.SaveData.Process(Sitecore.Social.MessagePosting.Pipelines.CreateMessage.CreateMessagePipelineArgs)">
            <summary>
            Processor for message item filling and saving.
            </summary>
            <param name="args">The create message pipeline args.</param>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Pipelines.PostMessage.PostMessage">
            <summary>
            The class for message posting to social network.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.PostMessage.PostMessage.Process(Sitecore.Social.MessagePosting.Pipelines.PostMessage.PostMessagePipelineArgs)">
            <summary>
            Processor for message posting.
            </summary>
            <param name="args">The Posting pipeline args.</param>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Pipelines.PostMessage.PostMessagePipelineArgs">
            <summary>
            The class encapsulate pipeline args for message posting.
            </summary>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.PostMessage.PostMessagePipelineArgs.Message">
            <summary>
            Gets the message.
            </summary>
            <value>The message.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.PostMessage.PostMessagePipelineArgs.Provider">
            <summary>
            Gets or sets the provider.
            </summary>
            <value>The provider.</value>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Pipelines.PostMessage.ResolveMessagePostingProvider">
            <summary>
            The class defines which publish provider will be used.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.PostMessage.ResolveMessagePostingProvider.Process(Sitecore.Social.MessagePosting.Pipelines.PostMessage.PostMessagePipelineArgs)">
            <summary>
            Processor for publish provider determination.
            </summary>                                                                                              
            <param name="args">The Posting pipeline args.</param>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Pipelines.ReadMessage.ReadMessagePipelineArgs">
            <summary>
            The class encapsulate pipeline args for message reading.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.ReadMessage.ReadMessagePipelineArgs.#ctor(System.Collections.Generic.IEnumerable{Sitecore.Social.Domain.Model.Identifier})">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Pipelines.ReadMessage.ReadMessagePipelineArgs"/> class.
            </summary>
            <param name="messageIds">The item ids.</param>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.ReadMessage.ReadMessagePipelineArgs.MessageIds">
            <summary>
            Gets or sets the message ids.
            </summary>
            <value>
            The message ids.
            </value>
            <remarks>
            Contains ids of the message items to be read.
            </remarks>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.ReadMessage.ReadMessagePipelineArgs.MessageItems">
            <summary>
            Gets or sets the message items.
            </summary>
            <value>
            The message items.
            </value>
            <remarks>Contains the items to be returned.</remarks>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Pipelines.ReadMessage.ReadMessages">
            <summary>
            The class reads message items from specified root path.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.ReadMessage.ReadMessages.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Pipelines.ReadMessage.ReadMessages"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Pipelines.ReadMessage.ReadMessages.ConfigurationFactory">
            <summary>
            Gets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.ReadMessage.ReadMessages.Process(Sitecore.Social.MessagePosting.Pipelines.ReadMessage.ReadMessagePipelineArgs)">
            <summary>
            Processor for message item reading.
            </summary>
            <param name="args">The read message pipeline args.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Pipelines.ReadMessage.ReadMessages.ReadMessageItem(Sitecore.Social.Domain.Model.Identifier,System.Collections.Generic.IEnumerable{Sitecore.Social.MessagePosting.Items.MessageItemBase})">
            <summary>
            Reads the message item.
            </summary>
            <param name="messageId">The message unique identifier.</param>
            <param name="messageItems">The message items.</param>
            <returns>
            The message item.
            </returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.PostingPreferences.Providers.IPostingPreferenceProvider">
            <summary>
            Defines methods to manage posting preferences persistence.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.PostingPreferences.Providers.IPostingPreferenceProvider.GetPreference(System.Guid,Sitecore.Security.Accounts.User)">
            <summary>
            Gets the preference.
            </summary>
            <param name="messageId">The message identifier.</param>
            <param name="user">The user.</param>
            <returns>The preference.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.PostingPreferences.Providers.IPostingPreferenceProvider.SetPreference(System.Guid,Sitecore.Security.Accounts.User,Sitecore.Social.Domain.Model.AutomaticPostingPreference)">
            <summary>
            Sets the preference.
            </summary>
            <param name="messageId">The message identifier.</param>
            <param name="user">The user.</param>
            <param name="preference">The preference.</param>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.PostingPreferences.Providers.MembershipPostingPreferenceProvider">
            <summary>
            Defines methods to manage posting preferences.
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.PostingPreferences.Providers.MembershipPostingPreferenceProvider.MsgPublishAccessPrefix">
            <summary>
            The message publish access prefix
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.PostingPreferences.Providers.MembershipPostingPreferenceProvider.GetPreference(System.Guid,Sitecore.Security.Accounts.User)">
            <summary>
             Determines whether message has publish preference for the user.
            </summary>
            <param name="messageId">The message id</param>
            <param name="user">The user account</param>
            <exception cref="T:System.Exception">There is no item with this id</exception>
            <exception cref="T:System.Exception">The requested item should be inherited from the Message template</exception>
            <returns>The access type value</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.PostingPreferences.Providers.MembershipPostingPreferenceProvider.SetPreference(System.Guid,Sitecore.Security.Accounts.User,Sitecore.Social.Domain.Model.AutomaticPostingPreference)">
            <summary>
             Sets the publish preference for the user.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="user">The user account</param>
            <param name="preference">The publish preference</param>
            <exception cref="T:System.Exception">There is no item with this id.</exception>
            <exception cref="T:System.Exception">The requested item should be inherited from the Message template.</exception>
            <exception cref="T:System.Exception">Unable to set preference to the anonymous user.</exception>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.PostingPreferences.Providers.MembershipPostingPreferenceProvider.GetPrefenceKey(System.Guid)">
            <summary>
            Gets the preference key.
            </summary>
            <param name="messageId">The message id</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.PostingPreferences.Providers.MembershipPostingPreferenceProvider.AssertMessage(System.Guid)">
            <exception cref="T:System.Exception">There is no item with this id</exception>
            <exception cref="T:System.Exception">The requested item should be inherited from the Message template</exception>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.PostingPreferences.Providers.MembershipPostingPreferenceProvider.CheckMessageTemplate(Sitecore.Data.Items.TemplateItem)">
            <summary>
            Recursively checks if the template is inherited from the Message template
            </summary>
            <param name="template"></param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Providers.BuildMessageProviderBase">
            <summary>
            The class helps you 
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.BuildMessageProviderBase.BuildMessage(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Builds the message.
            </summary>
            <param name="messageData">The message data.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Providers.ContentPostingMessageBuilder">
            <summary>
            Represents content posting message builder.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.ContentPostingMessageBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Providers.ContentPostingMessageBuilder"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.ContentPostingMessageBuilder.BuildMessage(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Builds the message.
            </summary>
            <param name="messageData">The message data.</param>
            <returns>The <see cref="T:Sitecore.Social.MessagePosting.Messages.Message"/>.</returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Providers.GoalPostingMessageBuilder">
            <summary>
            Represents goal posting message builder.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.GoalPostingMessageBuilder.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Providers.GoalPostingMessageBuilder"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.GoalPostingMessageBuilder.BuildMessage(Sitecore.Social.MessagePosting.Items.MessageItemBase)">
            <summary>
            Builds the message.
            </summary>
            <param name="messageData">The message data.</param>
            <returns>The <see cref="T:Sitecore.Social.MessagePosting.Messages.Message"/>.</returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.ItemAccountProvider.GetAccounts(Sitecore.Data.Items.Item)">
            <summary>
            Gets the accounts.
            </summary>
            <param name="accountsContainerItem">The accounts container item.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.ItemAccountProvider.GetAccountFromItem(Sitecore.Data.Items.Item)">
            <summary>
            Gets the account from item.
            </summary>
            <param name="accountItem">The account item.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.ItemAccountProvider.GetAccountItems(Sitecore.Data.Items.Item)">
            <summary>
            Gets the account items.
            </summary>
            <param name="accountsContainerItem">The accounts container item.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Providers.ProfileAccountProvider">
            <summary>
            
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.ProfileAccountProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Providers.ProfileAccountProvider"/> class.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.ProfileAccountProvider.#ctor(Sitecore.Social.ISocialProfileBusinessManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Providers.ProfileAccountProvider"/> class.
            </summary>
            <param name="socialProfileBusinessManager">The social profile business manager.</param>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.Providers.ProfileAccountProvider.SocialProfileBusinessManager">
            <summary>
            Gets or sets the social profile business manager.
            </summary>
            <value>
            The social profile business manager.
            </value>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.ProfileAccountProvider.GetAccounts(Sitecore.Security.Accounts.User)">
            <summary>
            Gets the accounts.
            </summary>
            <param name="user">The user.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.Providers.MessagePostingProviderBase">
            <summary>
            Represents the base provider for the posting providers.
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.Providers.MessagePostingProviderBase.IsAccessTokenExpiredKey">
            <summary>
            The is access token expired key
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessagePosting.Providers.MessagePostingProviderBase.Message">
            <summary>
            The message
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.MessagePostingProviderBase.#ctor(Sitecore.Social.MessagePosting.Messages.Message)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.Providers.MessagePostingProviderBase"/> class.
            </summary>
            <param name="message">The message.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.MessagePostingProviderBase.PostAll">
            <summary>
            Posts the messages in all accounts.
            This method needs to be overridden in the descendant class and Post method of the current class needs to be called inside.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.MessagePostingProviderBase.UpdateStatus(Sitecore.Social.Accounts.Account,Sitecore.Social.MessagePosting.Fields.Status)">
            <summary>
            Updates the status.
            </summary>
            <param name="account">The account.</param>
            <param name="status">The status.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.MessagePostingProviderBase.SaveMessageStatus">
            <summary>
            Saves the message status.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.MessagePostingProviderBase.Post(System.Func{Sitecore.Social.Accounts.Account,Sitecore.Social.NetworkProviders.PostResult})">
            <summary>
            Posts the message to social accounts.
            </summary>
            <param name="action">The action.</param>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.Providers.MessagePostingProviderBase.GetNetworkName(Sitecore.Social.Accounts.Account)">
            <summary>
            Gets the name of the network.
            </summary>
            <param name="account">The account.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.PostingConfigurationContext.IMessageFilterCondition">
            <summary>
            TODO: Update summary.
            </summary>
        </member>
        <member name="T:Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase">
            <summary>
            Represents base posting configuration.
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase.#ctor(System.String,System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase"/> class.
            </summary>
            <param name="name">The name.</param>
            <param name="itemUri">The item URI.</param>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase.Name">
            <summary>
            Gets the name.
            </summary>
            <value>The name.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase.Parameters">
            <summary>
            Gets the parameters.
            </summary>
            <value>The parameters.</value>
        </member>
        <member name="P:Sitecore.Social.MessagePosting.PostingConfigurationContext.PostingConfigurationBase.Data">
            <summary>
            Gets or sets the data.
            </summary>
            <value>The data.</value>
        </member>
        <member name="T:Sitecore.Social.MessageStatisticsBusinessManager">
            <summary>
            Defines business methods to manage social network messages statistics.
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessageStatisticsBusinessManager.statisticsStatusFactory">
            <summary>
            The statistics status factory.
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessageStatisticsBusinessManager.networkBusinessManager">
            <summary>
            The network business manager
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessageStatisticsBusinessManager.networkProviderFactory">
            <summary>
            The network provider factory
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessageStatisticsBusinessManager.messageItemManager">
            <summary>
            The message item manager
            </summary>
        </member>
        <member name="F:Sitecore.Social.MessageStatisticsBusinessManager.logManager">
            <summary>
            The log manager
            </summary>
        </member>
        <member name="M:Sitecore.Social.MessageStatisticsBusinessManager.#ctor(Sitecore.Social.IStatisticsStatusFactory,Sitecore.Social.INetworkBusinessManager,Sitecore.Social.NetworkProviders.Interfaces.INetworkProviderFactory,Sitecore.Social.MessagePosting.Managers.IMessageItemManager,Sitecore.Social.Infrastructure.Logging.ILogManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.MessageStatisticsBusinessManager" /> class.
            </summary>
            <param name="statisticsStatusFactory">The statistics status factory.</param>
            <param name="networkBusinessManager">The network business manager.</param>
            <param name="networkProviderFactory">The network provider factory.</param>
            <param name="messageItemManager">The message item manager.</param>
            <param name="logManager">The log manager.</param>
        </member>
        <member name="M:Sitecore.Social.MessageStatisticsBusinessManager.GetMessageStatistics(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets message statistics.
            </summary>
            <param name="messageId">The message id.</param>
            <returns>The message statistics.</returns>
        </member>
        <member name="M:Sitecore.Social.MessageStatisticsBusinessManager.RefreshMessageStatistics(Sitecore.Social.Domain.Model.Identifier,System.Boolean)">
            <summary>
            Updates the message statistics from the social network.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="resetStatisticsRefreshing"><c>true</c> if it needs to reset the statistics refreshing; otherwise, <c>false</c>.</param>
            <exception cref="T:Sitecore.Social.NetworkProviders.Exceptions.SocialMessageIsNotFoundException">Message is not found.</exception>
        </member>
        <member name="M:Sitecore.Social.MessageStatisticsBusinessManager.GetStatisticsCounterNames(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the statistics counters for the specific social network.
            </summary>
            <param name="networkId">The network id.</param>
            <returns>
            The collection of statistics counters.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessageStatisticsBusinessManager.GetStatisticsCounterNames(System.String)">
            <summary>
            Gets the statistics counters for the specific social network.
            </summary>
            <param name="networkName">The network name.</param>
            <returns>
            The collection of statistics counters.
            </returns>
        </member>
        <member name="M:Sitecore.Social.MessageStatisticsBusinessManager.GetNetworkAccount(Sitecore.Social.Accounts.Account)">
            <summary>
            Gets the network account.
            </summary>
            <param name="account">The account.</param>
            <returns>The network account.</returns>
        </member>
        <member name="M:Sitecore.Social.MessageStatisticsBusinessManager.RefreshStatistics(Sitecore.Social.MessagePosting.Items.MessageItemBase,System.Boolean)">
            <summary>
            Refreshes the statistics.
            </summary>
            <param name="messageItemBase">The social message base.</param>
            <param name="isAutomatic">if set to <c>true</c> [is automatic].</param>
        </member>
        <member name="M:Sitecore.Social.MessageStatisticsBusinessManager.UpdateStatisticsFromSocialNetwork(Sitecore.Social.NetworkProviders.Account,Sitecore.Social.MessagePosting.Fields.MessageStatistics,System.Boolean)">
            <summary>
            Updates the statistics from social network.
            </summary>
            <param name="account">The account.</param>
            <param name="messageStatistics">The message statistics.</param>
            <param name="isAutomatic">if set to <c>true</c> [is automatic].</param>
            <exception cref="T:System.Exception">Unable to create network provider for account</exception>
        </member>
        <member name="T:Sitecore.Social.NetworkBusinessManager">
            <summary>
            Defines business methods that are used to manage social networks.
            </summary>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.#ctor(Sitecore.Social.NetworkProviders.Interfaces.INetworkProviderFactory,Sitecore.Social.Configuration.IConfigurationFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.NetworkBusinessManager" /> class with specific network provider factory and configuration factory.
            </summary>
            <param name="networkProviderFactory">The network provider factory.</param>
            <param name="configurationFactory">The configuration factory.</param>
        </member>
        <member name="P:Sitecore.Social.NetworkBusinessManager.ConfigurationFactory">
            <summary>
            Gets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="P:Sitecore.Social.NetworkBusinessManager.NetworkProviderFactory">
            <summary>
            Gets the network provider factory.
            </summary>
            <value>
            The network provider factory.
            </value>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.GetNetworks">
            <summary>
            Gets all registered networks.
            </summary>
            <returns>The network list. If there are no networks, an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.GetNetwork(System.String)">
            <summary>
            Gets a network by name.
            </summary>
            <param name="networkName">The name of the network (case-sensitive).</param>
            <returns>The network. If the network is not found <see cref="F:Sitecore.Social.Domain.Model.Network.Empty"/> is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.GetNetwork(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets a network by id.
            </summary>
            <param name="networkId">Id of the network.</param>
            <returns>The network. If the network is not found <see cref="F:Sitecore.Social.Domain.Model.Network.Empty"/> is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.GetNetworkSettings(System.String)">
            <summary>
            Gets the network settings.
            </summary>
            <param name="networkName">Name of the network.</param>
            <returns>
            The network settings.
            </returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.GetNetworkSettings(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the network settings.
            </summary>
            <param name="networkId">The network identifier.</param>
            <returns>
            The network settings.
            </returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.CanPostTo(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Determines whether it is possible to post messages to the network.
            </summary>
            <param name="networkId">The network id.</param>
            <returns>
              <c>true</c> if it is possible to post messages to the network; otherwise, <c>false</c>.
              <remarks><c>false</c> is returned, if the network is not found.</remarks>
            </returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.CanPostTo(System.String)">
            <summary>
            Determines whether it is possible to post messages to the network.
            </summary>
            <param name="networkName">The network name.</param>
            <returns>
              <c>true</c> if it is possible to post messages to the network; otherwise, <c>false</c>.
              <remarks><c>false</c> is returned, if the network is not found.</remarks>
            </returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.CanRenewAccount(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Determines whether it is possible to renew a network account.
            </summary>
            <param name="networkId">The network id.</param>
            <returns>
              <c>true</c> if it is possible to renew the network account; otherwise, <c>false</c>.
              <remarks><c>false</c> is returned, if the network is not found.</remarks>
            </returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.CanRenewAccount(System.String)">
            <summary>
            Determines whether it is possible to renew a network account.
            </summary>
            <param name="networkName">The network name (case-sensitive).</param>
            <returns>
              <c>true</c> if it is possible to renew the network account; otherwise, <c>false</c>.
              <remarks><c>false</c> is returned, if the network is not found.</remarks>
            </returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.CanGetAccountInfo(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Determines whether it is possible to get a network account info.
            </summary>
            <param name="networkId">The network id.</param>
            <returns>
              <c>true</c> if it is possible to get the network account info; otherwise, <c>false</c>.
              <remarks><c>false</c> is returned, if the network is not found.</remarks>
            </returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.CanGetAccountInfo(System.String)">
            <summary>
            Determines whether it is possible to get a network account info.
            </summary>
            <param name="networkName">The network name (case-sensitive).</param>
            <returns>
              <c>true</c> if it is possible to get the network account info; otherwise, <c>false</c>.
              <remarks><c>false</c> is returned, if the network is not found.</remarks>
            </returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.CanRefreshAccountAccessTokenSecret(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Determines whether it is possible to refresh a network account access token secret.
            </summary>
            <param name="networkId">The network id.</param>
            <returns>
            <c>true</c> if it is possible to refresh the network account access token secret; otherwise, 
            <c>false</c>.
              
            <remarks><c>false</c> is returned, if the network is not found.</remarks>
            </returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.CanRefreshAccountAccessTokenSecret(System.String)">
            <summary>
            Determines whether it is possible to refresh a network account access token secret.
            </summary>
            <param name="networkName">The network name.</param>
            <returns>
            <c>true</c> if it is possible to refresh the network account access token secret; otherwise, 
            <c>false</c>.
              
            <remarks><c>false</c> is returned, if the network is not found.</remarks>
            </returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.GetNetwork(Sitecore.Social.Configuration.Model.Networks.NetworkSettings)">
            <summary>
            Gets the network.
            </summary>
            <param name="networkSettings">The network settings.</param>
            <returns>The network.</returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.GetNetwork(System.Func{Sitecore.Social.Configuration.Model.Networks.NetworkSettings,System.Boolean})">
            <summary>
            Gets the network.
            </summary>
            <param name="networkSettingsFilter">The network settings filter.</param>
            <returns>
            The network.
            </returns>
        </member>
        <member name="M:Sitecore.Social.NetworkBusinessManager.GetNetworkSettings(System.Func{Sitecore.Social.Configuration.Model.Networks.NetworkSettings,System.Boolean})">
            <summary>
            Gets the network settings.
            </summary>
            <param name="networkSettingsFilter">The network settings filter.</param>
            <returns>The network settings.</returns>
        </member>
        <member name="F:Sitecore.Social.Networks.Managers.ApplicationManager.ApplicationIdFieldID">
            <summary>
            The application id field identifier
            </summary>
        </member>
        <member name="F:Sitecore.Social.Networks.Managers.ApplicationManager.ApplicationSecretFieldID">
            <summary>
            The application secret field identifier
            </summary>
        </member>
        <member name="F:Sitecore.Social.Networks.Managers.ApplicationManager.PublicApiKeyFieldID">
            <summary>
            The public API key field identifier
            </summary>
        </member>
        <member name="F:Sitecore.Social.Networks.Managers.ApplicationManager.NetworkFieldID">
            <summary>
            The network field identifier
            </summary>
        </member>
        <member name="M:Sitecore.Social.Networks.Managers.ApplicationManager.Exists(Sitecore.Data.ID)">
            <summary>
            Checks if application with specified id exists in database.
            </summary>
            <param name="applicationId">The application id.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Networks.Managers.ApplicationManager.GetApplicationById(Sitecore.Data.ID)">
            <summary>
            Gets the application by id.
            </summary>
            <param name="applicationId">The application id.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.PostingPreferenceBusinessManager">
            <summary>
            Defines business methods to manage posting preferences of an user.
            </summary>
        </member>
        <member name="M:Sitecore.Social.PostingPreferenceBusinessManager.#ctor(Sitecore.Social.MessagePosting.PostingPreferences.Providers.IPostingPreferenceProvider,Sitecore.Social.Infrastructure.Wrappers.System.IMembershipWrapper)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.PostingPreferenceBusinessManager" /> class.
            </summary>
            <param name="postingPreferenceProvider">The posting preference provider.</param>
            <param name="membershipWrapper">The membership wrapper.</param>
        </member>
        <member name="P:Sitecore.Social.PostingPreferenceBusinessManager.PostingPreferenceProvider">
            <summary>
            Gets the posting preference provider.
            </summary>
            <value>
            The posting preference provider.
            </value>
        </member>
        <member name="P:Sitecore.Social.PostingPreferenceBusinessManager.MembershipWrapper">
            <summary>
            Gets the membership wrapper.
            </summary>
            <value>
            The membership wrapper.
            </value>
        </member>
        <member name="M:Sitecore.Social.PostingPreferenceBusinessManager.GetPostingPreference(System.String,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets user's posting preferences for the specific message.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="messageId">The message id.</param>
            <returns>
            The posting preference. If the posting preference is not found the <see cref="F:Sitecore.Social.Domain.Model.AutomaticPostingPreference.Default" /> value is used.
            </returns>
            <seealso cref="P:Sitecore.Social.Domain.Model.PostingPreference.AutomaticPostingPreference" />
            <exception cref="T:System.Exception">There is no item with this id.</exception>
            <exception cref="T:System.Exception">There is no item with this id.</exception>
        </member>
        <member name="M:Sitecore.Social.PostingPreferenceBusinessManager.SetPostingPreference(System.String,Sitecore.Social.Domain.Model.Identifier,Sitecore.Social.Domain.Model.AutomaticPostingPreference)">
            <summary>
            Sets user's posting preferences to the specific message.
            </summary>
            <param name="userName">The user name.</param>
            <param name="messageId">The message id.</param>
            <param name="automaticPostingPreference">The automatic posting preference.</param>
            <exception cref="T:System.Exception">There is no item with this id.</exception>
            <exception cref="T:System.Exception">The requested item should be inherited from the Message template.</exception>
            <exception cref="T:System.Exception">Unable to set preference to the anonymous user.</exception>
        </member>
        <member name="M:Sitecore.Social.PostingPreferenceBusinessManager.AllowAutomaticPostingByDefault">
            <summary>
            Determines if automatic posting is allowed by default.
            </summary>
            <returns>
              <c>true</c> if automatic posting is allowed by default, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.PostingPreferenceBusinessManager.AllowAutomaticPosting(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Allows automatic message posting.
            </summary>
            <param name="messageId">The message id.</param>
            <param name="userName">The user name.</param>
            <returns><c>true</c> if automatic posting is allowed, otherwise <c>false</c>.</returns>
            <exception cref="T:System.NotSupportedException">AutomaticPostingPreference is not supported</exception>
        </member>
        <member name="T:Sitecore.Social.Rules.GenderRule.GenderConditionManager">
            <summary>
            The class helps to receive users gender from social network properties in user profile.
            </summary>
        </member>
        <member name="F:Sitecore.Social.Rules.GenderRule.GenderConditionManager.socialProfileManager">
            <summary>
            The social profile manager
            </summary>
        </member>
        <member name="F:Sitecore.Social.Rules.GenderRule.GenderConditionManager.configurationFactory">
            <summary>
            The configuration factory
            </summary>
        </member>
        <member name="M:Sitecore.Social.Rules.GenderRule.GenderConditionManager.#ctor(Sitecore.Social.Domain.ISocialProfileManager,Sitecore.Social.Configuration.IConfigurationFactory)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Rules.GenderRule.GenderConditionManager"/> class.
            </summary>
            <param name="socialProfileManager">The social profile manager.</param>
            <param name="configurationFactory">The configuration factory.</param>
        </member>
        <member name="M:Sitecore.Social.Rules.GenderRule.GenderConditionManager.GetGender(System.String)">
            <summary>
            Gets the gender.
            </summary>
            <param name="userName">Name of the user.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Rules.GenderRule.GenderConditionManager.GetGender(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the gender.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Rules.GenderRule.GenderConditionManager.GetGender(Sitecore.Social.Domain.Model.SocialProfile,System.Func{System.Collections.Generic.IEnumerable{Sitecore.Social.Domain.Model.SocialProfile}})">
            <summary>
            Gets the gender.
            </summary>
            <param name="primarySocialProfile">The primary social profile.</param>
            <param name="getSecondarySocialProfiles">The get secondary social profiles delegate.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Rules.GenderRule.GenderConditionManager.GetGenderFromSocialProfile(Sitecore.Social.Domain.Model.SocialProfile)">
            <summary>
            Gets the gender from social profile.
            </summary>
            <param name="socialProfile">The social profile.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.Rules.GenderRule.IGenderConditionManager">
            <summary>
            Defines methods for getting gender from user and contact.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Rules.GenderRule.IGenderConditionManager.GetGender(System.String)">
            <summary>
            Gets the gender.
            </summary>
            <param name="userName">Name of the user.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Rules.GenderRule.IGenderConditionManager.GetGender(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets the gender.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.Rules.InterestedInRule.IInterestedInConditionManager">
            <summary>
            Defines methods for determining whether contact or user is interested in some specific information.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Rules.InterestedInRule.IInterestedInConditionManager.IsInterestedIn(System.String,System.String)">
            <summary>
            Determines whether user is interested in requested information.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="infoToSearch">The information to search</param>
            <returns>
              <c>true</c> if [is interested in]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Rules.InterestedInRule.IInterestedInConditionManager.IsInterestedIn(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Determines whether contact is interested in requested information.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="infoToSearch">The information to search.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.Rules.InterestedInRule.InterestedInConditionManager">
            <summary>
            The class helps you to check if user is interested in asked information trying to find requested information in social network properties in user profile.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Rules.InterestedInRule.InterestedInConditionManager.#ctor(Sitecore.Social.Configuration.IConfigurationFactory,Sitecore.Social.Domain.ISocialProfileManager,Sitecore.Social.NetworkProviders.NetworkFields.IAcceptedFieldsSelector)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Rules.InterestedInRule.InterestedInConditionManager" /> class.
            </summary>
            <param name="configurationFactory">The instance of ConfigurationFactory</param>
            <param name="socialProfileManager">The social profile manager.</param>
            <param name="acceptedFieldsSelector">The accepted fields selector.</param>
        </member>
        <member name="P:Sitecore.Social.Rules.InterestedInRule.InterestedInConditionManager.ConfigurationFactory">
            <summary>
            Gets or sets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="P:Sitecore.Social.Rules.InterestedInRule.InterestedInConditionManager.SocialProfileManager">
            <summary>
            Gets or sets the social profile manager.
            </summary>
            <value>
            The social profile manager.
            </value>
        </member>
        <member name="P:Sitecore.Social.Rules.InterestedInRule.InterestedInConditionManager.AcceptedFieldsSelector">
            <summary>
            Gets or sets the accepted fields selector.
            </summary>
            <value>
            The accepted fields selector.
            </value>
        </member>
        <member name="M:Sitecore.Social.Rules.InterestedInRule.InterestedInConditionManager.IsInterestedIn(System.String,System.String)">
            <summary>
            Determines whether user is interested in requested information.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="infoToSearch">The information to search</param>
            <returns>
              <c>true</c> if [is interested in]; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Rules.InterestedInRule.InterestedInConditionManager.IsInterestedIn(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Determines whether contact is interested in requested information.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="interestedInValue">The interested in value.</param>
            <returns></returns>
        </member>
        <member name="M:Sitecore.Social.Rules.InterestedInRule.InterestedInConditionManager.IsInterestedIn(System.Collections.Generic.List{Sitecore.Social.Domain.Model.SocialProfile},System.String)">
            <summary>
            Determines whether contact or user is interested in requested information.
            </summary>
            <param name="socialProfiles">The social profiles.</param>
            <param name="infoToSearch">The information to search.</param>
            <returns></returns>
        </member>
        <member name="T:Sitecore.Social.Search.ISearchProvider">
            <summary>
            Defines the methods that are used to search social network messages.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Search.ISearchProvider.GetMessagesByContainer(System.String)">
            <summary>
            Gets messages by container.
            </summary>
            <param name="container">The container.</param>
            <returns>The messages identifiers list. If no messages are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.ISearchProvider.GetMessagesByAccount(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets messages by account.
            </summary>
            <param name="accountId">The account id.</param>
            <returns>The messages identifiers list. If no messages are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.ISearchProvider.GetMessagesByWorkflowState(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets messages by workflow state.
            </summary>
            <param name="workflowStateId">The workflow state id.</param>
            <returns>The messages identifiers list. If no messages are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.ISearchProvider.GetPostedMessages">
            <summary>
            Gets all messages posted to a social network.
            </summary>
            <returns>The messages identifiers list. If no messages are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.ISearchProvider.GetNotPostedMessages">
            <summary>
            Gets all not posted messages to a social network.
            </summary>
            <returns>The messages identifiers list. If no messages are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.ISearchProvider.GetPostedMessages(System.DateTime)">
            <summary>
            Gets messages posted to a social network on a specific date.
            </summary>
            <param name="postedDate">The posted date.</param>
            <returns>The messages identifiers list. If no messages are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.ISearchProvider.GetMessagesByCreatedDate(System.DateTime)">
            <summary>
            Gets messages created on a specific date.
            </summary>
            <param name="createdDate">The created date.</param>
            <returns>The messages identifiers list. If no messages are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.ISearchProvider.GetMessagesReadyToPostAutomatically(System.Collections.Generic.IEnumerable{Sitecore.Social.Domain.Model.Identifier})">
            <summary>
            Gets messages identifiers that are ready to be posted automatically.
            </summary>
            <param name="accountIds">The account ids.</param>
            <returns>
            The messages identifiers list. If no messages are found an empty list is returned.
            </returns>
            <remarks>
            This method will search messages by the following parameters:
            <list type="bullet">
            <item><description>Content posting configuration.</description></item>
            <item><description>Content item is published.</description></item>
            <item><description>"Post automatically" is checked.</description></item>
            <item><description>Message is not in a workflow. Or message is in a final workflow state.</description></item>
            <item><description>Message is not posted.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Sitecore.Social.Search.ISearchProvider.UpdateSearchIndex(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Updates the search index.
            </summary>
            <param name="itemId">The item unique identifier.</param>
        </member>
        <member name="M:Sitecore.Social.Search.ISearchProvider.UpdateSearchIndexOnMessage(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Updates the search index on a message.
            </summary>
            <param name="messageItemId">The message item unique identifier.</param>
        </member>
        <member name="M:Sitecore.Social.Search.ISearchProvider.UpdateSearchIndexOnMessage(Sitecore.Social.Domain.Model.Identifier,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Updates the search index on a message.
            </summary>
            <param name="messageItemId">The message item unique identifier.</param>
            <param name="postingConfigurationItemId">The posting configuration item unique identifier.</param>
        </member>
        <member name="T:Sitecore.Social.Search.SearchItem">
            <summary>
            Defines the properties that are used to manage a search item.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Search.SearchItem.Container">
            <summary>
            Gets or sets the container id.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Search.SearchItem.AccountId">
            <summary>
            Gets or sets the account id.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Search.SearchItem.WorkflowStateId">
            <summary>
            Gets or sets the workflow state id.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Search.SearchItem.FinalWorkflowState">
            <summary>
            Gets or sets a value indicating whether an item is in final workflow state.
            </summary>
            <value>
              <c>true</c> if the item is in final workflow state; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="P:Sitecore.Social.Search.SearchItem.MessageCreatedDate">
            <summary>
            Gets or sets the created date.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Search.SearchItem.MessagePostedDate">
            <summary>
            Gets or sets the posted date.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Search.SearchItem.ItemPublished">
            <summary>
            Gets or sets the posted date.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Search.SearchItem.PostAutomatically">
            <summary>
            Gets or sets a value indicating whether post message automatically.
            </summary>
            <value>
              <c>true</c> if post automatically; otherwise, <c>false</c>.
            </value>
        </member>
        <member name="T:Sitecore.Social.Search.SearchProvider">
            <summary>
            Defines the methods that are used to search social network messages.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Search.SearchProvider"/> class.
            </summary>
        </member>
        <member name="P:Sitecore.Social.Search.SearchProvider.ConfigurationFactory">
            <summary>
            Gets or sets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="P:Sitecore.Social.Search.SearchProvider.SearchIndex">
            <summary>
            Gets the search index.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.GetMessagesByContainer(System.String)">
            <summary>
            Gets messages identifiers by message container.
            </summary>
            <param name="container"> The message container. </param>
            <returns>The messages identifiers list. If no messages are found, an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.GetMessagesByAccount(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets messages identifiers by account.
            </summary>
            <param name="accountId"> The account. </param>
            <returns>The messages identifiers list. If no messages are found, an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.GetMessagesByWorkflowState(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets messages identifiers by workflow state.
            </summary>
            <param name="workflowStateId"> The workflow state id. </param>
            <returns>The messages identifiers list. If no messages are found, an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.GetPostedMessages">
            <summary>
            Gets all posted messages identifiers.
            </summary>
            <returns>The messages identifiers list. If no messages are found, an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.GetNotPostedMessages">
            <summary>
            Gets all not posted messages identifiers.
            </summary>
            <returns>The messages identifiers list. If no messages are found, an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.GetPostedMessages(System.DateTime)">
            <summary>
            Gets messages identifiers by posted date.
            </summary>
            <param name="postedDate"> The posted date. </param>
            <returns>The messages identifiers list. If no messages are found, an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.GetMessagesByCreatedDate(System.DateTime)">
            <summary>
            Gets messages identifiers by created date.
            </summary>
            <param name="createdDate"> The created date. </param>
            <returns>The messages identifiers list. If no messages are found, an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.GetMessagesReadyToPostAutomatically(System.Collections.Generic.IEnumerable{Sitecore.Social.Domain.Model.Identifier})">
            <summary>
            Gets messages identifiers that are ready to be posted automatically.
            </summary>
            <param name="accountIds">The account ids.</param>
            <returns>
            The messages identifiers list. If no messages are found an empty list is returned.
            </returns>
            <remarks>
            This method will search messages by the following parameters:
            <list type="bullet">
            <item><description>Content posting configuration.</description></item>
            <item><description>Content item is published.</description></item>
            <item><description>"Post automatically" is checked.</description></item>
            <item><description>Message is not in a workflow. Or message is in a final workflow state.</description></item>
            <item><description>Message is not posted.</description></item>
            </list>
            </remarks>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.UpdateSearchIndex(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Updates the search index.
            </summary>
            <param name="itemId">The item unique identifier.</param>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.UpdateSearchIndexOnMessage(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Updates the search index on a message.
            </summary>
            <param name="messageItemId">The message item unique identifier.</param>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.UpdateSearchIndexOnMessage(Sitecore.Social.Domain.Model.Identifier,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Updates the search index on a message.
            </summary>
            <param name="messageItemId">The message item unique identifier.</param>
            <param name="postingConfigurationItemId">The posting configuration item unique identifier.</param>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.SearchItems(System.Linq.Expressions.Expression{System.Func{Sitecore.Social.Search.SearchItem,System.Boolean}})">
            <summary>
            Searches items in the search index by specific filter expression.
            </summary>
            <param name="whereExpression">
            The where expression.
            </param>
            <returns>The Identifiers list. If no Identifiers are found an empty list is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.SearchItems(System.Linq.Expressions.Expression{System.Func{Sitecore.Social.Search.SearchItem,System.Boolean}},System.Func{Sitecore.Social.Search.SearchItem,Sitecore.Social.Domain.Model.Identifier})">
            <summary>
            Searches items in the search index by specific filter expression.
            </summary>
            <param name="whereExpression">The where expression.</param>
            <param name="selector">The selector.</param>
            <returns>
            The Identifiers list. If no Identifiers are found an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.GetSearchIndex">
            <summary>
            Gets the index of the search.
            </summary>
            <returns>The index.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.TemplateIsMessageExpression">
            <summary>
            Builds "template is message" expression.
            </summary>
            <returns>The expression.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.TemplateIsPostingConfigurationExpression">
            <summary>
            Builds "template is posting configuration" expression.
            </summary>
            <returns>The expression.</returns>
        </member>
        <member name="M:Sitecore.Social.Search.SearchProvider.OrTemplateExpression(System.Collections.Generic.IEnumerable{Sitecore.Data.ID})">
            <summary>
            Builds "template or template or ..." expression.
            </summary>
            <param name="templateIds">The template ids.</param>
            <returns>
            The expression.
            </returns>
        </member>
        <member name="T:Sitecore.Social.SocialProfileBusinessManager">
            <summary>
            Defines business methods to manage social profiles.
            </summary>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.#ctor(Sitecore.Social.INetworkBusinessManager,Sitecore.Social.NetworkProviders.Interfaces.INetworkProviderFactory,Sitecore.Social.Connector.Providers.ISocialProfileProvider,Sitecore.Social.Configuration.IConfigurationFactory,Sitecore.Social.Infrastructure.Logging.ILogManager,Sitecore.Social.NetworkProviders.NetworkFields.IAcceptedFieldsSelector,Sitecore.Social.SitecoreAccess.Analytics.IContactDataProvider)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.SocialProfileBusinessManager" /> class.
            </summary>
            <param name="networkBusinessManager">The network business manager.</param>
            <param name="networkProviderFactory">The network provider factory.</param>
            <param name="socialProfileProvider">The social profile provider.</param>
            <param name="configurationFactory">The configuration factory.</param>
            <param name="logManager">The log manager.</param>
            <param name="acceptedFieldsSelector">The accepted fields selector.</param>
            <param name="contactDataProvider">The contact data provider.</param>
        </member>
        <member name="P:Sitecore.Social.SocialProfileBusinessManager.ContactDataProvider">
            <summary>
            Gets the contact data provider.
            </summary>
            <value>
            The contact data provider.
            </value>
        </member>
        <member name="P:Sitecore.Social.SocialProfileBusinessManager.NetworkBusinessManager">
            <summary>
            Gets the network business manager.
            </summary>
            <value>
            The network business manager.
            </value>
        </member>
        <member name="P:Sitecore.Social.SocialProfileBusinessManager.ConfigurationFactory">
            <summary>
            Gets the configuration factory.
            </summary>
            <value>
            The configuration factory.
            </value>
        </member>
        <member name="P:Sitecore.Social.SocialProfileBusinessManager.LogManager">
            <summary>
            Gets or sets the log manager.
            </summary>
            <value>
            The log manager.
            </value>
        </member>
        <member name="P:Sitecore.Social.SocialProfileBusinessManager.AcceptedFieldsSelector">
            <summary>
            Gets or sets the accepted fields selector.
            </summary>
            <value>
            The accepted fields selector.
            </value>
        </member>
        <member name="P:Sitecore.Social.SocialProfileBusinessManager.SocialProfileProvider">
            <summary>
            Gets the social profile provider.
            </summary>
            <value>
            The social profile provider.
            </value>
        </member>
        <member name="P:Sitecore.Social.SocialProfileBusinessManager.NetworkProviderFactory">
            <summary>
            Gets the network provider factory.
            </summary>
            <value>
            The network provider factory.
            </value>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.GetSocialProfiles(System.String)">
            <summary>
            Gets all social profiles of the user.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <returns>
            The social profiles list. If there are no profiles, an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.GetSocialProfiles(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets all social profiles of the contact.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <returns>
            The social profiles list. If there are no profiles, an empty list is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.GetSocialProfile(System.String,System.String)">
            <summary>
            Gets a social profile of the user in the specified network.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <param name="networkName">
            The network name.
            </param>
            <returns>
            The social profile. If there are no profiles, an empty profile is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.GetSocialProfile(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Gets a social profile of the contact in the specified network.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">The network name.</param>
            <returns>
            The social profile. If there are no profiles, an empty profile is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.GetPrimarySocialProfile(System.String)">
            <summary>
            Gets a primary social profile of the user.
            </summary>
            <param name="userName">Name of the user.</param>
            <returns>
            The social profile. If there are no profiles, an empty profile is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.GetPrimarySocialProfile(Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets a primary social profile of the contact.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <returns>
            The social profile. If there are no profiles, an empty profile is returned.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.SocialProfileExists(System.String,System.String)">
            <summary>
            Defines if there is a social profile in the specified network.
            </summary>
            <param name="userName">The user name.</param>
            <param name="networkName">The network name.</param>
            <returns>
              <c>true</c> if the social profile exists; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.SocialProfileExists(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Defines if there is a social profile in the specified network.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">The network name.</param>
            <returns>
              <c>true</c> if the social profile exists; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.SocialProfileFieldsExpired(System.String,System.String)">
            <summary>
            Defines if social profile fields are expired in the specified network.
            </summary>
            <param name="userName">The user name.</param>
            <param name="networkName">The network name.</param>
            <returns>
              <c>true</c> if the social profile fields are expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.SocialProfileFieldsExpired(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Defines if social profile fields are expired in the specified network.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">The network name.</param>
            <returns>
              <c>true</c> if the social profile fields are expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.SocialProfileFieldsExpired(Sitecore.Social.Domain.Model.SocialProfile)">
            <summary>
            Defines if social profile fields are expired.
            </summary>
            <param name="socialProfile">The social profile.</param>
            <returns>
              <c>true</c> if the social profile fields are expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.SocialProfileAccountCredentialsExpired(System.String,System.String)">
            <summary>
            Defines if social profile account credentials are expired in the specified network.
            </summary>
            <param name="userName">The user name.</param>
            <param name="networkName">The network name.</param>
            <returns>
              <c>true</c> if the social profile account credentials are expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.SocialProfileAccountCredentialsExpired(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Defines if social profile account credentials are expired in the specified network.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">The network name.</param>
            <returns>
              <c>true</c> if the social profile account credentials are expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.SocialProfileAccountCredentialsExpired(Sitecore.Social.Domain.Model.SocialProfile)">
            <summary>
            Defines if social profile account credentials are expired.
            </summary>
            <param name="socialProfile">The social profile.</param>
            <returns>
              <c>true</c> if the social profile account credentials are expired; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.AttachSocialProfile(System.String,Sitecore.Social.Domain.Model.SocialProfile)">
            <summary>
            Attaches a social profile to the specified user.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <param name="socialProfile">
            The social profile.
            </param>
            <exception cref="T:Sitecore.Social.Exceptions.AccountInUserDuplicatedException">Following user already has another attached account of the same network.</exception>
            <exception cref="T:Sitecore.Social.Exceptions.AccountInDomainDuplicatedException">There is another user with the same account in domain.</exception>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.AttachSocialProfile(Sitecore.Social.Domain.Model.Identifier,Sitecore.Social.Domain.Model.SocialProfile)">
            <summary>
            Attaches a social profile to the specified contact.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="socialProfile">The social profile.</param>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.AttachSocialProfile(System.String,Sitecore.Social.Domain.Model.SocialProfile,System.Boolean)">
            <summary>
            Attaches a social profile to the specified user.
            </summary>
            <param name="userName">The user name.</param>
            <param name="socialProfile">The social profile.</param>
            <param name="checkNetworkAccountAlreadyAttached">if set to <c>true</c> then check that network account is already attached.</param>
            <exception cref="T:Sitecore.Social.Exceptions.AccountInUserDuplicatedException"></exception>
            <exception cref="T:Sitecore.Social.Exceptions.AccountInDomainDuplicatedException"></exception>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.AttachSocialProfile(Sitecore.Social.Domain.Model.Identifier,Sitecore.Social.Domain.Model.SocialProfile,System.Boolean)">
            <summary>
            Attaches a social profile to the specified contact.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="socialProfile">The social profile.</param>
            <param name="checkNetworkAccountAlreadyAttached">if set to <c>true</c> then check that network account is already attached.</param>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.DetachSocialProfile(System.String,System.String)">
            <summary>
            Removes a social profile from the specified user.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <param name="networkName">
            The network name.
            </param>
            <exception cref="T:Sitecore.Social.Exceptions.AccountIsNotExistException">Following user has not account in this network.</exception>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.DetachSocialProfile(Sitecore.Social.Domain.Model.Identifier,System.String)">
            <summary>
            Removes a social profile from the specified contact.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">The network name.</param>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.UpdateSocialProfile(System.String,Sitecore.Social.Domain.Model.SocialProfile)">
            <summary>
            Updates a social profile of the specified user.
            </summary>
            <param name="userName">
            The user name.
            </param>
            <param name="socialProfile">
            The social profile.
            </param>
            <exception cref="T:Sitecore.Social.Exceptions.AccountIsNotExistException">Following user has not account in this network.</exception>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.UpdateSocialProfile(Sitecore.Social.Domain.Model.Identifier,Sitecore.Social.Domain.Model.SocialProfile)">
            <summary>
            Updates a social profile of the specified user.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="socialProfile">The social profile.</param>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.RetrieveSocialProfile(System.String,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.AccountCredentials)">
            <summary>
            Retrieves a social profile from the social network.
            </summary>
            <param name="networkName">The name of the network (case-sensitive).</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="accountCredentials">The account credentials.</param>
            <returns>The social profile. If the request couldn't be executed, an <see cref="F:Sitecore.Social.Domain.Model.SocialProfile.Empty" /> is returned.</returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.RetrieveSocialProfileIdentityData(System.String,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.AccountCredentials)">
            <summary>
            Retrieves the social profile identity data from the social network.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="accountCredentials">The account credentials.</param>
            <returns>
            The social profile identity data.
            </returns>
            <exception cref="T:System.InvalidCastException">The network provider is not implemented IGetAccountInfo interface.</exception>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.RetrieveSocialProfileFields(System.String,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.AccountCredentials)">
            <summary>
            Retrieves the social profile fields from the social network.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="accountCredentials">The account credentials.</param>
            <returns>
            The social profile fields.
            </returns>
            <exception cref="T:System.InvalidCastException">The network provider is not implemented IGetAccountInfo interface.</exception>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.RefreshSocialProfiles(System.String,System.Boolean,System.Boolean)">
            <summary>
            Refreshes all social profiles attached to a user from social networks.
            </summary>
            <param name="userName">The user name.</param>
            <param name="refreshAsync">if set to <c>true</c> the social profiles will be refreshed asynchronously.</param>
            <param name="forceRefresh">if set to <c>true</c> the expiration configuration of the social profile will be ignored and the social profiles will be refreshed in any case.</param>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.RefreshSocialProfiles(Sitecore.Social.Domain.Model.Identifier,System.Boolean,System.Boolean)">
            <summary>
            Refreshes all social profiles attached to a contact from social networks.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="refreshAsync">if set to <c>true</c> the social profiles will be refreshed asynchronously.</param>
            <param name="forceRefresh">if set to <c>true</c> the expiration configuration of the social profile will be ignored and the social profiles will be refreshed in any case.</param>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.RefreshSocialProfile(System.String,System.String,System.Boolean)">
            <summary>
            Refreshes the social profile attached to a user from the specified network.
            </summary>
            <param name="userName">The user name.</param>
            <param name="networkName">The network name.</param>
            <param name="refreshAsync">if set to <c>true</c> the social profile will be refreshed asynchronously.</param>
            <remarks>
            The expiration configuration of the social profile will be ignored and the social profile will be refreshed in any case.
            </remarks>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.RefreshSocialProfile(Sitecore.Social.Domain.Model.Identifier,System.String,System.Boolean)">
            <summary>
            Refreshes the social profile attached to a contact from the specified network.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">The network name.</param>
            <param name="refreshAsync">if set to <c>true</c> the social profile will be refreshed asynchronously.</param>
            <remarks>
            The expiration configuration of the social profile will be ignored and the social profile will be refreshed in any case.
            </remarks>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.RefreshSocialProfileFields(System.String,System.String,System.Boolean)">
            <summary>
            Refreshes the social profile fields attached to a user from the specified network.
            </summary>
            <param name="userName">The user name.</param>
            <param name="networkName">The network name.</param>
            <param name="refreshAsync">if set to <c>true</c> the social profile fields will be refreshed asynchronously.</param>
            <remarks>
            The expiration configuration of the social profile will be ignored and the social profile fields will be refreshed in any case.
            </remarks>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.RefreshSocialProfileFields(Sitecore.Social.Domain.Model.Identifier,System.String,System.Boolean)">
            <summary>
            Refreshes the social profile fields attached to a contact from the specified network.
            </summary>
            <param name="contactId">The contact identifier.</param>
            <param name="networkName">The network name.</param>
            <param name="refreshAsync">if set to <c>true</c> the social profile fields will be refreshed asynchronously.</param>
            <remarks>
            The expiration configuration of the social profile will be ignored and the social profile fields will be refreshed in any case.
            </remarks>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.RefreshAccessTokenSecret(System.String,System.String,Sitecore.Social.Domain.Model.SocialProfileIdentityData,System.Nullable{System.TimeSpan})">
            <summary>
            Refreshes the access token secret.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="userName">Name of the user.</param>
            <param name="socialProfileIdentityData">The social profile identity data.</param>
            <param name="skipIfUsefulLifeExceeds">The remaining period of time to the expiration date the access token secret is treated as expired.</param>
            <returns><c>true</c> if the access token has been refreshed successfully or is not expired yet; otherwise,<c>false</c>.</returns>
            <exception cref="T:Sitecore.Social.NetworkProviders.Exceptions.InterfaceIsNotSupportedByProviderException">Occurs if the network provider doesn't support <see cref="T:Sitecore.Social.NetworkProviders.Interfaces.IAccessTokenSecretRenewal"/> interface.</exception>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.MatchUserForNetworkAccount(System.String,Sitecore.Social.Domain.Model.SocialProfileIdentityData)">
            <summary>
            Matches the user for network account based on social profile identity data.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="socialProfileIdentityData">The social profile identity data.</param>
            <returns>
            The user name.
            </returns>
            <remarks>
            If no users are found a new one will be created.
            </remarks>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.MatchUserForNetworkAccount(System.String,Sitecore.Social.Domain.Model.SocialProfileIdentityData,System.Boolean)">
            <summary>
            Matches the user for network account based on social profile identity data.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="socialProfileIdentityData">The social profile identity data.</param>
            <param name="createNewUserIfNoExistingFound"><c>true</c> new user will be created if no existing is found; otherwise, <c>false</c>.</param>
            <returns>
            The user name.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.GetUserNamesByNetworkAccountId(System.String,System.String)">
            <summary>
            Gets the user names by network account identifier.
            </summary>
            <param name="networkName">Name of the network.</param>
            <param name="networkAccountId">The network account identifier.</param>
            <returns>
            The user names.
            </returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.CreateCoreAccountFrom(System.String,Sitecore.Social.Domain.Model.ApplicationCredentials,Sitecore.Social.Domain.Model.AccountCredentials)">
            <summary>
            Creates the core account from the provided parameters.
            </summary>
            <param name="networkName">The name of the network.</param>
            <param name="applicationCredentials">The application credentials.</param>
            <param name="accountCredentials">The account credentials.</param>
            <returns>The<see cref="T:Sitecore.Social.NetworkProviders.Account"/> instance.</returns>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.RefreshSocialProfile(System.String,System.String)">
            <summary>
            Refreshes the social profile.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.RefreshSocialProfileFields(System.String,System.String)">
            <summary>
            Refreshes the social profile fields.
            </summary>
            <param name="userName">Name of the user.</param>
            <param name="networkName">Name of the network.</param>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.RunRefreshSocialProfile(System.Object)">
            <summary>
            Runs a social profile refresh.
            </summary>
            <param name="parameters">The <see cref="T:Sitecore.Social.Connector.RefreshSocialProfileDataContainer"/>.</param>
            <remarks>
            This is used to run a social profile refresh in a separate thread.
            </remarks>
        </member>
        <member name="M:Sitecore.Social.SocialProfileBusinessManager.RunRefreshSocialProfileFields(System.Object)">
            <summary>
            Runs a social profile fields refresh.
            </summary>
            <param name="parameters">The <see cref="T:Sitecore.Social.Connector.RefreshSocialProfileDataContainer"/>.</param>
            <remarks>
            This is used to run a social profile fields refresh in a separate thread.
            </remarks>
        </member>
        <member name="T:Sitecore.Social.StatisticsStatusFactory">
            <summary>
            Represents the factory of receiving statistics status by the core status.
            </summary>
        </member>
        <member name="M:Sitecore.Social.StatisticsStatusFactory.GetStatisticsStatus(Sitecore.Social.MessagePosting.MessageStatistics.StatisticsUpdateStatus)">
            <summary>
            Gets the statistics status by core status.
            </summary>
            <param name="updateStatus">The update status.</param>
            <returns>The statistics status.</returns>
            <exception cref="T:System.ArgumentException">Unknown message update status.</exception>
        </member>
        <member name="T:Sitecore.Social.Strategies.IMessageDisplayNameStrategy">
            <summary>
            Message display name strategy interface.
            </summary>
        </member>
        <member name="M:Sitecore.Social.Strategies.IMessageDisplayNameStrategy.GetDisplayName(Sitecore.Social.Domain.Model.MessageData,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets message display name.
            </summary>
            <param name="messageData">The message data.</param>
            <param name="accountId">The account id.</param>
            <returns>The message display name.</returns>
        </member>
        <member name="T:Sitecore.Social.Strategies.MessageDisplayNameStrategy">
            <summary>
            Message display name strategy
            </summary>
        </member>
        <member name="M:Sitecore.Social.Strategies.MessageDisplayNameStrategy.#ctor(Sitecore.Social.IAccountBusinessManager)">
            <summary>
            Initializes a new instance of the <see cref="T:Sitecore.Social.Strategies.MessageDisplayNameStrategy"/> class.
            </summary>
            <param name="accountBusinessManager">The account business manager</param>
        </member>
        <member name="P:Sitecore.Social.Strategies.MessageDisplayNameStrategy.AccountBusinessManager">
            <summary>
            Gets account business manager.
            </summary>
            <value>
            The account business manager.
            </value>
        </member>
        <member name="M:Sitecore.Social.Strategies.MessageDisplayNameStrategy.GetDisplayName(Sitecore.Social.Domain.Model.MessageData,Sitecore.Social.Domain.Model.Identifier)">
            <summary>
            Gets message display name.
            </summary>
            <param name="messageData">The message data.</param>
            <param name="accountId">The account id.</param>
            <returns>The message display name.</returns>
        </member>
    </members>
</doc>
