@using Sitecore.Configuration
@using Sitecore.Extensions.StringExtensions
@using Sitecore.Mvc
@using Sitecore.Mvc.Presentation
@using Sitecore.Text
@using Sitecore.Web.UI.Controls.Common.UserControls
@model RenderingModel
@{
  var control = Html.Sitecore().Controls().GetUserControl(Model.Rendering);
  control.Requires.Script("controls", "Pipeline.js");

  var pipelineItemId = control.GetString("PipelineItemId");
  var loadMode = control.GetString("LoadMode", "", "Immediately");
  var useBundle = control.GetBool("UseBundle", true);

  var customHandler = SpeakSettings.Html.RequireJsCustomHandler;
  var virtualFolder = Sitecore.Context.Site.VirtualFolder;
  if (virtualFolder.EndsWith("/"))
  {
    virtualFolder = virtualFolder.Left(virtualFolder.Length - 1);
  }

  if (!string.IsNullOrEmpty(virtualFolder))
  {
    if (customHandler.StartsWith("/"))
    {
      customHandler = customHandler.Mid(1);
    }

    customHandler = virtualFolder + "/" + customHandler;
  }

  var pipelineItem = Model.Rendering.Item.Database.GetItem(new Sitecore.Data.ID(pipelineItemId));
  var pipelineName = pipelineItem["PipelineName"];

  var pipelineScriptUrl = new UrlString(customHandler + "pipelines/pipeline.js");
  pipelineScriptUrl.Add("id", pipelineItemId);
  
  if (useBundle)
  {
    pipelineScriptUrl.Add("b", "1");
  }

  if (string.IsNullOrEmpty(pipelineName))
  {
    pipelineName = pipelineItem.Name;
  }
  
  control.SetAttribute("data-sc-component", "Pipeline");
  control.SetAttribute("data-sc-pipelinename", pipelineName);
  control.SetAttribute("data-sc-pipelineurl", pipelineScriptUrl.ToString());
  control.SetAttribute("data-sc-pipelineargs", control.GetString("PipelineArgs", "pipelineArgs", string.Empty));
  control.SetAttribute("data-sc-trigger", control.GetString("Trigger", "trigger", string.Empty));
  control.SetAttribute("data-sc-targetcontrol", control.GetString("TargetControl", "targetControl", string.Empty));
  control.SetAttribute("data-sc-loadmode", loadMode.ToLowerInvariant());

  var output = string.Empty;
  if (string.Compare(loadMode, "Inline", StringComparison.InvariantCultureIgnoreCase) == 0)
  {
    var pipeline = new Sitecore.Resources.Pipelines.ResolveScript.Pipeline();
    var script = pipeline.WriteScript(pipelineItem, pipelineScriptUrl.ToString(), useBundle, true);
    output = script.Output.ToString();
    control.SetAttribute(HtmlTextWriterAttribute.Type, "text/javascript");
  }
  else
  {
    control.SetAttribute(HtmlTextWriterAttribute.Type, "text/x-sitecore-pipeline");
  }

  var htmlAttributes = control.HtmlAttributes;
}
<script @htmlAttributes>
  @Html.Raw(output)
</script>