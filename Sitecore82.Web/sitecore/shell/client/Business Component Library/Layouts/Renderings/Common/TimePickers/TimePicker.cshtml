@using Sitecore.Mvc
@using Sitecore.Mvc.Presentation
@using Sitecore.Web.UI.Controls.Common.UserControls
@model RenderingModel
@{
  var rendering = this.Html.Sitecore().Controls().GetUserControl(this.Model.Rendering);
  rendering.Class = "sc-timepicker time form-control";
  rendering.Requires.Script("business", "TimePicker.js");
  rendering.DataBind = "visible: isVisible,enable: isEnabled, readonly: isReadOnly";

  var isDefaultCurrentTime = rendering.GetBool("IsDefaultCurrentTime", "isDefaultCurrentTime");
  var time = rendering.GetString("Time", "time");
  var isAmPmFormat = rendering.GetBool("IsAMPMFormat", "isAMPMFormat");
  var timeStep = rendering.GetString("TimeStep", "timeStep", "30");
  var minTime = rendering.GetString("MinTime", "minTime");
  var maxTime = rendering.GetString("MaxTime", "maxTime");
  var isEnabled = rendering.GetBool("IsEnabled", "isEnabled", true);
  var isReadOnly = rendering.GetBool("IsReadOnly", "isReadOnly", false);  
  var isAnyTypedTimeAllowed  = rendering.GetBool("IsAnyTypedTimeAllowed ", "isAnyTypedTimeAllowed ");
  
  rendering.Attributes["data-sc-isdefaultcurrenttime"] = isDefaultCurrentTime.ToString().ToLowerInvariant();
  rendering.Attributes["data-sc-isanytypedtimeallowed"] = isAnyTypedTimeAllowed .ToString().ToLowerInvariant();
  rendering.Attributes["data-sc-isampmformat"] = isAmPmFormat.ToString().ToLowerInvariant();
  rendering.Attributes["data-sc-timestep"] = timeStep;
  rendering.Attributes["data-sc-maxtime"] = maxTime;
  rendering.Attributes["data-sc-mintime"] = minTime;
  rendering.Attributes["data-sc-isenabled"] = isEnabled.ToString().ToLowerInvariant();
  rendering.Attributes["data-sc-isreadonly"] = isReadOnly.ToString().ToLowerInvariant();
  rendering.Attributes["data-sc-time"] = time;
  
  var htmlAttributes = rendering.HtmlAttributes;   
}
<input type="text" @htmlAttributes />