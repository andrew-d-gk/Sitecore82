@using Sitecore
@using Sitecore.Mvc

@model Sitecore.Speak.Components.Models.NotScriptCapabilityRenderingModel
@{
  Model.DataBind.IsVisible();
  var actionsPlaceHolder = Html.Sitecore().Placeholder(Model.ControlId + ".Actions");
  var backPlaceHolder = Html.Sitecore().Placeholder(Model.ControlId + ".Back");
  var contextSwitchPlaceHolder = Html.Sitecore().Placeholder(Model.ControlId + ".ContextSwitch");
  var isActionsEmpty = string.IsNullOrEmpty(actionsPlaceHolder.ToString());
  var isBackEmpty = string.IsNullOrEmpty(backPlaceHolder.ToString());
  var isContextSwitchEmpty = string.IsNullOrEmpty(contextSwitchPlaceHolder.ToString());
}

@if (!isActionsEmpty || !isBackEmpty || !isContextSwitchEmpty)
{
  <div @Model.HtmlAttributes class="sc-action-bar">
    <div class="sc-applicationHeader-back">
      @Html.Raw(ClientHost.Web.PlaceHolder(Model.ControlId + ".Back").ToHtmlString())
    </div>
    <div class="sc-applicationHeader-contextSwitcher">
      @Html.Raw(ClientHost.Web.PlaceHolder(Model.ControlId + ".ContextSwitch").ToHtmlString())
    </div>
    <div class="sc-applicationHeader-actions">
      @Html.Raw(ClientHost.Web.PlaceHolder(Model.ControlId + ".Actions").ToHtmlString())
    </div>
  </div>
}