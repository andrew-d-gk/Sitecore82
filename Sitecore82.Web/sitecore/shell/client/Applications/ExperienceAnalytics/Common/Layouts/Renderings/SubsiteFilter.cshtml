@using Newtonsoft.Json
@using Sitecore.Exceptions
@using Sitecore.ExperienceAnalytics.Client
@using Sitecore.Mvc
@using Sitecore.Web.UI.Controls.Common.Renderings
@using Sitecore.Web.UI.Controls.Common.Texts
@using Sitecore.Web.UI.Controls.Common.UserControls
@using UserControl = Sitecore.Web.UI.Controls.Common.UserControls.UserControl
@model Sitecore.Mvc.Presentation.RenderingModel
@{
  var rendering = Html.Sitecore().Controls().GetUserControl(Model.Rendering);

  rendering.Class = "sc-SubsiteFilter";
  rendering.Requires.Script("client", "SubsiteFilter.js");
  rendering.Attributes.Add("data-bind", "visible: isVisible");
  rendering.HasNestedComponents = true;

  var errorMessages = new
  {
    InvalidSubsite = Helper.GetTextValue(Globals.System.Texts.ErrorMessages.InvalidSubsite),
    ConfigurationError = Helper.GetTextValue(Globals.System.Texts.ErrorMessages.ConfigurationError)
  };

  rendering.Attributes.Add("data-sc-errortexts", JsonConvert.SerializeObject(errorMessages));
}

@EmbedSubsiteFilter(rendering)

@helper EmbedSubsiteFilter(UserControl rendering)
{
    var renderingId = rendering.ControlId;
    var helper = new RenderingHelper(Html, renderingId);
    var sites = helper.GetSiteComboBoxItems();

    helper.MakeBorder("ContentWrapper", renderingId + "DropDownWrapper", contentWrapper =>
    {
        helper.MakeRow("TextBorder", contentWrapper, true, textBorder => helper.MakeText("Text", textBorder, Globals.System.Texts.DefineCustomFilter, TextType.Title));

        helper.MakeRow("ControlsRow", contentWrapper, true, controlsRow =>
        {
            helper.MakeComboBox("SubsiteComboBox", controlsRow, sites);
            helper.MakeButton("SubmitButton", controlsRow, Globals.System.Texts.Apply.Guid.ToString(), "Primary");
            helper.MakeButton("ResetButton", controlsRow, Globals.System.Texts.RevertFiltersToStandard.Guid.ToString());
        });
    }); 
    
    // Rendering
    <div @rendering.HtmlAttributes>
        @Html.Sitecore().Controls().Rendering(Html, Globals.Bcl.Renderings.Containers.Border, renderingId + "DropDownWrapper", "", new
                                                {
                                                    UsePadding = true
                                                })
    </div>
}